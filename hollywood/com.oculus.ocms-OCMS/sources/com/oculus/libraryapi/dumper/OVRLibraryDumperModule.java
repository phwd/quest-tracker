package com.oculus.libraryapi.dumper;

import com.facebook.fab.dumper.base.DumperBaseModule;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AddToMultiBind;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorModule;
import com.facebook.stetho.dumpapp.DumperPlugin;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.appmanager.info.InfoModule;
import com.oculus.appmanager.installer.common.CommonModule;
import com.oculus.common.init.AppInitModule;
import com.oculus.libraryapi.OVRLibraryModule;

@InjectorModule
public abstract class OVRLibraryDumperModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_libraryapi_dumper_OVRLibraryDumperPlugin_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_libraryapi_dumper_OVRLibraryDumperPlugin_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(OVRLibraryDumperPlugin.class)));
    }

    /* access modifiers changed from: package-private */
    @AddToMultiBind
    public abstract DumperPlugin addOVRLibraryDumperPlugin(OVRLibraryDumperPlugin oVRLibraryDumperPlugin);

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForOVRLibraryDumperModule {
        AutoGeneratedBindingsForOVRLibraryDumperModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(DumperBaseModule.class);
                binder.require(BundledAndroidModule.class);
                binder.require(InfoModule.class);
                binder.require(CommonModule.class);
                binder.require(AppInitModule.class);
                binder.require(OVRLibraryModule.class);
                binder.bindMulti(DumperPlugin.class).add(OVRLibraryDumperPlugin.class);
                binder.bind(OVRLibraryDumperPlugin.class).toProvider(new OVRLibraryDumperPluginAutoProvider());
            }
        }
    }
}
