package com.oculus.mobileconfig.updater;

import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AddToMultiBind;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorModule;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.auth.credentials.CredentialsModule;
import com.oculus.common.init.AppInitModule;
import com.oculus.common.init.INeedInit;
import com.oculus.config.interfaces.ConfigInterfacesModule;
import com.oculus.errorreporting.interfaces.InterfacesModule;
import com.oculus.executors.ExecutorsModule;
import com.oculus.logging.utils.UtilsModule;
import com.oculus.mobileconfig.init.MobileConfigInitModule;
import com.oculus.xanalytics.OculusXAnalyticsModule;

@InjectorModule
public abstract class MobileConfigUpdaterModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_mobileconfig_updater_MobileConfigUpdaterInit_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_mobileconfig_updater_MobileConfigUpdaterInit_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(MobileConfigUpdaterInit.class)));
    }

    /* access modifiers changed from: package-private */
    @AddToMultiBind
    public abstract INeedInit addMobileConfigInit(MobileConfigUpdaterInit mobileConfigUpdaterInit);

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForMobileConfigUpdaterModule {
        AutoGeneratedBindingsForMobileConfigUpdaterModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.require(CredentialsModule.class);
                binder.require(AppInitModule.class);
                binder.require(ConfigInterfacesModule.class);
                binder.require(InterfacesModule.class);
                binder.require(ExecutorsModule.class);
                binder.require(UtilsModule.class);
                binder.require(MobileConfigInitModule.class);
                binder.require(OculusXAnalyticsModule.class);
                binder.bindMulti(INeedInit.class).add(MobileConfigUpdaterInit.class);
                binder.bind(MobileConfigUpdaterInit.class).toProvider(new MobileConfigUpdaterInitAutoProvider());
                binder.bindComponent(MobileConfigUpdaterJobService.class).toProvider(new MobileConfigUpdaterJobServiceAutoProvider());
            }
        }
    }
}
