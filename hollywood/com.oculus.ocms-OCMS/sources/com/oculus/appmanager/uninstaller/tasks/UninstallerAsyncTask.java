package com.oculus.appmanager.uninstaller.tasks;

import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.ResultReceiver;
import android.text.TextUtils;
import com.facebook.debug.log.BLog;
import com.facebook.inject.Assisted;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.secure.pendingintent.SecurePendingIntent;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.appmanager.info.model.InstallerResultError;
import com.oculus.appmanager.uninstaller.events.UninstallCompleteEvent;
import com.oculus.appmanager.uninstaller.events.UninstallCompleteEventProvider;
import com.oculus.appmanager.uninstaller.events.UninstallRequestedEvent;
import com.oculus.appmanager.uninstaller.events.UninstallResponse;
import com.oculus.appmanager.uninstaller.events.UninstallerEventBus;
import com.oculus.appmanager.uninstaller.receivers.UninstallBroadcastReceiver;
import com.oculus.appmanager.uninstaller.tasks.TasksModule;
import com.oculus.logging.utils.EventManager;
import com.oculus.logging.utils.UtilsModule;
import javax.annotation.Nullable;

@Dependencies({"_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_logging_utils_EventManager_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_appmanager_uninstaller_events_UninstallCompleteEventProvider_ULSEP_BINDING_ID"})
public class UninstallerAsyncTask extends AsyncTask<Void, Void, UninstallResult> {
    public static final String CALLING_PACKAGE = "calling_package";
    public static final String EVENT_VALUE = "event_value";
    private static final Class<UninstallerAsyncTask> TAG = UninstallerAsyncTask.class;
    public static final String UNINSTALL_STARTED = "moonlight_uninstall_started";
    private InjectionContext _UL_mInjectionContext;
    @Nullable
    private final String mCallingPackage;
    private final String mPackageName;
    @Nullable
    private final ResultReceiver mResultReceiver;
    @Inject
    @Eager
    private final UninstallCompleteEventProvider mUninstallCompleteEventProvider;

    /* access modifiers changed from: package-private */
    public enum UninstallResult {
        UNINSTALL_SUCCESS,
        UNINSTALL_FAILED,
        UNINSTALL_PENDING
    }

    @AutoGeneratedAccessMethod
    public static final UninstallerAsyncTaskProvider _UL__ULSEP_com_oculus_appmanager_uninstaller_tasks_UninstallerAsyncTaskProvider_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (UninstallerAsyncTaskProvider) UL.factorymap.get(TasksModule.UL_id._UL__ULSEP_com_oculus_appmanager_uninstaller_tasks_UninstallerAsyncTaskProvider_ULSEP_BINDING_ID, injectorLike);
    }

    @Inject
    public UninstallerAsyncTask(InjectorLike injectorLike, @Assisted String str, @Assisted @Nullable String str2, @Assisted @Nullable ResultReceiver resultReceiver) {
        this._UL_mInjectionContext = new InjectionContext(2, injectorLike);
        this.mUninstallCompleteEventProvider = UninstallCompleteEvent._UL__ULSEP_com_oculus_appmanager_uninstaller_events_UninstallCompleteEventProvider_ULSEP_ACCESS_METHOD(injectorLike);
        this.mPackageName = str;
        this.mCallingPackage = str2;
        this.mResultReceiver = resultReceiver;
    }

    public static boolean canUninstall(Context context, String str) {
        if (TextUtils.isEmpty(str)) {
            return false;
        }
        try {
            context.getPackageManager().getPackageInfo(str, 0);
            return true;
        } catch (PackageManager.NameNotFoundException unused) {
            return false;
        }
    }

    public boolean canUninstall() {
        return canUninstall((Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext), this.mPackageName);
    }

    /* access modifiers changed from: protected */
    public void onPreExecute() {
        if (canUninstall()) {
            UninstallerEventBus.getInstance().post(new UninstallRequestedEvent(this.mPackageName));
            ((EventManager) FbInjector.lazyInstance(1, UtilsModule.UL_id._UL__ULSEP_com_oculus_logging_utils_EventManager_ULSEP_BINDING_ID, this._UL_mInjectionContext)).createEvent("moonlight_uninstall_started").appendStorageInformation().addExtra("event_value", this.mPackageName).addExtra("calling_package", this.mCallingPackage).logAndRelease();
        }
    }

    /* access modifiers changed from: protected */
    public UninstallResult doInBackground(Void... voidArr) {
        if (!canUninstall()) {
            BLog.e(TAG, "Cannot uninstall package: %s", this.mPackageName);
            return UninstallResult.UNINSTALL_FAILED;
        }
        deletePackageViaPackageInstaller(this.mPackageName);
        return UninstallResult.UNINSTALL_PENDING;
    }

    private void deletePackageViaPackageInstaller(String str) {
        Intent intent = new Intent();
        intent.setClass((Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext), UninstallBroadcastReceiver.class);
        intent.setAction(UninstallBroadcastReceiver.ACTION_UNINSTALL_CALLBACK);
        intent.addCategory(str);
        Bundle bundle = new Bundle();
        bundle.putString(UninstallBroadcastReceiver.EXTRA_CALLING_PACKAGE, this.mCallingPackage);
        ResultReceiver resultReceiver = this.mResultReceiver;
        if (resultReceiver != null) {
            bundle.putParcelable("result_receiver", resultReceiver);
        }
        intent.putExtras(bundle);
        ((Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getPackageManager().getPackageInstaller().uninstall(str, SecurePendingIntent.builder().fromIntentWithExtras(intent, ((Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getClassLoader()).buildForBroadcast((Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext), 0, 1073741824).getIntentSender());
    }

    /* access modifiers changed from: package-private */
    /* renamed from: com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask$1  reason: invalid class name */
    public static /* synthetic */ class AnonymousClass1 {
        static final /* synthetic */ int[] $SwitchMap$com$oculus$appmanager$uninstaller$tasks$UninstallerAsyncTask$UninstallResult = new int[UninstallResult.values().length];

        /* JADX WARNING: Can't wrap try/catch for region: R(8:0|1|2|3|4|5|6|8) */
        /* JADX WARNING: Failed to process nested try/catch */
        /* JADX WARNING: Missing exception handler attribute for start block: B:3:0x0014 */
        /* JADX WARNING: Missing exception handler attribute for start block: B:5:0x001f */
        static {
            /*
                com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask$UninstallResult[] r0 = com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask.UninstallResult.values()
                int r0 = r0.length
                int[] r0 = new int[r0]
                com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask.AnonymousClass1.$SwitchMap$com$oculus$appmanager$uninstaller$tasks$UninstallerAsyncTask$UninstallResult = r0
                int[] r0 = com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask.AnonymousClass1.$SwitchMap$com$oculus$appmanager$uninstaller$tasks$UninstallerAsyncTask$UninstallResult     // Catch:{ NoSuchFieldError -> 0x0014 }
                com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask$UninstallResult r1 = com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask.UninstallResult.UNINSTALL_FAILED     // Catch:{ NoSuchFieldError -> 0x0014 }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0014 }
                r2 = 1
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0014 }
            L_0x0014:
                int[] r0 = com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask.AnonymousClass1.$SwitchMap$com$oculus$appmanager$uninstaller$tasks$UninstallerAsyncTask$UninstallResult     // Catch:{ NoSuchFieldError -> 0x001f }
                com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask$UninstallResult r1 = com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask.UninstallResult.UNINSTALL_SUCCESS     // Catch:{ NoSuchFieldError -> 0x001f }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x001f }
                r2 = 2
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x001f }
            L_0x001f:
                int[] r0 = com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask.AnonymousClass1.$SwitchMap$com$oculus$appmanager$uninstaller$tasks$UninstallerAsyncTask$UninstallResult     // Catch:{ NoSuchFieldError -> 0x002a }
                com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask$UninstallResult r1 = com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask.UninstallResult.UNINSTALL_PENDING     // Catch:{ NoSuchFieldError -> 0x002a }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x002a }
                r2 = 3
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x002a }
            L_0x002a:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: com.oculus.appmanager.uninstaller.tasks.UninstallerAsyncTask.AnonymousClass1.<clinit>():void");
        }
    }

    /* access modifiers changed from: protected */
    public void onPostExecute(UninstallResult uninstallResult) {
        int i = AnonymousClass1.$SwitchMap$com$oculus$appmanager$uninstaller$tasks$UninstallerAsyncTask$UninstallResult[uninstallResult.ordinal()];
        if (i == 1) {
            UninstallerEventBus.getInstance().post(UninstallResponse.failure(this.mPackageName, InstallerResultError.UNKNOWN_ERROR, this.mResultReceiver));
        } else if (i != 2) {
            if (i != 3) {
            }
        } else {
            UninstallerEventBus.getInstance().post(UninstallResponse.success(this.mPackageName, this.mResultReceiver));
        }
    }
}
