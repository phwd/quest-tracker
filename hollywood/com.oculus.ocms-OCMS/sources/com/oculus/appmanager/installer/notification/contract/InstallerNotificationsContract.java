package com.oculus.appmanager.installer.notification.contract;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.secure.context.SecureContext;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.UL;
import com.oculus.appmanager.installer.notification.contract.ContractModule;
import java.io.Serializable;
import javax.inject.Inject;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID"})
public class InstallerNotificationsContract {
    public static final String ACTION_DISMISS = "dismiss";
    public static final String ACTION_SET_CANCELED = "canceled";
    public static final String ACTION_SET_COMPLETED = "completed";
    public static final String ACTION_SET_DOWNLOADING = "downloading";
    public static final String ACTION_SET_FAILED_DOWNLOAD = "failed_download";
    public static final String ACTION_SET_FAILED_INSTALL = "failed_install";
    public static final String ACTION_SET_INSTALLING = "installing";
    public static final String ACTION_UPDATE_PROGRESS = "update_progress";
    public static final String EXTRA_DISMISS_STATE = "dismiss_state";
    public static final String EXTRA_IDENTIFIER = "identifier";
    public static final String EXTRA_IS_UPDATE = "is_update";
    private InjectionContext _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_appmanager_installer_notification_contract_InstallerNotificationsContract_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(ContractModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_notification_contract_InstallerNotificationsContract_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final InstallerNotificationsContract _UL__ULSEP_com_oculus_appmanager_installer_notification_contract_InstallerNotificationsContract_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (InstallerNotificationsContract) UL.factorymap.get(ContractModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_notification_contract_InstallerNotificationsContract_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final InstallerNotificationsContract _UL__ULSEP_com_oculus_appmanager_installer_notification_contract_InstallerNotificationsContract_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new InstallerNotificationsContract(injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_appmanager_installer_notification_contract_InstallerNotificationsContract_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(ContractModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_notification_contract_InstallerNotificationsContract_ULSEP_BINDING_ID, injectorLike);
    }

    @Inject
    public InstallerNotificationsContract(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(1, injectorLike);
    }

    public void updateProgress(String str) {
        startServiceWithActionAndExtras(ACTION_UPDATE_PROGRESS, str, false);
    }

    public void setDownloading(String str, boolean z) {
        startServiceWithActionAndExtras(ACTION_SET_DOWNLOADING, str, z);
    }

    public void setInstalling(String str, boolean z) {
        startServiceWithActionAndExtras(ACTION_SET_INSTALLING, str, z);
    }

    public void setDownloadFailure(String str, boolean z) {
        startServiceWithActionAndExtras(ACTION_SET_FAILED_DOWNLOAD, str, z);
    }

    public void setInstallFailure(String str, boolean z) {
        startServiceWithActionAndExtras(ACTION_SET_FAILED_INSTALL, str, z);
    }

    public void setCompleted(String str, boolean z) {
        startServiceWithActionAndExtras(ACTION_SET_COMPLETED, str, z);
    }

    public void setCanceled(String str, boolean z) {
        startServiceWithActionAndExtras(ACTION_SET_CANCELED, str, z);
    }

    public Intent generateDismissIntent(Serializable serializable) {
        Intent createIntent = createIntent(ACTION_DISMISS);
        createIntent.putExtra(EXTRA_DISMISS_STATE, serializable);
        return createIntent;
    }

    private void startServiceWithActionAndExtras(String str, String str2, boolean z) {
        Intent createIntent = createIntent(str);
        createIntent.putExtra("identifier", str2);
        createIntent.putExtra("is_update", z);
        SecureContext.launchInternalService(createIntent, (Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext));
    }

    private Intent createIntent(String str) {
        Intent intent = new Intent();
        intent.setComponent(new ComponentName((Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext), "com.oculus.appmanager.installer.notification.InstallerNotificationService"));
        intent.setAction(str);
        return intent;
    }
}
