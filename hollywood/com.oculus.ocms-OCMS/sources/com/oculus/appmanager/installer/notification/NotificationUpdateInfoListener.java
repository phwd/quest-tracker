package com.oculus.appmanager.installer.notification;

import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.facebook.ultralight.UL;
import com.oculus.appmanager.info.ApkUpdateInfo;
import com.oculus.appmanager.info.ApkUpdateInfoContract;
import com.oculus.appmanager.info.ApkUpdateInfoListener;
import com.oculus.appmanager.installer.notification.InstallerNotificationsModule;
import com.oculus.appmanager.installer.notification.contract.InstallerNotificationsContract;
import java.util.Set;
import javax.inject.Inject;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_appmanager_installer_notification_contract_InstallerNotificationsContract_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_appmanager_installer_notification_NotificationEligibility_ULSEP_BINDING_ID"})
public class NotificationUpdateInfoListener implements ApkUpdateInfoListener {
    @Inject
    @Eager
    private final InstallerNotificationsContract mInstallerNotificationsContract;
    @Inject
    @Eager
    private final NotificationEligibility mNotificationEligibility;

    @Override // com.oculus.appmanager.info.ApkUpdateInfoListener
    public void onCreated(ApkUpdateInfo apkUpdateInfo, ApkUpdateInfoListener.CreationType creationType) {
    }

    @Override // com.oculus.appmanager.info.ApkUpdateInfoListener
    public void onDeleted(ApkUpdateInfo apkUpdateInfo) {
    }

    @AutoGeneratedAccessMethod
    public static final NotificationUpdateInfoListener _UL__ULSEP_com_oculus_appmanager_installer_notification_NotificationUpdateInfoListener_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (NotificationUpdateInfoListener) UL.factorymap.get(InstallerNotificationsModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_notification_NotificationUpdateInfoListener_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final NotificationUpdateInfoListener _UL__ULSEP_com_oculus_appmanager_installer_notification_NotificationUpdateInfoListener_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new NotificationUpdateInfoListener(injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_appmanager_installer_notification_NotificationUpdateInfoListener_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(InstallerNotificationsModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_notification_NotificationUpdateInfoListener_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_appmanager_installer_notification_NotificationUpdateInfoListener_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(InstallerNotificationsModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_notification_NotificationUpdateInfoListener_ULSEP_BINDING_ID, injectorLike);
    }

    @Inject
    public NotificationUpdateInfoListener(InjectorLike injectorLike) {
        this.mInstallerNotificationsContract = InstallerNotificationsContract._UL__ULSEP_com_oculus_appmanager_installer_notification_contract_InstallerNotificationsContract_ULSEP_ACCESS_METHOD(injectorLike);
        this.mNotificationEligibility = NotificationEligibility._UL__ULSEP_com_oculus_appmanager_installer_notification_NotificationEligibility_ULSEP_ACCESS_METHOD(injectorLike);
    }

    @Override // com.oculus.appmanager.info.ApkUpdateInfoListener
    public void onChanged(ApkUpdateInfo apkUpdateInfo, Set<String> set, ApkUpdateInfo.ApkUpdateExtras apkUpdateExtras) {
        if (this.mNotificationEligibility.shouldShowNotification(apkUpdateInfo)) {
            for (String str : set) {
                if ("state".equals(str)) {
                    int i = AnonymousClass1.$SwitchMap$com$oculus$appmanager$info$ApkUpdateInfoContract$UpdateState[apkUpdateInfo.getState().ordinal()];
                    if (i == 1) {
                        this.mInstallerNotificationsContract.setDownloading(apkUpdateInfo.identifier, apkUpdateInfo.isUpdate);
                    } else if (i == 2) {
                        this.mInstallerNotificationsContract.setCanceled(apkUpdateInfo.identifier, apkUpdateInfo.isUpdate);
                    }
                }
            }
        }
    }

    /* renamed from: com.oculus.appmanager.installer.notification.NotificationUpdateInfoListener$1  reason: invalid class name */
    static /* synthetic */ class AnonymousClass1 {
        static final /* synthetic */ int[] $SwitchMap$com$oculus$appmanager$info$ApkUpdateInfoContract$UpdateState = new int[ApkUpdateInfoContract.UpdateState.values().length];

        /* JADX WARNING: Can't wrap try/catch for region: R(6:0|1|2|3|4|6) */
        /* JADX WARNING: Code restructure failed: missing block: B:7:?, code lost:
            return;
         */
        /* JADX WARNING: Failed to process nested try/catch */
        /* JADX WARNING: Missing exception handler attribute for start block: B:3:0x0014 */
        static {
            /*
                com.oculus.appmanager.info.ApkUpdateInfoContract$UpdateState[] r0 = com.oculus.appmanager.info.ApkUpdateInfoContract.UpdateState.values()
                int r0 = r0.length
                int[] r0 = new int[r0]
                com.oculus.appmanager.installer.notification.NotificationUpdateInfoListener.AnonymousClass1.$SwitchMap$com$oculus$appmanager$info$ApkUpdateInfoContract$UpdateState = r0
                int[] r0 = com.oculus.appmanager.installer.notification.NotificationUpdateInfoListener.AnonymousClass1.$SwitchMap$com$oculus$appmanager$info$ApkUpdateInfoContract$UpdateState     // Catch:{ NoSuchFieldError -> 0x0014 }
                com.oculus.appmanager.info.ApkUpdateInfoContract$UpdateState r1 = com.oculus.appmanager.info.ApkUpdateInfoContract.UpdateState.DOWNLOADING     // Catch:{ NoSuchFieldError -> 0x0014 }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0014 }
                r2 = 1
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0014 }
            L_0x0014:
                int[] r0 = com.oculus.appmanager.installer.notification.NotificationUpdateInfoListener.AnonymousClass1.$SwitchMap$com$oculus$appmanager$info$ApkUpdateInfoContract$UpdateState     // Catch:{ NoSuchFieldError -> 0x001f }
                com.oculus.appmanager.info.ApkUpdateInfoContract$UpdateState r1 = com.oculus.appmanager.info.ApkUpdateInfoContract.UpdateState.CANCELED     // Catch:{ NoSuchFieldError -> 0x001f }
                int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x001f }
                r2 = 2
                r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x001f }
            L_0x001f:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: com.oculus.appmanager.installer.notification.NotificationUpdateInfoListener.AnonymousClass1.<clinit>():void");
        }
    }
}
