package com.oculus.appmanager.installer.service;

import android.content.pm.PackageInfo;
import com.facebook.debug.log.BLog;
import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.appmanager.info.model.InstallerResult;
import com.oculus.appmanager.installer.events.EventsModule;
import com.oculus.appmanager.installer.events.InstallResponse;
import com.oculus.appmanager.installer.events.InstallerEventBus;
import com.oculus.appmanager.installer.service.InstallerServiceModule;
import com.oculus.common.packagescache.PackageManagerUtils;
import com.oculus.common.packagescache.PackagesCacheModule;
import com.oculus.common.packagescache.PackagesListener;
import com.oculus.libraryapi.OVRLibrary;
import com.oculus.libraryapi.OVRLibraryModule;
import com.oculus.time.Clock;
import com.oculus.time.TimeModule;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_libraryapi_OVRLibrary_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_common_packagescache_PackageManagerUtils_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_time_Clock_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_appmanager_installer_events_InstallerEventBus_ULSEP_BINDING_ID"})
public class PackageBroadcastListener implements PackagesListener {
    private static final String TAG = "PackageBroadcastListener";
    private InjectionContext _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_appmanager_installer_service_PackageBroadcastListener_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(InstallerServiceModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_service_PackageBroadcastListener_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final PackageBroadcastListener _UL__ULSEP_com_oculus_appmanager_installer_service_PackageBroadcastListener_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (PackageBroadcastListener) UL.factorymap.get(InstallerServiceModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_service_PackageBroadcastListener_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final PackageBroadcastListener _UL__ULSEP_com_oculus_appmanager_installer_service_PackageBroadcastListener_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new PackageBroadcastListener(injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_appmanager_installer_service_PackageBroadcastListener_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(InstallerServiceModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_service_PackageBroadcastListener_ULSEP_BINDING_ID, injectorLike);
    }

    @Inject
    public PackageBroadcastListener(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(0, injectorLike);
    }

    @Override // com.oculus.common.packagescache.PackagesListener
    public void onPackageChanged(PackagesListener.PackageAction packageAction, String str) {
        if (packageAction != PackagesListener.PackageAction.REMOVED && ((OVRLibrary) FbInjector.localInstance(OVRLibraryModule.UL_id._UL__ULSEP_com_oculus_libraryapi_OVRLibrary_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getApp(str) != null) {
            PackageInfo packageInfo = ((PackageManagerUtils) FbInjector.localInstance(PackagesCacheModule.UL_id._UL__ULSEP_com_oculus_common_packagescache_PackageManagerUtils_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getPackageInfo(str);
            if (packageInfo == null) {
                BLog.e(TAG, "Received package added callback but app is not in package cache: %s", str);
                return;
            }
            ((InstallerEventBus) FbInjector.localInstance(EventsModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_events_InstallerEventBus_ULSEP_BINDING_ID, this._UL_mInjectionContext)).post(new InstallResponse(-1, true, packageAction == PackagesListener.PackageAction.UPDATED, str, packageInfo.versionCode, null, InstallerResult.createForSuccess(str, str, ((Clock) FbInjector.localInstance(TimeModule.UL_id._UL__ULSEP_com_oculus_time_Clock_ULSEP_BINDING_ID, this._UL_mInjectionContext)).now())));
        }
    }
}
