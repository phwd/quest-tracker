package com.oculus.appmanager.installer.service;

import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.UL;
import com.oculus.appmanager.info.ApkUpdateInfo;
import com.oculus.appmanager.info.ApkUpdateInfoContract;
import com.oculus.appmanager.info.InfoModule;
import com.oculus.appmanager.info.InfoUtils;
import com.oculus.appmanager.info.model.InstallerResult;
import com.oculus.appmanager.installer.service.InstallerServiceModule;
import javax.inject.Inject;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_appmanager_info_InfoUtils_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_appmanager_installer_service_InstallerServiceDownloadHelper_ULSEP_BINDING_ID"})
public class InstallerFailureHelper {
    private InjectionContext _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final InstallerFailureHelper _UL__ULSEP_com_oculus_appmanager_installer_service_InstallerFailureHelper_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (InstallerFailureHelper) UL.factorymap.get(InstallerServiceModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_service_InstallerFailureHelper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final InstallerFailureHelper _UL__ULSEP_com_oculus_appmanager_installer_service_InstallerFailureHelper_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new InstallerFailureHelper(injectorLike);
    }

    @Inject
    public InstallerFailureHelper(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(2, injectorLike);
    }

    public void onUpdateFailed(ApkUpdateInfo apkUpdateInfo) {
        if (!apkUpdateInfo.getExtras().isTransitiveFailure()) {
            propagateFailure(((InfoUtils) FbInjector.lazyInstance(0, InfoModule.UL_id._UL__ULSEP_com_oculus_appmanager_info_InfoUtils_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getRootUpdate(apkUpdateInfo), apkUpdateInfo);
        }
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_appmanager_installer_service_InstallerFailureHelper_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(InstallerServiceModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_service_InstallerFailureHelper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_appmanager_installer_service_InstallerFailureHelper_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(InstallerServiceModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_service_InstallerFailureHelper_ULSEP_BINDING_ID, injectorLike);
    }

    private void propagateFailure(ApkUpdateInfo apkUpdateInfo, ApkUpdateInfo apkUpdateInfo2) {
        InstallerResult resultForFinalUpdate = ((InfoUtils) FbInjector.lazyInstance(0, InfoModule.UL_id._UL__ULSEP_com_oculus_appmanager_info_InfoUtils_ULSEP_BINDING_ID, this._UL_mInjectionContext)).resultForFinalUpdate(apkUpdateInfo2);
        if (resultForFinalUpdate != null) {
            if (apkUpdateInfo == apkUpdateInfo2) {
                if (apkUpdateInfo.getState().isCancelable()) {
                    ((InstallerServiceDownloadHelper) FbInjector.lazyInstance(1, InstallerServiceModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_service_InstallerServiceDownloadHelper_ULSEP_BINDING_ID, this._UL_mInjectionContext)).cancelAnyRunningDownloads(apkUpdateInfo);
                }
            } else if (apkUpdateInfo.getState().isInitial() || apkUpdateInfo.getState() == ApkUpdateInfoContract.UpdateState.QUEUED_DOWNLOAD) {
                ((InfoUtils) FbInjector.lazyInstance(0, InfoModule.UL_id._UL__ULSEP_com_oculus_appmanager_info_InfoUtils_ULSEP_BINDING_ID, this._UL_mInjectionContext)).failSoftTransitive(apkUpdateInfo, apkUpdateInfo2, resultForFinalUpdate.error);
            } else if (!apkUpdateInfo.getState().isFinal()) {
                ((InstallerServiceDownloadHelper) FbInjector.lazyInstance(1, InstallerServiceModule.UL_id._UL__ULSEP_com_oculus_appmanager_installer_service_InstallerServiceDownloadHelper_ULSEP_BINDING_ID, this._UL_mInjectionContext)).cancelAnyRunningDownloads(apkUpdateInfo);
                ((InfoUtils) FbInjector.lazyInstance(0, InfoModule.UL_id._UL__ULSEP_com_oculus_appmanager_info_InfoUtils_ULSEP_BINDING_ID, this._UL_mInjectionContext)).failSoftTransitive(apkUpdateInfo, apkUpdateInfo2, resultForFinalUpdate.error);
            } else {
                return;
            }
            for (ApkUpdateInfo apkUpdateInfo3 : ((InfoUtils) FbInjector.lazyInstance(0, InfoModule.UL_id._UL__ULSEP_com_oculus_appmanager_info_InfoUtils_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getDependencies(apkUpdateInfo)) {
                propagateFailure(apkUpdateInfo3, apkUpdateInfo2);
            }
            return;
        }
        throw new IllegalStateException("update has not failed");
    }
}
