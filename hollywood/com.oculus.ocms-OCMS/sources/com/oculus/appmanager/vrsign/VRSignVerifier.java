package com.oculus.appmanager.vrsign;

import com.facebook.common.fragmentconstants.FragmentConstants;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.sign.lib.FBSignVerify;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.appmanager.vrsign.VrsignModule;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;
import java.security.cert.CertificateException;
import java.security.cert.CertificateFactory;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import javax.inject.Provider;

@Dependencies({})
public class VRSignVerifier {
    private static final byte[] CERT;
    private final FBSignVerify mVerifier;

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_appmanager_vrsign_VRSignVerifier_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(VrsignModule.UL_id._UL__ULSEP_com_oculus_appmanager_vrsign_VRSignVerifier_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_appmanager_vrsign_VRSignVerifier_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(VrsignModule.UL_id._UL__ULSEP_com_oculus_appmanager_vrsign_VRSignVerifier_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final VRSignVerifier _UL__ULSEP_com_oculus_appmanager_vrsign_VRSignVerifier_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (VRSignVerifier) UL.factorymap.get(VrsignModule.UL_id._UL__ULSEP_com_oculus_appmanager_vrsign_VRSignVerifier_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final VRSignVerifier _UL__ULSEP_com_oculus_appmanager_vrsign_VRSignVerifier_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new VRSignVerifier();
    }

    static {
        byte[] bArr = new byte[FragmentConstants.ContentFragmentType.GROUPS_INVITATION_REMINDER_FRAGMENT];
        // fill-array-data instruction
        bArr[0] = 48;
        bArr[1] = -126;
        bArr[2] = 3;
        bArr[3] = -119;
        bArr[4] = 48;
        bArr[5] = -126;
        bArr[6] = 2;
        bArr[7] = 113;
        bArr[8] = -96;
        bArr[9] = 3;
        bArr[10] = 2;
        bArr[11] = 1;
        bArr[12] = 2;
        bArr[13] = 2;
        bArr[14] = 4;
        bArr[15] = 90;
        bArr[16] = -42;
        bArr[17] = -9;
        bArr[18] = -24;
        bArr[19] = 48;
        bArr[20] = 13;
        bArr[21] = 6;
        bArr[22] = 9;
        bArr[23] = 42;
        bArr[24] = -122;
        bArr[25] = 72;
        bArr[26] = -122;
        bArr[27] = -9;
        bArr[28] = 13;
        bArr[29] = 1;
        bArr[30] = 1;
        bArr[31] = 11;
        bArr[32] = 5;
        bArr[33] = 0;
        bArr[34] = 48;
        bArr[35] = 117;
        bArr[36] = 49;
        bArr[37] = 11;
        bArr[38] = 48;
        bArr[39] = 9;
        bArr[40] = 6;
        bArr[41] = 3;
        bArr[42] = 85;
        bArr[43] = 4;
        bArr[44] = 6;
        bArr[45] = 19;
        bArr[46] = 2;
        bArr[47] = 85;
        bArr[48] = 83;
        bArr[49] = 49;
        bArr[50] = 11;
        bArr[51] = 48;
        bArr[52] = 9;
        bArr[53] = 6;
        bArr[54] = 3;
        bArr[55] = 85;
        bArr[56] = 4;
        bArr[57] = 8;
        bArr[58] = 19;
        bArr[59] = 2;
        bArr[60] = 67;
        bArr[61] = 65;
        bArr[62] = 49;
        bArr[63] = 19;
        bArr[64] = 48;
        bArr[65] = 17;
        bArr[66] = 6;
        bArr[67] = 3;
        bArr[68] = 85;
        bArr[69] = 4;
        bArr[70] = 7;
        bArr[71] = 19;
        bArr[72] = 10;
        bArr[73] = 77;
        bArr[74] = 101;
        bArr[75] = 110;
        bArr[76] = 108;
        bArr[77] = 111;
        bArr[78] = 32;
        bArr[79] = 80;
        bArr[80] = 97;
        bArr[81] = 114;
        bArr[82] = 107;
        bArr[83] = 49;
        bArr[84] = 20;
        bArr[85] = 48;
        bArr[86] = 18;
        bArr[87] = 6;
        bArr[88] = 3;
        bArr[89] = 85;
        bArr[90] = 4;
        bArr[91] = 10;
        bArr[92] = 19;
        bArr[93] = 11;
        bArr[94] = 79;
        bArr[95] = 99;
        bArr[96] = 117;
        bArr[97] = 108;
        bArr[98] = 117;
        bArr[99] = 115;
        bArr[100] = 32;
        bArr[101] = 72;
        bArr[102] = 111;
        bArr[103] = 109;
        bArr[104] = 101;
        bArr[105] = 49;
        bArr[106] = 24;
        bArr[107] = 48;
        bArr[108] = 22;
        bArr[109] = 6;
        bArr[110] = 3;
        bArr[111] = 85;
        bArr[112] = 4;
        bArr[113] = 11;
        bArr[114] = 19;
        bArr[115] = 15;
        bArr[116] = 79;
        bArr[117] = 99;
        bArr[118] = 117;
        bArr[119] = 108;
        bArr[120] = 117;
        bArr[121] = 115;
        bArr[122] = 32;
        bArr[123] = 80;
        bArr[124] = 108;
        bArr[125] = 97;
        bArr[126] = 116;
        bArr[127] = 102;
        bArr[128] = 111;
        bArr[129] = 114;
        bArr[130] = 109;
        bArr[131] = 49;
        bArr[132] = 20;
        bArr[133] = 48;
        bArr[134] = 18;
        bArr[135] = 6;
        bArr[136] = 3;
        bArr[137] = 85;
        bArr[138] = 4;
        bArr[139] = 3;
        bArr[140] = 19;
        bArr[141] = 11;
        bArr[142] = 79;
        bArr[143] = 99;
        bArr[144] = 117;
        bArr[145] = 108;
        bArr[146] = 117;
        bArr[147] = 115;
        bArr[148] = 44;
        bArr[149] = 32;
        bArr[150] = 73;
        bArr[151] = 110;
        bArr[152] = 99;
        bArr[153] = 48;
        bArr[154] = 30;
        bArr[155] = 23;
        bArr[156] = 13;
        bArr[157] = 49;
        bArr[158] = 52;
        bArr[159] = 48;
        bArr[160] = 57;
        bArr[161] = 48;
        bArr[162] = 53;
        bArr[163] = 49;
        bArr[164] = 55;
        bArr[165] = 50;
        bArr[166] = 56;
        bArr[167] = 49;
        bArr[168] = 48;
        bArr[169] = 90;
        bArr[170] = 23;
        bArr[171] = 13;
        bArr[172] = 52;
        bArr[173] = 50;
        bArr[174] = 48;
        bArr[175] = 49;
        bArr[176] = 50;
        bArr[177] = 49;
        bArr[178] = 49;
        bArr[179] = 55;
        bArr[180] = 50;
        bArr[181] = 56;
        bArr[182] = 49;
        bArr[183] = 48;
        bArr[184] = 90;
        bArr[185] = 48;
        bArr[186] = 117;
        bArr[187] = 49;
        bArr[188] = 11;
        bArr[189] = 48;
        bArr[190] = 9;
        bArr[191] = 6;
        bArr[192] = 3;
        bArr[193] = 85;
        bArr[194] = 4;
        bArr[195] = 6;
        bArr[196] = 19;
        bArr[197] = 2;
        bArr[198] = 85;
        bArr[199] = 83;
        bArr[200] = 49;
        bArr[201] = 11;
        bArr[202] = 48;
        bArr[203] = 9;
        bArr[204] = 6;
        bArr[205] = 3;
        bArr[206] = 85;
        bArr[207] = 4;
        bArr[208] = 8;
        bArr[209] = 19;
        bArr[210] = 2;
        bArr[211] = 67;
        bArr[212] = 65;
        bArr[213] = 49;
        bArr[214] = 19;
        bArr[215] = 48;
        bArr[216] = 17;
        bArr[217] = 6;
        bArr[218] = 3;
        bArr[219] = 85;
        bArr[220] = 4;
        bArr[221] = 7;
        bArr[222] = 19;
        bArr[223] = 10;
        bArr[224] = 77;
        bArr[225] = 101;
        bArr[226] = 110;
        bArr[227] = 108;
        bArr[228] = 111;
        bArr[229] = 32;
        bArr[230] = 80;
        bArr[231] = 97;
        bArr[232] = 114;
        bArr[233] = 107;
        bArr[234] = 49;
        bArr[235] = 20;
        bArr[236] = 48;
        bArr[237] = 18;
        bArr[238] = 6;
        bArr[239] = 3;
        bArr[240] = 85;
        bArr[241] = 4;
        bArr[242] = 10;
        bArr[243] = 19;
        bArr[244] = 11;
        bArr[245] = 79;
        bArr[246] = 99;
        bArr[247] = 117;
        bArr[248] = 108;
        bArr[249] = 117;
        bArr[250] = 115;
        bArr[251] = 32;
        bArr[252] = 72;
        bArr[253] = 111;
        bArr[254] = 109;
        bArr[255] = 101;
        bArr[256] = 49;
        bArr[257] = 24;
        bArr[258] = 48;
        bArr[259] = 22;
        bArr[260] = 6;
        bArr[261] = 3;
        bArr[262] = 85;
        bArr[263] = 4;
        bArr[264] = 11;
        bArr[265] = 19;
        bArr[266] = 15;
        bArr[267] = 79;
        bArr[268] = 99;
        bArr[269] = 117;
        bArr[270] = 108;
        bArr[271] = 117;
        bArr[272] = 115;
        bArr[273] = 32;
        bArr[274] = 80;
        bArr[275] = 108;
        bArr[276] = 97;
        bArr[277] = 116;
        bArr[278] = 102;
        bArr[279] = 111;
        bArr[280] = 114;
        bArr[281] = 109;
        bArr[282] = 49;
        bArr[283] = 20;
        bArr[284] = 48;
        bArr[285] = 18;
        bArr[286] = 6;
        bArr[287] = 3;
        bArr[288] = 85;
        bArr[289] = 4;
        bArr[290] = 3;
        bArr[291] = 19;
        bArr[292] = 11;
        bArr[293] = 79;
        bArr[294] = 99;
        bArr[295] = 117;
        bArr[296] = 108;
        bArr[297] = 117;
        bArr[298] = 115;
        bArr[299] = 44;
        bArr[300] = 32;
        bArr[301] = 73;
        bArr[302] = 110;
        bArr[303] = 99;
        bArr[304] = 48;
        bArr[305] = -126;
        bArr[306] = 1;
        bArr[307] = 34;
        bArr[308] = 48;
        bArr[309] = 13;
        bArr[310] = 6;
        bArr[311] = 9;
        bArr[312] = 42;
        bArr[313] = -122;
        bArr[314] = 72;
        bArr[315] = -122;
        bArr[316] = -9;
        bArr[317] = 13;
        bArr[318] = 1;
        bArr[319] = 1;
        bArr[320] = 1;
        bArr[321] = 5;
        bArr[322] = 0;
        bArr[323] = 3;
        bArr[324] = -126;
        bArr[325] = 1;
        bArr[326] = 15;
        bArr[327] = 0;
        bArr[328] = 48;
        bArr[329] = -126;
        bArr[330] = 1;
        bArr[331] = 10;
        bArr[332] = 2;
        bArr[333] = -126;
        bArr[334] = 1;
        bArr[335] = 1;
        bArr[336] = 0;
        bArr[337] = -97;
        bArr[338] = 111;
        bArr[339] = -47;
        bArr[340] = -6;
        bArr[341] = 0;
        bArr[342] = 102;
        bArr[343] = -81;
        bArr[344] = 93;
        bArr[345] = 121;
        bArr[346] = 98;
        bArr[347] = 49;
        bArr[348] = -32;
        bArr[349] = 82;
        bArr[350] = -100;
        bArr[351] = -25;
        bArr[352] = -116;
        bArr[353] = -106;
        bArr[354] = 71;
        bArr[355] = 65;
        bArr[356] = 116;
        bArr[357] = -56;
        bArr[358] = -115;
        bArr[359] = -42;
        bArr[360] = -127;
        bArr[361] = 58;
        bArr[362] = -105;
        bArr[363] = 49;
        bArr[364] = 0;
        bArr[365] = -53;
        bArr[366] = -62;
        bArr[367] = 73;
        bArr[368] = 103;
        bArr[369] = -42;
        bArr[370] = 95;
        bArr[371] = -119;
        bArr[372] = 101;
        bArr[373] = 95;
        bArr[374] = -40;
        bArr[375] = 28;
        bArr[376] = 89;
        bArr[377] = -39;
        bArr[378] = 92;
        bArr[379] = -11;
        bArr[380] = -59;
        bArr[381] = -23;
        bArr[382] = -102;
        bArr[383] = -28;
        bArr[384] = 81;
        bArr[385] = 93;
        bArr[386] = -60;
        bArr[387] = 69;
        bArr[388] = -114;
        bArr[389] = -57;
        bArr[390] = 78;
        bArr[391] = -29;
        bArr[392] = 34;
        bArr[393] = 59;
        bArr[394] = 11;
        bArr[395] = 23;
        bArr[396] = 35;
        bArr[397] = -85;
        bArr[398] = 64;
        bArr[399] = -81;
        bArr[400] = -98;
        bArr[401] = -75;
        bArr[402] = 77;
        bArr[403] = 30;
        bArr[404] = 121;
        bArr[405] = -8;
        bArr[406] = 0;
        bArr[407] = 33;
        bArr[408] = Byte.MIN_VALUE;
        bArr[409] = 38;
        bArr[410] = 4;
        bArr[411] = -99;
        bArr[412] = 113;
        bArr[413] = -106;
        bArr[414] = 96;
        bArr[415] = -106;
        bArr[416] = -96;
        bArr[417] = 87;
        bArr[418] = Byte.MAX_VALUE;
        bArr[419] = 76;
        bArr[420] = -15;
        bArr[421] = -31;
        bArr[422] = -121;
        bArr[423] = -34;
        bArr[424] = 81;
        bArr[425] = -86;
        bArr[426] = 72;
        bArr[427] = 12;
        bArr[428] = -127;
        bArr[429] = -58;
        bArr[430] = 47;
        bArr[431] = -92;
        bArr[432] = -121;
        bArr[433] = 122;
        bArr[434] = 126;
        bArr[435] = -44;
        bArr[436] = -42;
        bArr[437] = 21;
        bArr[438] = 1;
        bArr[439] = 0;
        bArr[440] = 124;
        bArr[441] = -81;
        bArr[442] = -56;
        bArr[443] = 98;
        bArr[444] = 115;
        bArr[445] = 124;
        bArr[446] = 113;
        bArr[447] = 99;
        bArr[448] = -11;
        bArr[449] = 72;
        bArr[450] = -104;
        bArr[451] = -94;
        bArr[452] = -50;
        bArr[453] = 1;
        bArr[454] = -51;
        bArr[455] = 14;
        bArr[456] = -112;
        bArr[457] = -65;
        bArr[458] = -16;
        bArr[459] = 30;
        bArr[460] = 80;
        bArr[461] = -4;
        bArr[462] = 115;
        bArr[463] = 94;
        bArr[464] = -73;
        bArr[465] = 64;
        bArr[466] = 53;
        bArr[467] = 46;
        bArr[468] = 61;
        bArr[469] = 5;
        bArr[470] = -23;
        bArr[471] = -76;
        bArr[472] = Byte.MAX_VALUE;
        bArr[473] = 47;
        bArr[474] = -114;
        bArr[475] = 30;
        bArr[476] = -6;
        bArr[477] = 1;
        bArr[478] = -28;
        bArr[479] = 36;
        bArr[480] = 74;
        bArr[481] = Byte.MAX_VALUE;
        bArr[482] = -108;
        bArr[483] = -77;
        bArr[484] = -30;
        bArr[485] = 124;
        bArr[486] = -22;
        bArr[487] = 54;
        bArr[488] = 28;
        bArr[489] = -38;
        bArr[490] = 5;
        bArr[491] = 48;
        bArr[492] = -27;
        bArr[493] = 45;
        bArr[494] = -98;
        bArr[495] = 125;
        bArr[496] = -64;
        bArr[497] = -50;
        bArr[498] = 88;
        bArr[499] = -118;
        bArr[500] = 71;
        bArr[501] = 88;
        bArr[502] = -7;
        bArr[503] = 15;
        bArr[504] = -13;
        bArr[505] = -122;
        bArr[506] = -28;
        bArr[507] = 61;
        bArr[508] = 65;
        bArr[509] = -40;
        bArr[510] = -42;
        bArr[511] = -11;
        bArr[512] = -93;
        bArr[513] = 89;
        bArr[514] = 20;
        bArr[515] = 19;
        bArr[516] = -38;
        bArr[517] = -60;
        bArr[518] = -78;
        bArr[519] = -115;
        bArr[520] = 94;
        bArr[521] = 7;
        bArr[522] = Byte.MIN_VALUE;
        bArr[523] = 88;
        bArr[524] = -16;
        bArr[525] = 28;
        bArr[526] = -82;
        bArr[527] = -87;
        bArr[528] = 41;
        bArr[529] = -99;
        bArr[530] = -66;
        bArr[531] = 96;
        bArr[532] = Byte.MIN_VALUE;
        bArr[533] = 39;
        bArr[534] = 3;
        bArr[535] = -106;
        bArr[536] = -110;
        bArr[537] = 11;
        bArr[538] = 58;
        bArr[539] = 89;
        bArr[540] = -62;
        bArr[541] = 22;
        bArr[542] = -24;
        bArr[543] = -58;
        bArr[544] = 118;
        bArr[545] = 55;
        bArr[546] = -21;
        bArr[547] = -27;
        bArr[548] = -42;
        bArr[549] = 104;
        bArr[550] = 92;
        bArr[551] = -87;
        bArr[552] = -102;
        bArr[553] = 96;
        bArr[554] = 116;
        bArr[555] = 92;
        bArr[556] = -16;
        bArr[557] = -114;
        bArr[558] = 15;
        bArr[559] = 122;
        bArr[560] = -30;
        bArr[561] = -7;
        bArr[562] = 76;
        bArr[563] = -89;
        bArr[564] = -20;
        bArr[565] = 4;
        bArr[566] = 14;
        bArr[567] = -55;
        bArr[568] = 110;
        bArr[569] = -40;
        bArr[570] = 55;
        bArr[571] = 78;
        bArr[572] = 123;
        bArr[573] = -7;
        bArr[574] = 64;
        bArr[575] = -20;
        bArr[576] = -69;
        bArr[577] = Byte.MAX_VALUE;
        bArr[578] = 102;
        bArr[579] = -65;
        bArr[580] = -100;
        bArr[581] = -63;
        bArr[582] = -103;
        bArr[583] = -78;
        bArr[584] = 77;
        bArr[585] = -31;
        bArr[586] = -77;
        bArr[587] = 53;
        bArr[588] = -26;
        bArr[589] = -87;
        bArr[590] = 20;
        bArr[591] = 58;
        bArr[592] = -61;
        bArr[593] = 2;
        bArr[594] = 3;
        bArr[595] = 1;
        bArr[596] = 0;
        bArr[597] = 1;
        bArr[598] = -93;
        bArr[599] = 33;
        bArr[600] = 48;
        bArr[601] = 31;
        bArr[602] = 48;
        bArr[603] = 29;
        bArr[604] = 6;
        bArr[605] = 3;
        bArr[606] = 85;
        bArr[607] = 29;
        bArr[608] = 14;
        bArr[609] = 4;
        bArr[610] = 22;
        bArr[611] = 4;
        bArr[612] = 20;
        bArr[613] = -58;
        bArr[614] = 97;
        bArr[615] = -40;
        bArr[616] = 109;
        bArr[617] = 43;
        bArr[618] = 68;
        bArr[619] = 123;
        bArr[620] = 68;
        bArr[621] = -97;
        bArr[622] = 37;
        bArr[623] = -7;
        bArr[624] = 41;
        bArr[625] = 32;
        bArr[626] = 38;
        bArr[627] = -28;
        bArr[628] = -26;
        bArr[629] = 61;
        bArr[630] = 35;
        bArr[631] = 111;
        bArr[632] = -103;
        bArr[633] = 48;
        bArr[634] = 13;
        bArr[635] = 6;
        bArr[636] = 9;
        bArr[637] = 42;
        bArr[638] = -122;
        bArr[639] = 72;
        bArr[640] = -122;
        bArr[641] = -9;
        bArr[642] = 13;
        bArr[643] = 1;
        bArr[644] = 1;
        bArr[645] = 11;
        bArr[646] = 5;
        bArr[647] = 0;
        bArr[648] = 3;
        bArr[649] = -126;
        bArr[650] = 1;
        bArr[651] = 1;
        bArr[652] = 0;
        bArr[653] = 69;
        bArr[654] = -87;
        bArr[655] = -88;
        bArr[656] = -68;
        bArr[657] = -4;
        bArr[658] = -123;
        bArr[659] = 79;
        bArr[660] = -25;
        bArr[661] = -19;
        bArr[662] = -108;
        bArr[663] = -53;
        bArr[664] = 93;
        bArr[665] = 114;
        bArr[666] = 51;
        bArr[667] = -87;
        bArr[668] = 120;
        bArr[669] = 101;
        bArr[670] = 89;
        bArr[671] = 27;
        bArr[672] = 21;
        bArr[673] = 102;
        bArr[674] = -63;
        bArr[675] = -16;
        bArr[676] = 37;
        bArr[677] = -62;
        bArr[678] = 84;
        bArr[679] = -20;
        bArr[680] = -93;
        bArr[681] = -79;
        bArr[682] = -36;
        bArr[683] = -17;
        bArr[684] = -7;
        bArr[685] = 106;
        bArr[686] = -15;
        bArr[687] = 126;
        bArr[688] = 64;
        bArr[689] = 62;
        bArr[690] = -90;
        bArr[691] = 111;
        bArr[692] = 70;
        bArr[693] = 7;
        bArr[694] = -22;
        bArr[695] = 12;
        bArr[696] = -44;
        bArr[697] = -6;
        bArr[698] = -87;
        bArr[699] = Byte.MAX_VALUE;
        bArr[700] = -79;
        bArr[701] = 58;
        bArr[702] = -100;
        bArr[703] = -44;
        bArr[704] = -104;
        bArr[705] = Byte.MAX_VALUE;
        bArr[706] = 122;
        bArr[707] = 30;
        bArr[708] = -8;
        bArr[709] = -120;
        bArr[710] = 30;
        bArr[711] = 84;
        bArr[712] = -113;
        bArr[713] = -3;
        bArr[714] = 67;
        bArr[715] = 112;
        bArr[716] = -81;
        bArr[717] = -118;
        bArr[718] = 22;
        bArr[719] = 16;
        bArr[720] = 13;
        bArr[721] = 93;
        bArr[722] = 49;
        bArr[723] = -45;
        bArr[724] = 111;
        bArr[725] = 31;
        bArr[726] = -77;
        bArr[727] = -11;
        bArr[728] = 93;
        bArr[729] = -63;
        bArr[730] = 2;
        bArr[731] = -88;
        bArr[732] = -20;
        bArr[733] = -88;
        bArr[734] = 10;
        bArr[735] = 97;
        bArr[736] = -35;
        bArr[737] = -82;
        bArr[738] = 103;
        bArr[739] = -7;
        bArr[740] = -12;
        bArr[741] = -15;
        bArr[742] = -73;
        bArr[743] = -33;
        bArr[744] = -61;
        bArr[745] = -94;
        bArr[746] = 125;
        bArr[747] = -62;
        bArr[748] = -38;
        bArr[749] = 118;
        bArr[750] = -118;
        bArr[751] = 120;
        bArr[752] = -68;
        bArr[753] = 118;
        bArr[754] = -32;
        bArr[755] = -117;
        bArr[756] = -81;
        bArr[757] = -52;
        bArr[758] = -110;
        bArr[759] = -126;
        bArr[760] = 87;
        bArr[761] = 101;
        bArr[762] = -57;
        bArr[763] = -103;
        bArr[764] = -122;
        bArr[765] = -92;
        bArr[766] = 107;
        bArr[767] = 37;
        bArr[768] = 109;
        bArr[769] = -117;
        bArr[770] = 62;
        bArr[771] = -99;
        bArr[772] = -61;
        bArr[773] = 55;
        bArr[774] = -115;
        bArr[775] = 73;
        bArr[776] = -65;
        bArr[777] = -97;
        bArr[778] = 98;
        bArr[779] = 66;
        bArr[780] = -49;
        bArr[781] = 101;
        bArr[782] = 105;
        bArr[783] = 25;
        bArr[784] = 1;
        bArr[785] = 119;
        bArr[786] = -79;
        bArr[787] = -90;
        bArr[788] = 121;
        bArr[789] = -98;
        bArr[790] = -103;
        bArr[791] = 38;
        bArr[792] = 59;
        bArr[793] = -1;
        bArr[794] = 94;
        bArr[795] = 111;
        bArr[796] = 53;
        bArr[797] = 14;
        bArr[798] = -127;
        bArr[799] = -37;
        bArr[800] = 89;
        bArr[801] = -119;
        bArr[802] = 33;
        bArr[803] = 86;
        bArr[804] = 111;
        bArr[805] = -21;
        bArr[806] = 87;
        bArr[807] = -22;
        bArr[808] = 118;
        bArr[809] = -18;
        bArr[810] = 82;
        bArr[811] = -35;
        bArr[812] = -65;
        bArr[813] = -32;
        bArr[814] = 92;
        bArr[815] = -56;
        bArr[816] = 12;
        bArr[817] = -4;
        bArr[818] = -89;
        bArr[819] = -14;
        bArr[820] = -67;
        bArr[821] = -46;
        bArr[822] = 102;
        bArr[823] = -56;
        bArr[824] = 40;
        bArr[825] = -13;
        bArr[826] = 58;
        bArr[827] = 71;
        bArr[828] = 117;
        bArr[829] = 12;
        bArr[830] = 44;
        bArr[831] = 40;
        bArr[832] = -72;
        bArr[833] = 22;
        bArr[834] = 74;
        bArr[835] = -18;
        bArr[836] = -96;
        bArr[837] = -83;
        bArr[838] = 91;
        bArr[839] = -125;
        bArr[840] = 5;
        bArr[841] = 115;
        bArr[842] = 38;
        bArr[843] = -58;
        bArr[844] = 99;
        bArr[845] = 47;
        bArr[846] = -14;
        bArr[847] = -81;
        bArr[848] = 116;
        bArr[849] = 79;
        bArr[850] = 0;
        bArr[851] = -83;
        bArr[852] = -19;
        bArr[853] = -60;
        bArr[854] = Byte.MAX_VALUE;
        bArr[855] = 113;
        bArr[856] = 78;
        bArr[857] = -55;
        bArr[858] = -4;
        bArr[859] = 86;
        bArr[860] = Byte.MIN_VALUE;
        bArr[861] = -86;
        bArr[862] = 57;
        bArr[863] = 90;
        bArr[864] = 86;
        bArr[865] = -39;
        bArr[866] = -61;
        bArr[867] = 114;
        bArr[868] = -122;
        bArr[869] = -60;
        bArr[870] = -102;
        bArr[871] = 80;
        bArr[872] = -94;
        bArr[873] = -41;
        bArr[874] = 85;
        bArr[875] = 114;
        bArr[876] = -61;
        bArr[877] = -124;
        bArr[878] = 67;
        bArr[879] = -53;
        bArr[880] = -35;
        bArr[881] = 121;
        bArr[882] = -16;
        bArr[883] = 87;
        bArr[884] = 17;
        bArr[885] = 54;
        bArr[886] = -122;
        bArr[887] = -60;
        bArr[888] = 75;
        bArr[889] = -10;
        bArr[890] = 24;
        bArr[891] = 39;
        bArr[892] = -14;
        bArr[893] = 9;
        bArr[894] = -102;
        bArr[895] = 90;
        bArr[896] = -51;
        bArr[897] = -78;
        bArr[898] = -5;
        bArr[899] = -81;
        bArr[900] = 87;
        bArr[901] = -49;
        bArr[902] = -17;
        bArr[903] = -79;
        bArr[904] = -102;
        bArr[905] = 19;
        bArr[906] = 68;
        bArr[907] = -43;
        bArr[908] = -63;
        CERT = bArr;
    }

    @Inject
    public VRSignVerifier() {
        try {
            this.mVerifier = new FBSignVerify((X509Certificate) CertificateFactory.getInstance("X.509").generateCertificate(new ByteArrayInputStream(CERT)));
        } catch (CertificateException e) {
            throw new RuntimeException(e);
        }
    }

    public boolean verifyVRSig(String str) throws IOException {
        JarFile jarFile = new JarFile(str);
        List<JarEntry> jarEntries = getJarEntries(jarFile, ".SF");
        if (jarEntries.size() == 1) {
            InputStream inputStream = jarFile.getInputStream(jarEntries.get(0));
            for (JarEntry jarEntry : getJarEntries(jarFile, ".OSIG")) {
                if (this.mVerifier.verify(inputStream, jarFile.getInputStream(jarEntry))) {
                    return true;
                }
            }
            return false;
        }
        throw new IOException("expected one .SF file, got " + jarEntries.size());
    }

    public boolean verifyOculusSig(String str, InputStream inputStream) throws IOException {
        return this.mVerifier.verify(new ByteArrayInputStream(("﻿" + str).getBytes("UTF-16LE")), inputStream);
    }

    private static List<JarEntry> getJarEntries(JarFile jarFile, String str) {
        Enumeration<JarEntry> entries = jarFile.entries();
        ArrayList arrayList = new ArrayList();
        while (entries.hasMoreElements()) {
            JarEntry nextElement = entries.nextElement();
            if (nextElement.getName().endsWith(str)) {
                arrayList.add(nextElement);
            }
        }
        return arrayList;
    }

    public static void main(String[] strArr) throws Exception {
        VRSignVerifier vRSignVerifier = new VRSignVerifier();
        String str = strArr[0];
        PrintStream printStream = System.out;
        printStream.println(str + " " + vRSignVerifier.verifyVRSig(str));
    }
}
