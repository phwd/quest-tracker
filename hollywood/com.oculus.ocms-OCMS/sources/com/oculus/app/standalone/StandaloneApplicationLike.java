package com.oculus.app.standalone;

import android.app.Application;
import android.content.Context;
import com.facebook.breakpad.BreakpadManager;
import com.facebook.debug.log.BLog;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.inject.UnsafeContextInjection;
import com.facebook.mobileconfig.factory.MobileConfig;
import com.facebook.mobileconfig.factory.module.MobileConfigFactoryModule;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.app.standalone.MC;
import com.oculus.app.standalone.StandaloneApplicationLikeModule;
import com.oculus.auth.credentials.Credentials;
import com.oculus.auth.credentials.CredentialsModule;
import com.oculus.base.app.AppInfo;
import com.oculus.base.app.AppInfoModule;
import com.oculus.base.app.ApplicationLike;
import com.oculus.common.init.AppInitLock;
import com.oculus.common.init.AppInitModule;
import com.oculus.common.init.impl.AppInitializer;
import com.oculus.common.init.impl.ImplModule;
import com.oculus.debug.DebugMode;
import com.oculus.errorreporting.ErrorReporter;
import com.oculus.os.UnifiedTelemetryLogger;
import java.util.HashMap;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_common_init_impl_AppInitializer_ULSEP_BINDING_ID", "_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_UnsafeContextInjection_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_debug_DebugMode_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_credentials_Credentials_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_common_init_AppInitLock_ULSEP_BINDING_ID", "_UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_BINDING_ID"})
public class StandaloneApplicationLike implements ApplicationLike {
    private InjectionContext _UL_mInjectionContext;
    @Inject
    @Eager
    private final AppInfo mAppInfo;
    @Inject
    @Eager
    private final AppInitLock mAppInitLock;
    @UnsafeContextInjection
    @Inject
    @Eager
    private final Context mContext;
    @Inject
    private final Provider<Credentials> mCredentialsProvider;
    @Inject
    @Eager
    private final DebugMode mDebugMode;

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_app_standalone_StandaloneApplicationLike_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(StandaloneApplicationLikeModule.UL_id._UL__ULSEP_com_oculus_app_standalone_StandaloneApplicationLike_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_app_standalone_StandaloneApplicationLike_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(StandaloneApplicationLikeModule.UL_id._UL__ULSEP_com_oculus_app_standalone_StandaloneApplicationLike_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final StandaloneApplicationLike _UL__ULSEP_com_oculus_app_standalone_StandaloneApplicationLike_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (StandaloneApplicationLike) UL.factorymap.get(StandaloneApplicationLikeModule.UL_id._UL__ULSEP_com_oculus_app_standalone_StandaloneApplicationLike_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final StandaloneApplicationLike _UL__ULSEP_com_oculus_app_standalone_StandaloneApplicationLike_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new StandaloneApplicationLike(injectorLike);
    }

    @Inject
    public StandaloneApplicationLike(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(1, injectorLike);
        this.mContext = BundledAndroidModule._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_UnsafeContextInjection_ULSEP_ACCESS_METHOD(injectorLike);
        this.mAppInfo = AppInfoModule._UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_ACCESS_METHOD(injectorLike);
        this.mDebugMode = DebugMode._UL__ULSEP_com_oculus_debug_DebugMode_ULSEP_ACCESS_METHOD(injectorLike);
        this.mCredentialsProvider = CredentialsModule._UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_credentials_Credentials_ULGT__ULSEP_ACCESS_METHOD(injectorLike);
        this.mAppInitLock = AppInitModule._UL__ULSEP_com_oculus_common_init_AppInitLock_ULSEP_ACCESS_METHOD(injectorLike);
    }

    @Override // com.oculus.base.app.ApplicationLike
    public void onCreate(Application application) {
        BLog.setLogLevel(this.mDebugMode.isEnabled() ? 2 : 4);
        AppInitializer appInitializer = (AppInitializer) FbInjector.localInstance(ImplModule.UL_id._UL__ULSEP_com_oculus_common_init_impl_AppInitializer_ULSEP_BINDING_ID, this._UL_mInjectionContext);
        ErrorReporter.initCrashReporting(this.mContext, this.mAppInfo.appId, this.mAppInfo.appName, this.mCredentialsProvider.get() != null ? this.mCredentialsProvider.get().getUserId() : null, new Provider<Boolean>() {
            /* class com.oculus.app.standalone.StandaloneApplicationLike.AnonymousClass1 */

            @Override // javax.inject.Provider
            public Boolean get() {
                return Boolean.valueOf(((MobileConfig) FbInjector.lazyInstance(0, MobileConfigFactoryModule.UL_id._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_BINDING_ID, StandaloneApplicationLike.this._UL_mInjectionContext)).getBoolean(MC.oculus_shared_core.is_trusted_user));
            }
        }, new HashMap());
        BreakpadManager.start(application);
        UnifiedTelemetryLogger.getInstance().init(application.getApplicationContext());
        appInitializer.run();
        this.mAppInitLock.notifyAppInitializationComplete();
    }
}
