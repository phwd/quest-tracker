package com.oculus.horizon.logging;

import com.facebook.common.android.AndroidModule;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.ApplicationScoped;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorModule;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.common.init.AppInitModule;
import com.oculus.horizon.foreground.ForegroundModule;
import com.oculus.logging.utils.UtilsModule;
import com.oculus.util.device.DeviceModule;

@InjectorModule
public class LoggingModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_horizon_logging_HorizonForegroundListener_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_horizon_logging_HorizonForegroundListener_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(HorizonForegroundListener.class)));
        public static final int _UL__ULSEP_com_oculus_horizon_logging_OculusLogger_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_horizon_logging_OculusLogger_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(OculusLogger.class)));
        public static final int _UL__ULSEP_com_oculus_horizon_logging_QPLogEventBuilder_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_horizon_logging_QPLogEventBuilder_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(QPLogEventBuilder.class)));
    }

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForLoggingModule {
        AutoGeneratedBindingsForLoggingModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(AndroidModule.class);
                binder.require(BundledAndroidModule.class);
                binder.require(com.oculus.android.AndroidModule.class);
                binder.require(AppInitModule.class);
                binder.require(ForegroundModule.class);
                binder.require(UtilsModule.class);
                binder.require(DeviceModule.class);
                binder.bind(HorizonForegroundListener.class).toProvider(new HorizonForegroundListenerAutoProvider());
                binder.bind(OculusLogger.class).toProvider(new OculusLoggerAutoProvider()).in(ApplicationScoped.class);
                binder.bind(QPLogEventBuilder.class).toProvider(new QPLogEventBuilderAutoProvider());
            }
        }
    }
}
