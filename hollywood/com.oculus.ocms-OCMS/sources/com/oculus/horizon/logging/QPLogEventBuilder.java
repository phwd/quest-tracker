package com.oculus.horizon.logging;

import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.UL;
import com.oculus.horizon.logging.LoggingModule;
import com.oculus.logging.utils.Event;
import com.oculus.logging.utils.EventManager;
import com.oculus.logging.utils.UtilsModule;
import javax.inject.Inject;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_logging_utils_EventManager_ULSEP_BINDING_ID"})
public class QPLogEventBuilder {
    public static final String EVENT_ACTION = "click";
    public static final String EVENT_MODULE = "quick_promotion";
    public static final String EVENT_VIEW = "view";
    public static final String KEY_INSTANCE_LOG_DATA = "instance_log_data";
    public static final String KEY_OBJECT_ID = "object_id";
    public static final String KEY_PROMOTION_ID = "promotion_id";
    public static final String KEY_TRIGGER = "trigger";
    private InjectionContext _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_horizon_logging_QPLogEventBuilder_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(LoggingModule.UL_id._UL__ULSEP_com_oculus_horizon_logging_QPLogEventBuilder_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final QPLogEventBuilder _UL__ULSEP_com_oculus_horizon_logging_QPLogEventBuilder_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (QPLogEventBuilder) UL.factorymap.get(LoggingModule.UL_id._UL__ULSEP_com_oculus_horizon_logging_QPLogEventBuilder_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final QPLogEventBuilder _UL__ULSEP_com_oculus_horizon_logging_QPLogEventBuilder_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new QPLogEventBuilder(injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_horizon_logging_QPLogEventBuilder_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(LoggingModule.UL_id._UL__ULSEP_com_oculus_horizon_logging_QPLogEventBuilder_ULSEP_BINDING_ID, injectorLike);
    }

    @Inject
    public QPLogEventBuilder(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(1, injectorLike);
    }

    public Event newViewEvent(String str, String str2, String str3) {
        return createQPEvent(EVENT_VIEW).addExtra(KEY_PROMOTION_ID, str).addExtra(KEY_TRIGGER, str2).addExtra(KEY_INSTANCE_LOG_DATA, str3);
    }

    public Event newClickEvent(String str, String str2, String str3, String str4) {
        return createQPEvent(EVENT_ACTION).addExtra(KEY_PROMOTION_ID, str).addExtra(KEY_TRIGGER, str2).addExtra(KEY_INSTANCE_LOG_DATA, str3).addExtra(KEY_OBJECT_ID, str4);
    }

    private Event createQPEvent(String str) {
        return ((EventManager) FbInjector.lazyInstance(0, UtilsModule.UL_id._UL__ULSEP_com_oculus_logging_utils_EventManager_ULSEP_BINDING_ID, this._UL_mInjectionContext)).createEvent(EVENT_MODULE, str);
    }
}
