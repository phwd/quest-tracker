package com.oculus.android;

import android.app.job.JobScheduler;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothManager;
import android.bluetooth.le.BluetoothLeScanner;
import android.content.Context;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.ForAppContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.InjectorModule;
import com.facebook.inject.Lazy;
import com.facebook.inject.ProviderMethod;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.inject.UnsafeContextInjection;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import javax.inject.Provider;

@InjectorModule
public class AndroidModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_android_app_job_JobScheduler_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_android_app_job_JobScheduler_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(JobScheduler.class)));
        public static final int _UL__ULSEP_android_bluetooth_BluetoothAdapter_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_android_bluetooth_BluetoothAdapter_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(BluetoothAdapter.class)));
        public static final int _UL__ULSEP_android_bluetooth_BluetoothManager_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_android_bluetooth_BluetoothManager_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(BluetoothManager.class)));
        public static final int _UL__ULSEP_android_bluetooth_le_BluetoothLeScanner_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_android_bluetooth_le_BluetoothLeScanner_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(BluetoothLeScanner.class)));
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_android_app_job_JobScheduler_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_android_app_job_JobScheduler_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_android_bluetooth_BluetoothAdapter_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_android_bluetooth_BluetoothAdapter_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_android_bluetooth_BluetoothManager_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_android_bluetooth_BluetoothManager_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_android_app_job_JobScheduler_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_android_app_job_JobScheduler_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_android_bluetooth_BluetoothManager_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_android_bluetooth_BluetoothManager_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForAndroidModule {
        AutoGeneratedBindingsForAndroidModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(com.facebook.common.android.AndroidModule.class);
                binder.require(BundledAndroidModule.class);
                binder.bind(JobScheduler.class).toProvider(new JobSchedulerMethodAutoProvider());
                binder.bind(BluetoothAdapter.class).toProvider(new BluetoothAdapterMethodAutoProvider());
                binder.bind(BluetoothManager.class).toProvider(new BluetoothManagerMethodAutoProvider());
                binder.bind(BluetoothLeScanner.class).toProvider(new BluetoothLeScannerMethodAutoProvider());
            }
        }
    }

    @AutoGeneratedAccessMethod
    public static final JobScheduler _UL__ULSEP_android_app_job_JobScheduler_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (JobScheduler) UL.factorymap.get(UL_id._UL__ULSEP_android_app_job_JobScheduler_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final JobScheduler _UL__ULSEP_android_app_job_JobScheduler_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideJobScheduler(BundledAndroidModule._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_UnsafeContextInjection_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final BluetoothAdapter _UL__ULSEP_android_bluetooth_BluetoothAdapter_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (BluetoothAdapter) UL.factorymap.get(UL_id._UL__ULSEP_android_bluetooth_BluetoothAdapter_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final BluetoothAdapter _UL__ULSEP_android_bluetooth_BluetoothAdapter_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideBluetoothAdapter();
    }

    @AutoGeneratedAccessMethod
    public static final BluetoothManager _UL__ULSEP_android_bluetooth_BluetoothManager_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (BluetoothManager) UL.factorymap.get(UL_id._UL__ULSEP_android_bluetooth_BluetoothManager_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final BluetoothManager _UL__ULSEP_android_bluetooth_BluetoothManager_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideBluetoothManager(BundledAndroidModule._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final BluetoothLeScanner _UL__ULSEP_android_bluetooth_le_BluetoothLeScanner_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (BluetoothLeScanner) UL.factorymap.get(UL_id._UL__ULSEP_android_bluetooth_le_BluetoothLeScanner_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final BluetoothLeScanner _UL__ULSEP_android_bluetooth_le_BluetoothLeScanner_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideBluetoothLeScanner(_UL__ULSEP_android_bluetooth_BluetoothAdapter_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_android_bluetooth_le_BluetoothLeScanner_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_android_bluetooth_le_BluetoothLeScanner_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_android_bluetooth_BluetoothAdapter_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_android_bluetooth_BluetoothAdapter_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_android_bluetooth_le_BluetoothLeScanner_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_android_bluetooth_le_BluetoothLeScanner_ULSEP_BINDING_ID, injectorLike);
    }

    @ProviderMethod
    static JobScheduler provideJobScheduler(@UnsafeContextInjection Context context) {
        return (JobScheduler) context.getSystemService("jobscheduler");
    }

    @ProviderMethod
    static BluetoothManager provideBluetoothManager(@ForAppContext Context context) {
        return (BluetoothManager) context.getSystemService("bluetooth");
    }

    @ProviderMethod
    static BluetoothAdapter provideBluetoothAdapter() {
        return BluetoothAdapter.getDefaultAdapter();
    }

    @ProviderMethod
    static BluetoothLeScanner provideBluetoothLeScanner(BluetoothAdapter bluetoothAdapter) {
        return bluetoothAdapter.getBluetoothLeScanner();
    }
}
