package com.oculus.library.security;

import android.content.Context;
import com.facebook.inject.ApplicationScopeClassInit;
import com.facebook.inject.ApplicationScoped;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightSingletonProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.UL;
import com.oculus.library.security.SecurityModule;
import javax.inject.Inject;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_library_security_TrustedApplications_ULSEP_BINDING_ID"})
@ApplicationScoped
public class AccessControl {
    private static volatile AccessControl _UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_INSTANCE;
    private TrustedApplications mTrustedApplications;

    public enum Feature {
        APP_DATA_INTERNAL,
        APP_DATA_MODIFY,
        APP_ACTION_INSTALL,
        APP_ACTION_CUSTOM_INSTALL
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_library_security_AccessControl_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(SecurityModule.UL_id._UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_library_security_AccessControl_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(SecurityModule.UL_id._UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final AccessControl _UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (AccessControl) UL.factorymap.get(SecurityModule.UL_id._UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final AccessControl _UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        if (_UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_INSTANCE == null) {
            synchronized (AccessControl.class) {
                ApplicationScopeClassInit start = ApplicationScopeClassInit.start(_UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_INSTANCE, injectorLike);
                if (start != null) {
                    try {
                        _UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_INSTANCE = new AccessControl(TrustedApplications._UL__ULSEP_com_oculus_library_security_TrustedApplications_ULSEP_ACCESS_METHOD(injectorLike.getApplicationInjector()));
                    } finally {
                        start.finish();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_library_security_AccessControl_ULSEP_INSTANCE;
    }

    public enum Level {
        NONE(new Feature[0]),
        PUBLIC(new Feature[0]),
        INTERNAL(Feature.APP_DATA_INTERNAL, Feature.APP_DATA_MODIFY, Feature.APP_ACTION_INSTALL),
        SELF(Feature.APP_DATA_INTERNAL, Feature.APP_DATA_MODIFY, Feature.APP_ACTION_INSTALL, Feature.APP_ACTION_CUSTOM_INSTALL);
        
        private Feature[] mFeatures;

        private Level(Feature... featureArr) {
            this.mFeatures = featureArr;
        }

        public boolean hasAccessTo(Feature feature) {
            for (Feature feature2 : this.mFeatures) {
                if (feature.equals(feature2)) {
                    return true;
                }
            }
            return false;
        }
    }

    @Inject
    public AccessControl(TrustedApplications trustedApplications) {
        this.mTrustedApplications = trustedApplications;
    }

    public Level getAccessLevel(Context context, String str) {
        if (context.getPackageName().equals(str)) {
            return Level.SELF;
        }
        if (!this.mTrustedApplications.isTrusted()) {
            return Level.PUBLIC;
        }
        return Level.INTERNAL;
    }
}
