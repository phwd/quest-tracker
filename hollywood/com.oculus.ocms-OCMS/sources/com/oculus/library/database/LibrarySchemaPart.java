package com.oculus.library.database;

import android.database.sqlite.SQLiteDatabase;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.google.common.collect.ImmutableList;
import com.oculus.database.supplier.TablesDbSchemaPart;
import com.oculus.library.database.DatabaseModule;
import com.oculus.library.database.contract.LibraryDBContract;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_library_database_LibraryTable_ULSEP_BINDING_ID"})
public class LibrarySchemaPart extends TablesDbSchemaPart {
    private static final String PART_NAME = "library";
    private static final int VERSION = 22;
    private LibraryTable mLibraryTable;

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_library_database_LibrarySchemaPart_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(DatabaseModule.UL_id._UL__ULSEP_com_oculus_library_database_LibrarySchemaPart_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final LibrarySchemaPart _UL__ULSEP_com_oculus_library_database_LibrarySchemaPart_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (LibrarySchemaPart) UL.factorymap.get(DatabaseModule.UL_id._UL__ULSEP_com_oculus_library_database_LibrarySchemaPart_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final LibrarySchemaPart _UL__ULSEP_com_oculus_library_database_LibrarySchemaPart_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new LibrarySchemaPart(LibraryTable._UL__ULSEP_com_oculus_library_database_LibraryTable_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_library_database_LibrarySchemaPart_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(DatabaseModule.UL_id._UL__ULSEP_com_oculus_library_database_LibrarySchemaPart_ULSEP_BINDING_ID, injectorLike);
    }

    @Inject
    public LibrarySchemaPart(LibraryTable libraryTable) {
        super("library", 22, ImmutableList.of(libraryTable));
        this.mLibraryTable = libraryTable;
    }

    /* access modifiers changed from: protected */
    @Override // com.oculus.database.supplier.SharedSQLiteSchemaPart, com.oculus.database.supplier.TablesDbSchemaPart
    public void onUpgrade(SQLiteDatabase sQLiteDatabase, int i, int i2) {
        super.onUpgrade(sQLiteDatabase, i, i2);
        if (i < 11) {
            LibraryDBContract.Column column = LibraryDBContract.Columns.PERMISSIONS_V2;
            this.mLibraryTable.addColumn(column.name, column.type);
        }
        if (i < 12) {
            LibraryDBContract.Column column2 = LibraryDBContract.Columns.INTERNET_CONNECTION;
            this.mLibraryTable.addColumn(column2.name, column2.type);
        }
        if (i < 13) {
            LibraryDBContract.Column column3 = LibraryDBContract.Columns.TRUSTED_BINARY_STATUS;
            this.mLibraryTable.addColumn(column3.name, column3.type);
        }
        if (i < 14) {
            LibraryDBContract.Column column4 = LibraryDBContract.Columns.IS_CONCEPT;
            this.mLibraryTable.addColumn(column4.name, column4.type);
        }
        if (i < 15) {
            LibraryDBContract.Column column5 = LibraryDBContract.Columns.IS_TV_APP;
            this.mLibraryTable.addColumn(column5.name, column5.type);
        }
        if (i < 16) {
            LibraryDBContract.Column column6 = LibraryDBContract.Columns.SYSTEM_UI_AS_OVERLAY_MODE;
            this.mLibraryTable.addColumn(column6.name, column6.type);
        }
        if (i < 17) {
            LibraryDBContract.Column column7 = LibraryDBContract.Columns.HERO_IMAGE;
            this.mLibraryTable.addColumn(column7.name, column7.type);
        }
        if (i < 18) {
            LibraryDBContract.Column column8 = LibraryDBContract.Columns.AUTO_UPDATE_ENABLED;
            this.mLibraryTable.addColumn(column8.name, column8.type);
        }
        if (i < 19) {
            LibraryDBContract.Column column9 = LibraryDBContract.Columns.APPLICATION_ORGANIZATION_ID;
            this.mLibraryTable.addColumn(column9.name, column9.type);
        }
        if (i < 20) {
            LibraryDBContract.Column column10 = LibraryDBContract.Columns.IS_TEST;
            this.mLibraryTable.addColumn(column10.name, column10.type);
        }
        if (i < 21) {
            LibraryDBContract.Column column11 = LibraryDBContract.Columns.DUC_NON_COMPLIANT;
            this.mLibraryTable.addColumn(column11.name, column11.type);
            LibraryDBContract.Column column12 = LibraryDBContract.Columns.ACCESS_FEATURE_KEYS;
            this.mLibraryTable.addColumn(column12.name, column12.type);
        }
        if (i < 22) {
            LibraryDBContract.Column column13 = LibraryDBContract.Columns.ENVIRONMENT_SOURCE_ID;
            this.mLibraryTable.addColumn(column13.name, column13.type);
            LibraryDBContract.Column column14 = LibraryDBContract.Columns.ENVIRONMENT_SOURCE_DISPLAY_NAME;
            this.mLibraryTable.addColumn(column14.name, column14.type);
        }
    }
}
