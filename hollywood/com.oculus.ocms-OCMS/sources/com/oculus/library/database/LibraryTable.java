package com.oculus.library.database;

import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.google.common.collect.ImmutableList;
import com.oculus.database.sqlite.SqlColumn;
import com.oculus.database.sqlite.SqlKeys;
import com.oculus.database.sqlite.SqlTable;
import com.oculus.library.database.DatabaseModule;
import com.oculus.library.database.contract.LibraryDBContract;
import javax.inject.Provider;

@Dependencies({})
public class LibraryTable extends SqlTable {
    private static final ImmutableList<SqlColumn> ALL_COLUMNS = ImmutableList.of(toSqlColumn(LibraryDBContract.Columns.USER_ID), toSqlColumn(LibraryDBContract.Columns.ITEM_ID), toSqlColumn(LibraryDBContract.Columns.NAME), toSqlColumn(LibraryDBContract.Columns.APPLICATION_GROUPING_ID), toSqlColumn(LibraryDBContract.Columns.APPLICATION_ORGANIZATION_ID), toSqlColumn(LibraryDBContract.Columns.IMAGE_SOURCE_SQUARE), toSqlColumn(LibraryDBContract.Columns.IMAGE_SOURCE_MAIN), toSqlColumn(LibraryDBContract.Columns.IMAGE_SOURCE_TINY), toSqlColumn(LibraryDBContract.Columns.SMALL_LANDSCAPE_IMAGE), toSqlColumn(LibraryDBContract.Columns.HERO_IMAGE), toSqlColumn(LibraryDBContract.Columns.PACKAGE_NAME), toSqlColumn(LibraryDBContract.Columns.LATEST_VERSION_CODE), toSqlColumn(LibraryDBContract.Columns.LATEST_VERSION_NAME), toSqlColumn(LibraryDBContract.Columns.LATEST_SDK_TARGET_VERSION), toSqlColumn(LibraryDBContract.Columns.INSTALLATION_SIZE), toSqlColumn(LibraryDBContract.Columns.DOWNLOADED_SIZE), toSqlColumn(LibraryDBContract.Columns.PERMISSIONS), toSqlColumn(LibraryDBContract.Columns.INSTALLABLE_ON_EXTERNAL_STORAGE), toSqlColumn(LibraryDBContract.Columns.USER_QUALITY_RATING), toSqlColumn(LibraryDBContract.Columns.STATUS), toSqlColumn(LibraryDBContract.Columns.CLOUD_STORAGE_STATUS), toSqlColumn(LibraryDBContract.Columns.SUPPORTED_INPUT_DEVICES), toSqlColumn(LibraryDBContract.Columns.ENTITLEMENT_HASH), toSqlColumn(LibraryDBContract.Columns.APP_SCOPED_USER_ID), toSqlColumn(LibraryDBContract.Columns.RECENT_ACTIVITY), toSqlColumn(LibraryDBContract.Columns.COMFORT_RATING), toSqlColumn(LibraryDBContract.Columns.FAVORITE), toSqlColumn(LibraryDBContract.Columns.UNSEEN), toSqlColumn(LibraryDBContract.Columns.LIVESTREAMING_STATUS), toSqlColumn(LibraryDBContract.Columns.LIVESTREAMING_STATUS_AUDIO_HOOKING_ENABLED), toSqlColumn(LibraryDBContract.Columns.CHROMECAST_AUDIO_ENABLED), toSqlColumn(LibraryDBContract.Columns.MIN_RECOMMENDED_VERSION_CODE), toSqlColumn(LibraryDBContract.Columns.MIN_REQUIRED_VERSION_CODE), toSqlColumn(LibraryDBContract.Columns.MICROPHONE_USAGE), toSqlColumn(LibraryDBContract.Columns.TOTAL_ACTIVITY), toSqlColumn(LibraryDBContract.Columns.PATCH_DOWNLOAD_SIZE), toSqlColumn(LibraryDBContract.Columns.APK_FULL_SIZE), toSqlColumn(LibraryDBContract.Columns.OBB_FULL_SIZE), toSqlColumn(LibraryDBContract.Columns.IS_DEMO_OF), toSqlColumn(LibraryDBContract.Columns.SUPPORTED_PLATFORM), toSqlColumn(LibraryDBContract.Columns.APP_MEDIA_CAPABILITIES), toSqlColumn(LibraryDBContract.Columns.PLAY_MODES), toSqlColumn(LibraryDBContract.Columns.CATEGORY), toSqlColumn(LibraryDBContract.Columns.HEAD_TRACKING), toSqlColumn(LibraryDBContract.Columns.GRANT_REASON), toSqlColumn(LibraryDBContract.Columns.GRANT_TIME), toSqlColumn(LibraryDBContract.Columns.GRANT_EXPIRATION), toSqlColumn(LibraryDBContract.Columns.CURRENT_LANGUAGE_PACK), toSqlColumn(LibraryDBContract.Columns.PERMISSIONS_V2), toSqlColumn(LibraryDBContract.Columns.INTERNET_CONNECTION), toSqlColumn(LibraryDBContract.Columns.TRUSTED_BINARY_STATUS), toSqlColumn(LibraryDBContract.Columns.IS_CONCEPT), toSqlColumn(LibraryDBContract.Columns.IS_TV_APP), toSqlColumn(LibraryDBContract.Columns.IS_TEST), toSqlColumn(LibraryDBContract.Columns.SYSTEM_UI_AS_OVERLAY_MODE), toSqlColumn(LibraryDBContract.Columns.AUTO_UPDATE_ENABLED), toSqlColumn(LibraryDBContract.Columns.DUC_NON_COMPLIANT), toSqlColumn(LibraryDBContract.Columns.ACCESS_FEATURE_KEYS), toSqlColumn(LibraryDBContract.Columns.ENVIRONMENT_SOURCE_ID), toSqlColumn(LibraryDBContract.Columns.ENVIRONMENT_SOURCE_DISPLAY_NAME));
    private static final ImmutableList<SqlKeys.SqlKey> ALL_KEYS = ImmutableList.builder().add((Object) new SqlKeys.PrimaryKey(KEY_COLUMNS)).build();
    private static final ImmutableList<SqlColumn> KEY_COLUMNS = ImmutableList.of(toSqlColumn(LibraryDBContract.Columns.USER_ID), toSqlColumn(LibraryDBContract.Columns.PACKAGE_NAME));

    @AutoGeneratedAccessMethod
    public static final LibraryTable _UL__ULSEP_com_oculus_library_database_LibraryTable_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (LibraryTable) UL.factorymap.get(DatabaseModule.UL_id._UL__ULSEP_com_oculus_library_database_LibraryTable_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final LibraryTable _UL__ULSEP_com_oculus_library_database_LibraryTable_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new LibraryTable();
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_library_database_LibraryTable_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(DatabaseModule.UL_id._UL__ULSEP_com_oculus_library_database_LibraryTable_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_library_database_LibraryTable_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(DatabaseModule.UL_id._UL__ULSEP_com_oculus_library_database_LibraryTable_ULSEP_BINDING_ID, injectorLike);
    }

    private static SqlColumn toSqlColumn(LibraryDBContract.Column column) {
        return new SqlColumn(column.name, column.type);
    }

    @Inject
    public LibraryTable() {
        super("library", ALL_COLUMNS, ALL_KEYS);
    }
}
