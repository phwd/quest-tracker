package com.oculus.library.auth;

import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AddToMultiBind;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorModule;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.auth.handler.AuthHandlerModule;
import com.oculus.auth.handler.LoginHandler;
import com.oculus.auth.handler.LogoutHandler;
import com.oculus.common.init.AppInitModule;
import com.oculus.library.database.DatabaseModule;
import com.oculus.libraryapi.OVRLibraryModule;

@InjectorModule
public abstract class LibraryAuthModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_library_auth_LibraryAuthListener_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_library_auth_LibraryAuthListener_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(LibraryAuthListener.class)));
    }

    /* access modifiers changed from: package-private */
    @AddToMultiBind
    public abstract LoginHandler addMobileConfigLoginHandler(LibraryAuthListener libraryAuthListener);

    /* access modifiers changed from: package-private */
    @AddToMultiBind
    public abstract LogoutHandler addMobileConfigLogoutHandler(LibraryAuthListener libraryAuthListener);

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForLibraryAuthModule {
        AutoGeneratedBindingsForLibraryAuthModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.require(AuthHandlerModule.class);
                binder.require(AppInitModule.class);
                binder.require(DatabaseModule.class);
                binder.require(OVRLibraryModule.class);
                binder.bindMulti(LoginHandler.class).add(LibraryAuthListener.class);
                binder.bindMulti(LogoutHandler.class).add(LibraryAuthListener.class);
                binder.bind(LibraryAuthListener.class).toProvider(new LibraryAuthListenerAutoProvider());
            }
        }
    }
}
