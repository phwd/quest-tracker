package com.oculus.ocms.app;

import com.facebook.common.android.AndroidModule;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.ApplicationScopeClassInit;
import com.facebook.inject.ApplicationScoped;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.InjectorModule;
import com.facebook.inject.Lazy;
import com.facebook.inject.ProviderMethod;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.inject.UltralightSingletonProvider;
import com.facebook.mobileconfig.UniverseType;
import com.facebook.mobileconfig.factory.module.MobileConfigFactoryModule;
import com.facebook.mobileconfig.interfaces.MobileConfigInterfacesModule;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.inject.Key;
import com.oculus.app.standalone.StandaloneApplicationLikeModule;
import com.oculus.appmanager.downloader.OculusDownloaderModule;
import com.oculus.appmanager.downloader.progress.OuculusDownloadProgressTrackerModule;
import com.oculus.appmanager.installer.dumper.InstallerDumperModule;
import com.oculus.appmanager.installer.notification.InstallerNotificationsModule;
import com.oculus.auth.credentials.CredentialsManager;
import com.oculus.auth.credentials.CredentialsModule;
import com.oculus.auth.handler.AuthHandlerModule;
import com.oculus.auth.receiver.BaseLoginHandler;
import com.oculus.auth.receiver.ReceiverModule;
import com.oculus.auth.storage.AuthDatastore;
import com.oculus.auth.storage.NoopAuthDatastore;
import com.oculus.auth.storage.StorageModule;
import com.oculus.autoupdates.AutoUpdatesModule;
import com.oculus.autoupdates.dumper.AutoUpdatesDumperModule;
import com.oculus.base.app.AppInfo;
import com.oculus.base.app.AppInfoModule;
import com.oculus.common.init.AppInitModule;
import com.oculus.common.init.impl.ImplModule;
import com.oculus.downloader.DownloaderModule;
import com.oculus.downloader.init.DownloaderInitModule;
import com.oculus.downloader.progress.DownloaderProgressModule;
import com.oculus.errorreporting.ErrorReportingModule;
import com.oculus.errorreporting.interfaces.InterfacesModule;
import com.oculus.executors.ExecutorsModule;
import com.oculus.http.core.annotations.OculusApiEndpoint;
import com.oculus.http.core.annotations.ReportGraphBackendException;
import com.oculus.http.core.endpoint.EndpointModule;
import com.oculus.http.useragent.AppNameInUserAgent;
import com.oculus.http.useragent.UserAgentModule;
import com.oculus.library.auth.LibraryAuthModule;
import com.oculus.library.database.DatabaseModule;
import com.oculus.library.job.LibraryJobModule;
import com.oculus.libraryapi.dumper.OVRLibraryDumperModule;
import com.oculus.mobileconfig.dumper.MobileConfigDumperModule;
import com.oculus.mobileconfig.init.MobileConfigInitModule;
import com.oculus.mobileconfig.init.MobileConfigInitOptions;
import com.oculus.mobileconfig.updater.MobileConfigUpdaterModule;
import com.oculus.ocms.defaultapps.DefaultAppsModule;
import com.oculus.ocms.defaultapps.dumper.DefaultAppsDumperModule;
import com.oculus.ocms.library.OCMSLibraryModule;
import com.oculus.ocms.locationservices.LocationServiceModule;
import com.oculus.ocms.locationservices.dumper.LocationServiceDumperModule;
import com.oculus.ocms.testing.TestingModule;
import com.oculus.util.constants.OculusConstants;
import java.lang.annotation.Annotation;
import javax.inject.Provider;

@InjectorModule
public class OCMSAppModule extends AbstractLibraryModule {
    private static volatile ObjectMapper _UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_INSTANCE;
    private static volatile MobileConfigInitOptions _UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_INSTANCE;

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(ObjectMapper.class)));
        public static final int _UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(CredentialsManager.class)));
        public static final int _UL__ULSEP_com_oculus_auth_receiver_BaseLoginHandler_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_auth_receiver_BaseLoginHandler_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(BaseLoginHandler.class)));
        public static final int _UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(AuthDatastore.class)));
        public static final int _UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(AppInfo.class)));
        public static final int _UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(MobileConfigInitOptions.class)));
        public static final int _UL__ULSEP_com_oculus_ocms_app_OCMSConfigValueProvider_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_ocms_app_OCMSConfigValueProvider_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(OCMSConfigValueProvider.class)));
        public static final int _UL__ULSEP_com_oculus_ocms_app_OCMSConfigurationPrefs_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_ocms_app_OCMSConfigurationPrefs_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(OCMSConfigurationPrefs.class)));
        public static final int _UL__ULSEP_com_oculus_ocms_app_OCMSCredentialsManager_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_ocms_app_OCMSCredentialsManager_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(OCMSCredentialsManager.class)));
        public static final int _UL__ULSEP_java_lang_Boolean_ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_java_lang_Boolean_ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(Boolean.class, (Class<? extends Annotation>) ReportGraphBackendException.class)));
        public static final int _UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_core_annotations_OculusApiEndpoint_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_core_annotations_OculusApiEndpoint_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(String.class, (Class<? extends Annotation>) OculusApiEndpoint.class)));
        public static final int _UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_useragent_AppNameInUserAgent_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_useragent_AppNameInUserAgent_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(String.class, (Class<? extends Annotation>) AppNameInUserAgent.class)));
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_java_lang_String_ULGT__ULSEP_com_oculus_http_core_annotations_OculusApiEndpoint_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_core_annotations_OculusApiEndpoint_ULSEP_BINDING_ID, injectorLike);
    }

    @AppNameInUserAgent
    @ProviderMethod
    static String provideAppNameInUserAgent() {
        return OculusConstants.OCMS_USER_AGENT_APP_NAME;
    }

    @ProviderMethod
    static BaseLoginHandler provideBaseLoginHandler(OCMSCredentialsManager oCMSCredentialsManager) {
        return oCMSCredentialsManager;
    }

    @ProviderMethod
    static CredentialsManager provideCredentialsManager(OCMSCredentialsManager oCMSCredentialsManager) {
        return oCMSCredentialsManager;
    }

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForOCMSAppModule {
        AutoGeneratedBindingsForOCMSAppModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(AndroidModule.class);
                binder.require(BundledAndroidModule.class);
                binder.require(MobileConfigFactoryModule.class);
                binder.require(MobileConfigInterfacesModule.class);
                binder.require(StandaloneApplicationLikeModule.class);
                binder.require(OculusDownloaderModule.class);
                binder.require(OuculusDownloadProgressTrackerModule.class);
                binder.require(InstallerDumperModule.class);
                binder.require(InstallerNotificationsModule.class);
                binder.require(CredentialsModule.class);
                binder.require(AuthHandlerModule.class);
                binder.require(ReceiverModule.class);
                binder.require(StorageModule.class);
                binder.require(AutoUpdatesModule.class);
                binder.require(AutoUpdatesDumperModule.class);
                binder.require(AppInfoModule.class);
                binder.require(AppInitModule.class);
                binder.require(ImplModule.class);
                binder.require(DownloaderModule.class);
                binder.require(DownloaderInitModule.class);
                binder.require(DownloaderProgressModule.class);
                binder.require(ErrorReportingModule.class);
                binder.require(InterfacesModule.class);
                binder.require(ExecutorsModule.class);
                binder.require(EndpointModule.class);
                binder.require(UserAgentModule.class);
                binder.require(LibraryAuthModule.class);
                binder.require(DatabaseModule.class);
                binder.require(LibraryJobModule.class);
                binder.require(OVRLibraryDumperModule.class);
                binder.require(MobileConfigDumperModule.class);
                binder.require(MobileConfigInitModule.class);
                binder.require(MobileConfigUpdaterModule.class);
                binder.require(DefaultAppsModule.class);
                binder.require(DefaultAppsDumperModule.class);
                binder.require(OCMSLibraryModule.class);
                binder.require(LocationServiceModule.class);
                binder.require(LocationServiceDumperModule.class);
                binder.require(TestingModule.class);
                binder.bind(ObjectMapper.class).toProvider(new ObjectMapperMethodAutoProvider()).in(ApplicationScoped.class);
                binder.bind(CredentialsManager.class).toProvider(new CredentialsManagerMethodAutoProvider());
                binder.bind(BaseLoginHandler.class).toProvider(new BaseLoginHandlerMethodAutoProvider());
                binder.bind(AuthDatastore.class).toProvider(new AuthDatastoreMethodAutoProvider());
                binder.bind(AppInfo.class).toProvider(new AppInfoMethodAutoProvider());
                binder.bind(MobileConfigInitOptions.class).toProvider(new MobileConfigInitOptionsMethodAutoProvider()).in(ApplicationScoped.class);
                binder.bind(OCMSConfigValueProvider.class).toProvider(new OCMSConfigValueProviderAutoProvider());
                binder.bind(OCMSConfigurationPrefs.class).toProvider(new OCMSConfigurationPrefsAutoProvider()).in(ApplicationScoped.class);
                binder.bind(OCMSCredentialsManager.class).toProvider(new OCMSCredentialsManagerAutoProvider()).in(ApplicationScoped.class);
                binder.bind(Boolean.class).annotatedWith(ReportGraphBackendException.class).toProvider(new Boolean_com_oculus_http_core_annotations_ReportGraphBackendExceptionMethodAutoProvider());
                binder.bind(String.class).annotatedWith(OculusApiEndpoint.class).toProvider(new String_com_oculus_http_core_annotations_OculusApiEndpointMethodAutoProvider());
                binder.bind(String.class).annotatedWith(AppNameInUserAgent.class).toProvider(new String_com_oculus_http_useragent_AppNameInUserAgentMethodAutoProvider());
                binder.bindComponent(OCMSApplication.class).toProvider(new OCMSApplicationAutoProvider());
            }
        }
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_fasterxml_jackson_databind_ObjectMapper_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(UL_id._UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_credentials_CredentialsManager_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_receiver_BaseLoginHandler_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_oculus_auth_receiver_BaseLoginHandler_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_storage_AuthDatastore_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_base_app_AppInfo_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_java_lang_Boolean_ULGT__ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_java_lang_Boolean_ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_java_lang_String_ULGT__ULSEP_com_oculus_http_useragent_AppNameInUserAgent_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_useragent_AppNameInUserAgent_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final ObjectMapper _UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (ObjectMapper) UL.factorymap.get(UL_id._UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final ObjectMapper _UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        if (_UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_INSTANCE == null) {
            synchronized (ObjectMapper.class) {
                ApplicationScopeClassInit start = ApplicationScopeClassInit.start(_UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_INSTANCE, injectorLike);
                if (start != null) {
                    try {
                        injectorLike.getApplicationInjector();
                        _UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_INSTANCE = provideObjectMapper();
                    } finally {
                        start.finish();
                    }
                }
            }
        }
        return _UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_INSTANCE;
    }

    @AutoGeneratedAccessMethod
    public static final CredentialsManager _UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (CredentialsManager) UL.factorymap.get(UL_id._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final CredentialsManager _UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideCredentialsManager(OCMSCredentialsManager._UL__ULSEP_com_oculus_ocms_app_OCMSCredentialsManager_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final BaseLoginHandler _UL__ULSEP_com_oculus_auth_receiver_BaseLoginHandler_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (BaseLoginHandler) UL.factorymap.get(UL_id._UL__ULSEP_com_oculus_auth_receiver_BaseLoginHandler_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final BaseLoginHandler _UL__ULSEP_com_oculus_auth_receiver_BaseLoginHandler_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideBaseLoginHandler(OCMSCredentialsManager._UL__ULSEP_com_oculus_ocms_app_OCMSCredentialsManager_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final AuthDatastore _UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (AuthDatastore) UL.factorymap.get(UL_id._UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final AuthDatastore _UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideAuthDatastore();
    }

    @AutoGeneratedAccessMethod
    public static final AppInfo _UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (AppInfo) UL.factorymap.get(UL_id._UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final AppInfo _UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideAppInfo();
    }

    @AutoGeneratedAccessMethod
    public static final MobileConfigInitOptions _UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (MobileConfigInitOptions) UL.factorymap.get(UL_id._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final MobileConfigInitOptions _UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        if (_UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_INSTANCE == null) {
            synchronized (MobileConfigInitOptions.class) {
                ApplicationScopeClassInit start = ApplicationScopeClassInit.start(_UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_INSTANCE, injectorLike);
                if (start != null) {
                    try {
                        injectorLike.getApplicationInjector();
                        _UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_INSTANCE = provideMobileConfigInitOptions();
                    } finally {
                        start.finish();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_INSTANCE;
    }

    @AutoGeneratedAccessMethod
    public static final Boolean _UL__ULSEP_java_lang_Boolean_ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (Boolean) UL.factorymap.get(UL_id._UL__ULSEP_java_lang_Boolean_ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final Boolean _UL__ULSEP_java_lang_Boolean_ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideReportGraphBackendException(OCMSConfigValueProvider._UL__ULSEP_com_oculus_ocms_app_OCMSConfigValueProvider_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final String _UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_core_annotations_OculusApiEndpoint_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (String) UL.factorymap.get(UL_id._UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_core_annotations_OculusApiEndpoint_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final String _UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_core_annotations_OculusApiEndpoint_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideOculusApiEndpoint();
    }

    @AutoGeneratedAccessMethod
    public static final String _UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_useragent_AppNameInUserAgent_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (String) UL.factorymap.get(UL_id._UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_useragent_AppNameInUserAgent_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final String _UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_useragent_AppNameInUserAgent_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideAppNameInUserAgent();
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_fasterxml_jackson_databind_ObjectMapper_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(UL_id._UL__ULSEP_com_fasterxml_jackson_databind_ObjectMapper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_credentials_CredentialsManager_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_receiver_BaseLoginHandler_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_oculus_auth_receiver_BaseLoginHandler_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_storage_AuthDatastore_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_base_app_AppInfo_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_java_lang_Boolean_ULGT__ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_java_lang_Boolean_ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_java_lang_String_ULGT__ULSEP_com_oculus_http_core_annotations_OculusApiEndpoint_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_core_annotations_OculusApiEndpoint_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_java_lang_String_ULGT__ULSEP_com_oculus_http_useragent_AppNameInUserAgent_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_useragent_AppNameInUserAgent_ULSEP_BINDING_ID, injectorLike);
    }

    @OculusApiEndpoint
    @ProviderMethod
    static String provideOculusApiEndpoint() {
        return EndpointModule.getEndpointOculus();
    }

    @ReportGraphBackendException
    @ProviderMethod
    static Boolean provideReportGraphBackendException(OCMSConfigValueProvider oCMSConfigValueProvider) {
        return Boolean.valueOf(oCMSConfigValueProvider.provideReportGraphBackendException());
    }

    @ProviderMethod
    static AuthDatastore provideAuthDatastore() {
        return new NoopAuthDatastore();
    }

    @ProviderMethod
    static AppInfo provideAppInfo() {
        return new AppInfo(OculusConstants.OCMS_FB_APP_ID, OculusConstants.OCMS_APP_NAME, OculusConstants.OCMS_OCULUS_FB_APP_TOKEN, OculusConstants.HORIZON_APP_FLYTRAP_CATEGORY_ID, OculusConstants.OCMS_OCULUS_APP_ID, "");
    }

    @ApplicationScoped
    @ProviderMethod
    static MobileConfigInitOptions provideMobileConfigInitOptions() {
        return new MobileConfigInitOptions("OCMS-", true, UniverseType.Oculus);
    }

    @ApplicationScoped
    @ProviderMethod
    static ObjectMapper provideObjectMapper() {
        return new ObjectMapper(new JsonFactory());
    }
}
