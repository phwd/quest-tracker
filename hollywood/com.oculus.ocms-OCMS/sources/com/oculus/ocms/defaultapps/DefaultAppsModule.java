package com.oculus.ocms.defaultapps;

import com.facebook.infer.annotation.Nullsafe;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorModule;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.common.init.AppInitModule;
import com.oculus.common.packagescache.PackagesCacheModule;
import com.oculus.coreapps.CoreappsModule;
import com.oculus.errorreporting.interfaces.InterfacesModule;
import com.oculus.executors.ExecutorsModule;
import com.oculus.horizon.logging.LoggingModule;
import com.oculus.http.common.HttpModule;
import com.oculus.http.core.ApiModule;
import com.oculus.http.core.endpoint.EndpointModule;
import com.oculus.http.core.interceptor.InterceptorModule;
import com.oculus.http.useragent.UserAgentModule;
import com.oculus.ocms.defaultapps.graphql.DefaultAppsGraphQLQuery;
import com.oculus.ocms.defaultapps.graphql.DefaultAppsGraphQLQueryAutoProvider;
import com.oculus.oculustestsettings.OculusTestSettingsModule;
import com.oculus.ossdk.inject.OsSdkModule;
import com.oculus.util.device.DeviceModule;
import com.oculus.util.thread.ThreadModule;

@InjectorModule
@Nullsafe(trustOnly = @Nullsafe.TrustList({}), value = Nullsafe.Mode.LOCAL)
public class DefaultAppsModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_ocms_defaultapps_DefaultAppsInstaller_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_ocms_defaultapps_DefaultAppsInstaller_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(DefaultAppsInstaller.class)));
        public static final int _UL__ULSEP_com_oculus_ocms_defaultapps_DefaultAppsMethods_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_ocms_defaultapps_DefaultAppsMethods_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(DefaultAppsMethods.class)));
        public static final int _UL__ULSEP_com_oculus_ocms_defaultapps_DefaultAppsPrefs_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_ocms_defaultapps_DefaultAppsPrefs_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(DefaultAppsPrefs.class)));
        public static final int _UL__ULSEP_com_oculus_ocms_defaultapps_DefaultAppsSetupListener_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_ocms_defaultapps_DefaultAppsSetupListener_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(DefaultAppsSetupListener.class)));
        public static final int _UL__ULSEP_com_oculus_ocms_defaultapps_graphql_DefaultAppsGraphQLQuery_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_ocms_defaultapps_graphql_DefaultAppsGraphQLQuery_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(DefaultAppsGraphQLQuery.class)));
    }

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForDefaultAppsModule {
        AutoGeneratedBindingsForDefaultAppsModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.require(AppInitModule.class);
                binder.require(PackagesCacheModule.class);
                binder.require(CoreappsModule.class);
                binder.require(InterfacesModule.class);
                binder.require(ExecutorsModule.class);
                binder.require(LoggingModule.class);
                binder.require(HttpModule.class);
                binder.require(ApiModule.class);
                binder.require(EndpointModule.class);
                binder.require(InterceptorModule.class);
                binder.require(UserAgentModule.class);
                binder.require(OculusTestSettingsModule.class);
                binder.require(OsSdkModule.class);
                binder.require(DeviceModule.class);
                binder.require(ThreadModule.class);
                binder.bind(DefaultAppsInstaller.class).toProvider(new DefaultAppsInstallerAutoProvider());
                binder.bind(DefaultAppsMethods.class).toProvider(new DefaultAppsMethodsAutoProvider());
                binder.bind(DefaultAppsPrefs.class).toProvider(new DefaultAppsPrefsAutoProvider());
                binder.bind(DefaultAppsSetupListener.class).toProvider(new DefaultAppsSetupListenerAutoProvider());
                binder.bind(DefaultAppsGraphQLQuery.class).toProvider(new DefaultAppsGraphQLQueryAutoProvider());
                binder.bindComponent(DefaultAppsHighPriorityJobService.class).toProvider(new DefaultAppsHighPriorityJobServiceAutoProvider());
            }
        }
    }
}
