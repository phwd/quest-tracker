package com.oculus.ocms.locationservices.dumper;

import android.content.Context;
import com.facebook.infer.annotation.Nullsafe;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.stetho.dumpapp.DumpException;
import com.facebook.stetho.dumpapp.DumperContext;
import com.facebook.stetho.dumpapp.DumperPlugin;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.ocms.locationservices.LocationRequestHelper;
import com.oculus.ocms.locationservices.dumper.LocationServiceDumperModule;
import java.io.PrintStream;
import java.util.List;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID"})
@Nullsafe(Nullsafe.Mode.LOCAL)
public class LocationServiceDumper implements DumperPlugin {
    private static final String CMD_PRINT = "print";
    private static final String NAME = "locationservice";
    private static final String TAG = "LocationServiceDumper";
    private InjectionContext _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_ocms_locationservices_dumper_LocationServiceDumper_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(LocationServiceDumperModule.UL_id._UL__ULSEP_com_oculus_ocms_locationservices_dumper_LocationServiceDumper_ULSEP_BINDING_ID, injectorLike);
    }

    @Override // com.facebook.stetho.dumpapp.DumperPlugin
    public String getName() {
        return NAME;
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_ocms_locationservices_dumper_LocationServiceDumper_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(LocationServiceDumperModule.UL_id._UL__ULSEP_com_oculus_ocms_locationservices_dumper_LocationServiceDumper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final LocationServiceDumper _UL__ULSEP_com_oculus_ocms_locationservices_dumper_LocationServiceDumper_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (LocationServiceDumper) UL.factorymap.get(LocationServiceDumperModule.UL_id._UL__ULSEP_com_oculus_ocms_locationservices_dumper_LocationServiceDumper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final LocationServiceDumper _UL__ULSEP_com_oculus_ocms_locationservices_dumper_LocationServiceDumper_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new LocationServiceDumper(injectorLike);
    }

    @Inject
    public LocationServiceDumper(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(1, injectorLike);
    }

    @Override // com.facebook.stetho.dumpapp.DumperPlugin
    public void dump(DumperContext dumperContext) throws DumpException {
        PrintStream stdout = dumperContext.getStdout();
        List<String> argsAsList = dumperContext.getArgsAsList();
        if (argsAsList.size() < 1) {
            stdout.println("Missing command");
            printUsage(stdout);
            return;
        }
        char c = 0;
        String str = argsAsList.get(0);
        if (str.hashCode() != 106934957 || !str.equals("print")) {
            c = 65535;
        }
        if (c == 0) {
            printLocation(stdout);
        }
    }

    private static void printUsage(PrintStream printStream) {
        printStream.format("%s <command>\n", "Usage: " + "dumpapp locationservice");
        printStream.format("%s %s\n", "       " + "dumpapp locationservice", "print");
        printStream.println();
        printStream.format("%s %s: Prints current location Timezone and Grid Frequency\n", "dumpapp locationservice", "print");
        printStream.println();
    }

    private void printLocation(PrintStream printStream) {
        LocationRequestHelper.Result location = new LocationRequestHelper((Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getLocation();
        if (location.success) {
            printStream.println(location.output);
        } else {
            printStream.println(location.error);
        }
    }
}
