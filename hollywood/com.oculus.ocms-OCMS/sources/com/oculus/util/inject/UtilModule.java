package com.oculus.util.inject;

import android.content.Context;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.InjectorModule;
import com.facebook.inject.Lazy;
import com.facebook.inject.ProviderMethod;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.inject.UnsafeContextInjection;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.util.device.DeviceModule;
import com.oculus.util.thread.ThreadModule;
import com.oculus.util.vr.VRUtils;
import javax.inject.Provider;

@InjectorModule
public class UtilModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_util_vr_VRUtils_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_util_vr_VRUtils_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(VRUtils.class)));
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_util_vr_VRUtils_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_oculus_util_vr_VRUtils_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForUtilModule {
        AutoGeneratedBindingsForUtilModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.require(DeviceModule.class);
                binder.require(ThreadModule.class);
                binder.bindDefault(VRUtils.class).toProvider(new VRUtilsMethodAutoProvider());
            }
        }
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_util_vr_VRUtils_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_oculus_util_vr_VRUtils_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final VRUtils _UL__ULSEP_com_oculus_util_vr_VRUtils_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (VRUtils) UL.factorymap.get(UL_id._UL__ULSEP_com_oculus_util_vr_VRUtils_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final VRUtils _UL__ULSEP_com_oculus_util_vr_VRUtils_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideVRUtils(BundledAndroidModule._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_UnsafeContextInjection_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @ProviderMethod(asDefault = true)
    static VRUtils provideVRUtils(@UnsafeContextInjection Context context) {
        return new VRUtils(context);
    }
}
