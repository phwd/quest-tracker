package com.oculus.auth.credentials;

import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.DeclareMultiBinding;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.InjectorModule;
import com.facebook.inject.Lazy;
import com.facebook.inject.ProviderMethod;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.google.inject.TypeLiteral;
import java.util.Set;
import javax.annotation.Nullable;
import javax.inject.Provider;

@InjectorModule
public abstract class CredentialsModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(CredentialsManager.class)));
        public static final int _UL__ULSEP_com_oculus_auth_credentials_Credentials_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_auth_credentials_Credentials_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(Credentials.class)));
        public static final int _UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_credentials_CredentialsChangedHandler_ULGT__ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_credentials_CredentialsChangedHandler_ULGT__ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(new TypeLiteral<Set<CredentialsChangedHandler>>() {
            /* class com.oculus.auth.credentials.CredentialsModule.UL_id.AnonymousClass1 */
        })));
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_java_util_Set_ULLT_com_oculus_auth_credentials_CredentialsChangedHandler_ULGT__ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_credentials_CredentialsChangedHandler_ULGT__ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Set _UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_credentials_CredentialsChangedHandler_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (Set) UL.factorymap.get(UL_id._UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_credentials_CredentialsChangedHandler_ULGT__ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_credentials_Credentials_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_oculus_auth_credentials_Credentials_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_java_util_Set_ULLT_com_oculus_auth_credentials_CredentialsChangedHandler_ULGT__ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_credentials_CredentialsChangedHandler_ULGT__ULSEP_BINDING_ID, injectorLike);
    }

    /* access modifiers changed from: package-private */
    @DeclareMultiBinding
    public abstract Set<CredentialsChangedHandler> getCredentialsChangedHandlers();

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForCredentialsModule {
        AutoGeneratedBindingsForCredentialsModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.assertBindingInstalled(CredentialsManager.class);
                binder.require(BundledAndroidModule.class);
                binder.declareMultiBinding(CredentialsChangedHandler.class);
                binder.bindDefault(Credentials.class).toProvider(new CredentialsMethodAutoProvider());
            }
        }
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_credentials_CredentialsManager_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_credentials_Credentials_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_oculus_auth_credentials_Credentials_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final CredentialsManager _UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (CredentialsManager) UL.factorymap.get(UL_id._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Credentials _UL__ULSEP_com_oculus_auth_credentials_Credentials_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (Credentials) UL.factorymap.get(UL_id._UL__ULSEP_com_oculus_auth_credentials_Credentials_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final Credentials _UL__ULSEP_com_oculus_auth_credentials_Credentials_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideCredentials(_UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_credentials_CredentialsManager_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID, injectorLike);
    }

    @ProviderMethod(asDefault = true)
    @Nullable
    static Credentials provideCredentials(CredentialsManager credentialsManager) {
        return credentialsManager.getCredentials();
    }
}
