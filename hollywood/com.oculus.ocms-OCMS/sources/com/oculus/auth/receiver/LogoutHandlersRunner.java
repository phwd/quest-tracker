package com.oculus.auth.receiver;

import android.os.SystemClock;
import com.facebook.debug.log.BLog;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.auth.handler.AuthHandlerModule;
import com.oculus.auth.handler.LogoutHandler;
import com.oculus.auth.receiver.ReceiverModule;
import java.util.Set;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_handler_LogoutHandler_ULGT__ULSEP_BINDING_ID"})
public class LogoutHandlersRunner {
    private static final String TAG = "LogoutHandlersRunner";
    @Inject
    @Eager
    private final Lazy<Set<LogoutHandler>> mLogoutHandlersLazy;

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_receiver_LogoutHandlersRunner_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(ReceiverModule.UL_id._UL__ULSEP_com_oculus_auth_receiver_LogoutHandlersRunner_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final LogoutHandlersRunner _UL__ULSEP_com_oculus_auth_receiver_LogoutHandlersRunner_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (LogoutHandlersRunner) UL.factorymap.get(ReceiverModule.UL_id._UL__ULSEP_com_oculus_auth_receiver_LogoutHandlersRunner_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final LogoutHandlersRunner _UL__ULSEP_com_oculus_auth_receiver_LogoutHandlersRunner_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new LogoutHandlersRunner(injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_receiver_LogoutHandlersRunner_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(ReceiverModule.UL_id._UL__ULSEP_com_oculus_auth_receiver_LogoutHandlersRunner_ULSEP_BINDING_ID, injectorLike);
    }

    @Inject
    LogoutHandlersRunner(InjectorLike injectorLike) {
        this.mLogoutHandlersLazy = AuthHandlerModule._UL__ULSEP_com_facebook_inject_Lazy_ULLT_java_util_Set_ULLT_com_oculus_auth_handler_LogoutHandler_ULGT__ULGT__ULSEP_ACCESS_METHOD(injectorLike);
    }

    public void runLogoutHandlers() {
        Set<LogoutHandler> set = this.mLogoutHandlersLazy.get();
        long uptimeMillis = SystemClock.uptimeMillis();
        BLog.d(TAG, "Executing %d logout handlers", Integer.valueOf(set.size()));
        for (LogoutHandler logoutHandler : set) {
            BLog.d(TAG, "Executing logout handler: %s", logoutHandler.getClass().getSimpleName());
            logoutHandler.beforeLogout();
        }
        BLog.d(TAG, "Executing logout handlers complete [%d]", Long.valueOf(SystemClock.uptimeMillis() - uptimeMillis));
    }
}
