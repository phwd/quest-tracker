package com.oculus.autoupdates;

import android.content.Context;
import com.facebook.common.android.AndroidModule;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AddToMultiBind;
import com.facebook.inject.ApplicationScopeClassInit;
import com.facebook.inject.ApplicationScoped;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.ForAppContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.InjectorModule;
import com.facebook.inject.Lazy;
import com.facebook.inject.ProviderMethod;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.inject.UltralightSingletonProvider;
import com.facebook.mobileconfig.factory.module.MobileConfigFactoryModule;
import com.facebook.mobileconfig.interfaces.MobileConfigInterfacesModule;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.common.util.concurrent.ListeningExecutorService;
import com.google.common.util.concurrent.MoreExecutors;
import com.google.inject.Key;
import com.oculus.appmanager.info.InfoModule;
import com.oculus.appmanager.installer.events.EventsModule;
import com.oculus.auth.handler.AuthHandlerModule;
import com.oculus.autoupdates.database.AutoUpdatesDBHelper;
import com.oculus.autoupdates.database.AutoUpdatesDBManager;
import com.oculus.autoupdates.database.AutoUpdatesDBManagerAutoProvider;
import com.oculus.common.init.AppInitModule;
import com.oculus.common.init.INeedInit;
import com.oculus.common.packagescache.PackagesCacheModule;
import com.oculus.debug.DebugModule;
import com.oculus.errorreporting.interfaces.InterfacesModule;
import com.oculus.executors.ExecutorsModule;
import com.oculus.installer.InstallerModule;
import com.oculus.libraryapi.OVRLibraryModule;
import com.oculus.logging.utils.UtilsModule;
import com.oculus.managed.ManagedModule;
import com.oculus.ossdk.inject.OsSdkModule;
import com.oculus.profileapi.ProfileapiModule;
import com.oculus.time.TimeModule;
import com.oculus.util.device.DeviceModule;
import com.oculus.util.inject.UtilModule;
import com.oculus.util.thread.ThreadModule;
import java.lang.annotation.Annotation;
import java.util.concurrent.Executors;
import javax.inject.Provider;

@InjectorModule
public abstract class AutoUpdatesModule extends AbstractLibraryModule {
    private static volatile AutoUpdatesDBHelper _UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_INSTANCE;

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_google_common_util_concurrent_ListeningExecutorService_ULSEP_com_oculus_autoupdates_AutoUpdateExecutor_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_google_common_util_concurrent_ListeningExecutorService_ULSEP_com_oculus_autoupdates_AutoUpdateExecutor_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(ListeningExecutorService.class, (Class<? extends Annotation>) AutoUpdateExecutor.class)));
        public static final int _UL__ULSEP_com_oculus_autoupdates_AutoUpdateScheduler_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_autoupdates_AutoUpdateScheduler_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(AutoUpdateScheduler.class)));
        public static final int _UL__ULSEP_com_oculus_autoupdates_AutoUpdateTimeTracker_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_autoupdates_AutoUpdateTimeTracker_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(AutoUpdateTimeTracker.class)));
        public static final int _UL__ULSEP_com_oculus_autoupdates_AutoUpdatesInit_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_autoupdates_AutoUpdatesInit_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(AutoUpdatesInit.class)));
        public static final int _UL__ULSEP_com_oculus_autoupdates_AutoUpdatesManager_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_autoupdates_AutoUpdatesManager_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(AutoUpdatesManager.class)));
        public static final int _UL__ULSEP_com_oculus_autoupdates_PermissionManager_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_autoupdates_PermissionManager_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(PermissionManager.class)));
        public static final int _UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(AutoUpdatesDBHelper.class)));
        public static final int _UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBManager_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBManager_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(AutoUpdatesDBManager.class)));
    }

    /* access modifiers changed from: package-private */
    @AddToMultiBind
    public abstract INeedInit provideINeedInit(AutoUpdatesInit autoUpdatesInit);

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForAutoUpdatesModule {
        AutoGeneratedBindingsForAutoUpdatesModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(AndroidModule.class);
                binder.require(BundledAndroidModule.class);
                binder.require(MobileConfigFactoryModule.class);
                binder.require(MobileConfigInterfacesModule.class);
                binder.require(com.oculus.android.AndroidModule.class);
                binder.require(InfoModule.class);
                binder.require(EventsModule.class);
                binder.require(AuthHandlerModule.class);
                binder.require(AppInitModule.class);
                binder.require(PackagesCacheModule.class);
                binder.require(DebugModule.class);
                binder.require(InterfacesModule.class);
                binder.require(ExecutorsModule.class);
                binder.require(InstallerModule.class);
                binder.require(OVRLibraryModule.class);
                binder.require(UtilsModule.class);
                binder.require(ManagedModule.class);
                binder.require(OsSdkModule.class);
                binder.require(ProfileapiModule.class);
                binder.require(TimeModule.class);
                binder.require(DeviceModule.class);
                binder.require(UtilModule.class);
                binder.require(ThreadModule.class);
                binder.bindMulti(INeedInit.class).add(AutoUpdatesInit.class);
                binder.bind(ListeningExecutorService.class).annotatedWith(AutoUpdateExecutor.class).toProvider(new ListeningExecutorService_com_oculus_autoupdates_AutoUpdateExecutorMethodAutoProvider());
                binder.bind(AutoUpdateScheduler.class).toProvider(new AutoUpdateSchedulerAutoProvider()).in(ApplicationScoped.class);
                binder.bind(AutoUpdateTimeTracker.class).toProvider(new AutoUpdateTimeTrackerAutoProvider());
                binder.bind(AutoUpdatesInit.class).toProvider(new AutoUpdatesInitAutoProvider());
                binder.bind(AutoUpdatesManager.class).toProvider(new AutoUpdatesManagerAutoProvider());
                binder.bind(PermissionManager.class).toProvider(new PermissionManagerAutoProvider()).in(ApplicationScoped.class);
                binder.bind(AutoUpdatesDBHelper.class).toProvider(new AutoUpdatesDBHelperMethodAutoProvider()).in(ApplicationScoped.class);
                binder.bind(AutoUpdatesDBManager.class).toProvider(new AutoUpdatesDBManagerAutoProvider()).in(ApplicationScoped.class);
                binder.bindComponent(AutoUpdateJobService.class).toProvider(new AutoUpdateJobServiceAutoProvider());
            }
        }
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_google_common_util_concurrent_ListeningExecutorService_ULGT__ULSEP_com_oculus_autoupdates_AutoUpdateExecutor_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_google_common_util_concurrent_ListeningExecutorService_ULSEP_com_oculus_autoupdates_AutoUpdateExecutor_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(UL_id._UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final ListeningExecutorService _UL__ULSEP_com_google_common_util_concurrent_ListeningExecutorService_ULSEP_com_oculus_autoupdates_AutoUpdateExecutor_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (ListeningExecutorService) UL.factorymap.get(UL_id._UL__ULSEP_com_google_common_util_concurrent_ListeningExecutorService_ULSEP_com_oculus_autoupdates_AutoUpdateExecutor_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final ListeningExecutorService _UL__ULSEP_com_google_common_util_concurrent_ListeningExecutorService_ULSEP_com_oculus_autoupdates_AutoUpdateExecutor_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideListeningExecutorService();
    }

    @AutoGeneratedAccessMethod
    public static final AutoUpdatesDBHelper _UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (AutoUpdatesDBHelper) UL.factorymap.get(UL_id._UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final AutoUpdatesDBHelper _UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        if (_UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_INSTANCE == null) {
            synchronized (AutoUpdatesDBHelper.class) {
                ApplicationScopeClassInit start = ApplicationScopeClassInit.start(_UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_INSTANCE, injectorLike);
                if (start != null) {
                    try {
                        _UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_INSTANCE = provideAutoUpdatesDBHelper(BundledAndroidModule._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_ACCESS_METHOD(injectorLike.getApplicationInjector()));
                    } finally {
                        start.finish();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_INSTANCE;
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_google_common_util_concurrent_ListeningExecutorService_ULGT__ULSEP_com_oculus_autoupdates_AutoUpdateExecutor_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_google_common_util_concurrent_ListeningExecutorService_ULSEP_com_oculus_autoupdates_AutoUpdateExecutor_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(UL_id._UL__ULSEP_com_oculus_autoupdates_database_AutoUpdatesDBHelper_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoUpdateExecutor
    @ProviderMethod
    static ListeningExecutorService provideListeningExecutorService() {
        return MoreExecutors.listeningDecorator(Executors.newSingleThreadExecutor());
    }

    @ApplicationScoped
    @ProviderMethod
    static AutoUpdatesDBHelper provideAutoUpdatesDBHelper(@ForAppContext Context context) {
        return new AutoUpdatesDBHelper(context);
    }
}
