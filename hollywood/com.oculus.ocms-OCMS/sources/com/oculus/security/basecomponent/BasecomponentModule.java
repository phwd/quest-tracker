package com.oculus.security.basecomponent;

import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorModule;
import com.facebook.mobileconfig.factory.module.MobileConfigFactoryModule;
import com.facebook.mobileconfig.interfaces.MobileConfigInterfacesModule;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.errorreporting.interfaces.InterfacesModule;
import com.oculus.logging.utils.UtilsModule;

@InjectorModule
public class BasecomponentModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_security_basecomponent_OculusContentProviderLogger_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_security_basecomponent_OculusContentProviderLogger_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(OculusContentProviderLogger.class)));
        public static final int _UL__ULSEP_com_oculus_security_basecomponent_OculusIntentLogger_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_security_basecomponent_OculusIntentLogger_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(OculusIntentLogger.class)));
    }

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForBasecomponentModule {
        AutoGeneratedBindingsForBasecomponentModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.require(MobileConfigFactoryModule.class);
                binder.require(MobileConfigInterfacesModule.class);
                binder.require(InterfacesModule.class);
                binder.require(UtilsModule.class);
                binder.bindComponent(BroadcastReceiverWithIntentLogging.class).toProvider(new BroadcastReceiverWithIntentLoggingAutoProvider());
                binder.bind(OculusContentProviderLogger.class).toProvider(new OculusContentProviderLoggerAutoProvider());
                binder.bindComponent(OculusFbPermissionSecureIntentService.class).toProvider(new OculusFbPermissionSecureIntentServiceAutoProvider());
                binder.bindComponent(OculusFbPermissionSecureService.class).toProvider(new OculusFbPermissionSecureServiceAutoProvider());
                binder.bindComponent(OculusFbPermissionsActivity.class).toProvider(new OculusFbPermissionsActivityAutoProvider());
                binder.bind(OculusIntentLogger.class).toProvider(new OculusIntentLoggerAutoProvider());
                binder.bindComponent(OculusPublicActivity.class).toProvider(new OculusPublicActivityAutoProvider());
                binder.bindComponent(OculusPublicIntentService.class).toProvider(new OculusPublicIntentServiceAutoProvider());
                binder.bindComponent(OculusPublicService.class).toProvider(new OculusPublicServiceAutoProvider());
                binder.bindComponent(OculusSecureBroadcastReceiverBase.class).toProvider(new OculusSecureBroadcastReceiverBaseAutoProvider());
            }
        }
    }
}
