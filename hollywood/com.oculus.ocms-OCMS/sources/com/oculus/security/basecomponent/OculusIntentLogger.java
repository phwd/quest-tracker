package com.oculus.security.basecomponent;

import android.content.Context;
import android.content.Intent;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.mobileconfig.factory.MobileConfig;
import com.facebook.mobileconfig.factory.module.MobileConfigFactoryModule;
import com.facebook.secure.intentparser.IntentParser;
import com.facebook.secure.logger.IntentLoggerBase;
import com.facebook.secure.trustedapp.AppIdentity;
import com.facebook.secure.trustedapp.CallerInfoHelper;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.logging.utils.Event;
import com.oculus.logging.utils.EventManager;
import com.oculus.logging.utils.UtilsModule;
import com.oculus.security.basecomponent.BasecomponentModule;
import com.oculus.security.basecomponent.MC;
import javax.annotation.Nullable;
import javax.inject.Provider;
import org.json.JSONException;

@Dependencies({"_UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_logging_utils_EventManager_ULSEP_BINDING_ID", "_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID"})
public class OculusIntentLogger extends IntentLoggerBase {
    private static final String EVENT_NAME = "oculus_security_horizon_intent_logging";
    private static final String KEY_CALLER_IDENTITY = "caller_identity";
    private static final String KEY_ENDPOINT_NAME = "endpoint_name";
    private static final String KEY_INTENT = "intent";
    private static final String KEY_STATUS = "status";
    private static final String KEY_SUB_ENDPOINT_NAME = "sub_endpoint_name";
    private InjectionContext _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_security_basecomponent_OculusIntentLogger_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(BasecomponentModule.UL_id._UL__ULSEP_com_oculus_security_basecomponent_OculusIntentLogger_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final OculusIntentLogger _UL__ULSEP_com_oculus_security_basecomponent_OculusIntentLogger_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (OculusIntentLogger) UL.factorymap.get(BasecomponentModule.UL_id._UL__ULSEP_com_oculus_security_basecomponent_OculusIntentLogger_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final OculusIntentLogger _UL__ULSEP_com_oculus_security_basecomponent_OculusIntentLogger_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new OculusIntentLogger(injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_security_basecomponent_OculusIntentLogger_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(BasecomponentModule.UL_id._UL__ULSEP_com_oculus_security_basecomponent_OculusIntentLogger_ULSEP_BINDING_ID, injectorLike);
    }

    @Inject
    public OculusIntentLogger(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(3, injectorLike);
    }

    @Override // com.facebook.secure.logger.IntentLogger
    public void logIntent(String str, @Nullable String str2, @Nullable String str3, @Nullable Intent intent) {
        if (((MobileConfig) FbInjector.lazyInstance(0, MobileConfigFactoryModule.UL_id._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getBoolean(MC.oculus_security_intent_logging.horizon_enabled)) {
            Event createEvent = ((EventManager) FbInjector.lazyInstance(1, UtilsModule.UL_id._UL__ULSEP_com_oculus_logging_utils_EventManager_ULSEP_BINDING_ID, this._UL_mInjectionContext)).createEvent(EVENT_NAME);
            createEvent.addExtra(KEY_ENDPOINT_NAME, str);
            if (str2 != null) {
                createEvent.addExtra(KEY_SUB_ENDPOINT_NAME, str2);
            }
            if (str3 != null) {
                createEvent.addExtra("status", str3);
            }
            if (intent == null) {
                createEvent.logAndRelease();
                return;
            }
            createEvent.addExtra(KEY_CALLER_IDENTITY, AppIdentity.print(CallerInfoHelper.getCallerInfo((Context) FbInjector.lazyInstance(2, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext), intent)));
            try {
                IntentParser.ParsedIntent parseIntent = IntentParser.parseIntent(intent);
                if (parseIntent == null || parseIntent.mIntentContent == null) {
                    createEvent.addExtra(KEY_INTENT, "").logAndRelease();
                } else {
                    createEvent.addExtra(KEY_INTENT, parseIntent.mIntentContent.toString()).logAndRelease();
                }
            } catch (JSONException e) {
                createEvent.addExtra(KEY_INTENT, e.toString()).logAndRelease();
            }
        }
    }
}
