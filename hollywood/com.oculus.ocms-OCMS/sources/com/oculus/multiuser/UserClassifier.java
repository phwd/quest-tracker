package com.oculus.multiuser;

import android.annotation.TargetApi;
import android.content.Context;
import android.content.pm.UserInfo;
import android.os.UserHandle;
import android.os.UserManager;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.android.os.internal.UserHandleInternal;
import com.oculus.android.os.internal.UserManagerInternal;
import com.oculus.android.os.internal.inject.InternalModule;
import com.oculus.multiuser.MultiuserModule;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_android_os_internal_UserHandleInternal_ULSEP_BINDING_ID"})
@TargetApi(24)
public class UserClassifier {
    private InjectionContext _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_multiuser_UserClassifier_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(MultiuserModule.UL_id._UL__ULSEP_com_oculus_multiuser_UserClassifier_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final UserClassifier _UL__ULSEP_com_oculus_multiuser_UserClassifier_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (UserClassifier) UL.factorymap.get(MultiuserModule.UL_id._UL__ULSEP_com_oculus_multiuser_UserClassifier_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final UserClassifier _UL__ULSEP_com_oculus_multiuser_UserClassifier_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new UserClassifier(injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_multiuser_UserClassifier_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(MultiuserModule.UL_id._UL__ULSEP_com_oculus_multiuser_UserClassifier_ULSEP_BINDING_ID, injectorLike);
    }

    @Inject
    public UserClassifier(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(2, injectorLike);
    }

    public boolean isSystem() {
        return um().isSystemUser();
    }

    public boolean isPrimary() {
        return isSystem();
    }

    public boolean isPrimary(UserHandle userHandle) {
        UserInfo userInfo = UserManagerInternal.getUserInfo(um(), ((UserHandleInternal) FbInjector.lazyInstance(1, InternalModule.UL_id._UL__ULSEP_com_oculus_android_os_internal_UserHandleInternal_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getIdentifier(userHandle));
        if (userInfo == null || !userInfo.isPrimary()) {
            return false;
        }
        return true;
    }

    public void assertIsSystem() {
        if (!isSystem()) {
            throw new IllegalStateException("Not running as system user");
        }
    }

    private UserManager um() {
        return (UserManager) ((Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext)).getSystemService(UserManager.class);
    }
}
