package com.oculus.downloader.init;

import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.AddToMultiBind;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorModule;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.auth.credentials.CredentialsModule;
import com.oculus.auth.handler.AuthHandlerModule;
import com.oculus.common.init.AppInitModule;
import com.oculus.common.init.INeedInit;
import com.oculus.downloader.DownloaderModule;
import com.oculus.downloader.progress.DownloaderProgressModule;

@InjectorModule
public abstract class DownloaderInitModule extends AbstractLibraryModule {

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_downloader_init_DownloaderInit_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_oculus_downloader_init_DownloaderInit_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(DownloaderInit.class)));
    }

    /* access modifiers changed from: package-private */
    @AddToMultiBind
    public abstract INeedInit provideDownloaderInit(DownloaderInit downloaderInit);

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForDownloaderInitModule {
        AutoGeneratedBindingsForDownloaderInitModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.require(CredentialsModule.class);
                binder.require(AuthHandlerModule.class);
                binder.require(AppInitModule.class);
                binder.require(DownloaderModule.class);
                binder.require(DownloaderProgressModule.class);
                binder.bindMulti(INeedInit.class).add(DownloaderInit.class);
                binder.bind(DownloaderInit.class).toProvider(new DownloaderInitAutoProvider());
            }
        }
    }
}
