package com.facebook.common.time;

import com.facebook.infer.annotation.Nullsafe;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.ApplicationScopeClassInit;
import com.facebook.inject.ApplicationScoped;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.InjectorModule;
import com.facebook.inject.Lazy;
import com.facebook.inject.ProviderMethod;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.inject.UltralightSingletonProvider;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import java.lang.annotation.Annotation;
import java.util.GregorianCalendar;
import javax.inject.Provider;

@InjectorModule
@Nullsafe(Nullsafe.Mode.LOCAL)
public class TimeModule extends AbstractLibraryModule {
    private static volatile CurrentThreadTimeClock _UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_INSTANCE;

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_facebook_common_time_AwakeTimeSinceBootClock_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_AwakeTimeSinceBootClock_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(AwakeTimeSinceBootClock.class)));
        public static final int _UL__ULSEP_com_facebook_common_time_Clock_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_Clock_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(Clock.class)));
        public static final int _UL__ULSEP_com_facebook_common_time_Clock_ULSEP_com_facebook_common_time_CurrentThreadTime_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_Clock_ULSEP_com_facebook_common_time_CurrentThreadTime_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(Clock.class, (Class<? extends Annotation>) CurrentThreadTime.class)));
        public static final int _UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(CurrentThreadTimeClock.class)));
        public static final int _UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(MonotonicClock.class)));
        public static final int _UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedAwakeTimeSinceBoot_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedAwakeTimeSinceBoot_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(MonotonicClock.class, (Class<? extends Annotation>) ElapsedAwakeTimeSinceBoot.class)));
        public static final int _UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedRealtimeSinceBoot_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedRealtimeSinceBoot_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(MonotonicClock.class, (Class<? extends Annotation>) ElapsedRealtimeSinceBoot.class)));
        public static final int _UL__ULSEP_com_facebook_common_time_MonotonicNanoClock_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_MonotonicNanoClock_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(MonotonicNanoClock.class)));
        public static final int _UL__ULSEP_com_facebook_common_time_RealtimeSinceBootClock_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_RealtimeSinceBootClock_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(RealtimeSinceBootClock.class)));
        public static final int _UL__ULSEP_com_facebook_common_time_SystemClock_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_com_facebook_common_time_SystemClock_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(SystemClock.class)));
        public static final int _UL__ULSEP_java_util_GregorianCalendar_ULSEP_BINDING_ID = (UL.USE_STATIC_DI ? UL.id._UL__ULSEP_java_util_GregorianCalendar_ULSEP_BINDING_ID : UL.id.dynamicId(Key.get(GregorianCalendar.class)));
    }

    @CurrentThreadTime
    @ProviderMethod
    static Clock provideCurrentThreadTimeClock(CurrentThreadTimeClock currentThreadTimeClock) {
        return currentThreadTimeClock;
    }

    @ProviderMethod(asDefault = true)
    static Clock provideDefaultClock(SystemClock systemClock) {
        return systemClock;
    }

    @ProviderMethod(asDefault = true)
    static MonotonicClock provideDefaultClock(AwakeTimeSinceBootClock awakeTimeSinceBootClock) {
        return awakeTimeSinceBootClock;
    }

    @ProviderMethod
    @ElapsedAwakeTimeSinceBoot
    static MonotonicClock provideElapsedAwakeTimeClock(AwakeTimeSinceBootClock awakeTimeSinceBootClock) {
        return awakeTimeSinceBootClock;
    }

    @ElapsedRealtimeSinceBoot
    @ProviderMethod
    static MonotonicClock provideElapsedRealtimeClock(RealtimeSinceBootClock realtimeSinceBootClock) {
        return realtimeSinceBootClock;
    }

    @AutoGeneratedBinder
    static class AutoGeneratedBindingsForTimeModule {
        AutoGeneratedBindingsForTimeModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.bind(AwakeTimeSinceBootClock.class).toProvider(new AwakeTimeSinceBootClockMethodAutoProvider());
                binder.bind(Clock.class).annotatedWith(CurrentThreadTime.class).toProvider(new Clock_com_facebook_common_time_CurrentThreadTimeMethodAutoProvider());
                binder.bindDefault(Clock.class).toProvider(new ClockMethodAutoProvider());
                binder.bind(CurrentThreadTimeClock.class).toProvider(new CurrentThreadTimeClockMethodAutoProvider()).in(ApplicationScoped.class);
                binder.bind(MonotonicClock.class).annotatedWith(ElapsedAwakeTimeSinceBoot.class).toProvider(new MonotonicClock_com_facebook_common_time_ElapsedAwakeTimeSinceBootMethodAutoProvider());
                binder.bind(MonotonicClock.class).annotatedWith(ElapsedRealtimeSinceBoot.class).toProvider(new MonotonicClock_com_facebook_common_time_ElapsedRealtimeSinceBootMethodAutoProvider());
                binder.bindDefault(MonotonicClock.class).toProvider(new MonotonicClockMethodAutoProvider());
                binder.bind(MonotonicNanoClock.class).toProvider(new MonotonicNanoClockMethodAutoProvider());
                binder.bind(RealtimeSinceBootClock.class).toProvider(new RealtimeSinceBootClockMethodAutoProvider());
                binder.bind(SystemClock.class).toProvider(new SystemClockMethodAutoProvider());
                binder.bind(GregorianCalendar.class).toProvider(new GregorianCalendarMethodAutoProvider());
            }
        }
    }

    @AutoGeneratedAccessMethod
    public static final AwakeTimeSinceBootClock _UL__ULSEP_com_facebook_common_time_AwakeTimeSinceBootClock_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (AwakeTimeSinceBootClock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_AwakeTimeSinceBootClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final AwakeTimeSinceBootClock _UL__ULSEP_com_facebook_common_time_AwakeTimeSinceBootClock_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideAwakeTimeSinceBootClock();
    }

    @AutoGeneratedAccessMethod
    public static final Clock _UL__ULSEP_com_facebook_common_time_Clock_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (Clock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_Clock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final Clock _UL__ULSEP_com_facebook_common_time_Clock_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideDefaultClock(_UL__ULSEP_com_facebook_common_time_SystemClock_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final Clock _UL__ULSEP_com_facebook_common_time_Clock_ULSEP_com_facebook_common_time_CurrentThreadTime_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (Clock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_Clock_ULSEP_com_facebook_common_time_CurrentThreadTime_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final Clock _UL__ULSEP_com_facebook_common_time_Clock_ULSEP_com_facebook_common_time_CurrentThreadTime_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideCurrentThreadTimeClock(_UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final CurrentThreadTimeClock _UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (CurrentThreadTimeClock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final CurrentThreadTimeClock _UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        if (_UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_INSTANCE == null) {
            synchronized (CurrentThreadTimeClock.class) {
                ApplicationScopeClassInit start = ApplicationScopeClassInit.start(_UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_INSTANCE, injectorLike);
                if (start != null) {
                    try {
                        injectorLike.getApplicationInjector();
                        _UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_INSTANCE = provideCurrentThreadTimeClock();
                    } finally {
                        start.finish();
                    }
                }
            }
        }
        return _UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_INSTANCE;
    }

    @AutoGeneratedAccessMethod
    public static final MonotonicClock _UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (MonotonicClock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final MonotonicClock _UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideDefaultClock(_UL__ULSEP_com_facebook_common_time_AwakeTimeSinceBootClock_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final MonotonicClock _UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedAwakeTimeSinceBoot_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (MonotonicClock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedAwakeTimeSinceBoot_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final MonotonicClock _UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedAwakeTimeSinceBoot_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideElapsedAwakeTimeClock(_UL__ULSEP_com_facebook_common_time_AwakeTimeSinceBootClock_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final MonotonicClock _UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedRealtimeSinceBoot_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (MonotonicClock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedRealtimeSinceBoot_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final MonotonicClock _UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedRealtimeSinceBoot_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideElapsedRealtimeClock(_UL__ULSEP_com_facebook_common_time_RealtimeSinceBootClock_ULSEP_ACCESS_METHOD(injectorLike));
    }

    @AutoGeneratedAccessMethod
    public static final MonotonicNanoClock _UL__ULSEP_com_facebook_common_time_MonotonicNanoClock_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (MonotonicNanoClock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicNanoClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final MonotonicNanoClock _UL__ULSEP_com_facebook_common_time_MonotonicNanoClock_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideNanoClock();
    }

    @AutoGeneratedAccessMethod
    public static final RealtimeSinceBootClock _UL__ULSEP_com_facebook_common_time_RealtimeSinceBootClock_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (RealtimeSinceBootClock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_RealtimeSinceBootClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final RealtimeSinceBootClock _UL__ULSEP_com_facebook_common_time_RealtimeSinceBootClock_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideRealtimeSinceBootClock();
    }

    @AutoGeneratedAccessMethod
    public static final SystemClock _UL__ULSEP_com_facebook_common_time_SystemClock_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (SystemClock) UL.factorymap.get(UL_id._UL__ULSEP_com_facebook_common_time_SystemClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final SystemClock _UL__ULSEP_com_facebook_common_time_SystemClock_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideSystemClock();
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_AwakeTimeSinceBootClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_facebook_common_time_AwakeTimeSinceBootClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_Clock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_facebook_common_time_Clock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_Clock_ULGT__ULSEP_com_facebook_common_time_CurrentThreadTime_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_facebook_common_time_Clock_ULSEP_com_facebook_common_time_CurrentThreadTime_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_CurrentThreadTimeClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_MonotonicClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_MonotonicClock_ULGT__ULSEP_com_facebook_common_time_ElapsedAwakeTimeSinceBoot_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedAwakeTimeSinceBoot_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_MonotonicClock_ULGT__ULSEP_com_facebook_common_time_ElapsedRealtimeSinceBoot_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedRealtimeSinceBoot_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_MonotonicNanoClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicNanoClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_RealtimeSinceBootClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_facebook_common_time_RealtimeSinceBootClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_common_time_SystemClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_com_facebook_common_time_SystemClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_java_util_GregorianCalendar_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightLazy.get(UL_id._UL__ULSEP_java_util_GregorianCalendar_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final GregorianCalendar _UL__ULSEP_java_util_GregorianCalendar_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (GregorianCalendar) UL.factorymap.get(UL_id._UL__ULSEP_java_util_GregorianCalendar_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final GregorianCalendar _UL__ULSEP_java_util_GregorianCalendar_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return provideGregorianCalendar();
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_AwakeTimeSinceBootClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_AwakeTimeSinceBootClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_Clock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_Clock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_Clock_ULGT__ULSEP_com_facebook_common_time_CurrentThreadTime_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_Clock_ULSEP_com_facebook_common_time_CurrentThreadTime_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_CurrentThreadTimeClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_CurrentThreadTimeClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_MonotonicClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_MonotonicClock_ULGT__ULSEP_com_facebook_common_time_ElapsedAwakeTimeSinceBoot_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedAwakeTimeSinceBoot_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_MonotonicClock_ULGT__ULSEP_com_facebook_common_time_ElapsedRealtimeSinceBoot_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicClock_ULSEP_com_facebook_common_time_ElapsedRealtimeSinceBoot_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_MonotonicNanoClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_MonotonicNanoClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_RealtimeSinceBootClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_RealtimeSinceBootClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_common_time_SystemClock_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_com_facebook_common_time_SystemClock_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_java_util_GregorianCalendar_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightProvider.get(UL_id._UL__ULSEP_java_util_GregorianCalendar_ULSEP_BINDING_ID, injectorLike);
    }

    @ProviderMethod
    public static SystemClock provideSystemClock() {
        return SystemClock.get();
    }

    @ProviderMethod
    public static AwakeTimeSinceBootClock provideAwakeTimeSinceBootClock() {
        return AwakeTimeSinceBootClock.get();
    }

    @ProviderMethod
    public static RealtimeSinceBootClock provideRealtimeSinceBootClock() {
        return RealtimeSinceBootClock.get();
    }

    @ProviderMethod
    public static MonotonicNanoClock provideNanoClock() {
        return AwakeTimeSinceBootClock.get();
    }

    @ApplicationScoped
    @ProviderMethod
    public static CurrentThreadTimeClock provideCurrentThreadTimeClock() {
        return new CurrentThreadTimeClock();
    }

    @ProviderMethod
    public static GregorianCalendar provideGregorianCalendar() {
        return new GregorianCalendar();
    }
}
