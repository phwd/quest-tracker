package com.facebook.tigon.oktigon;

import com.facebook.http.annotations.HttpAnnotationsModule;
import com.facebook.http.annotations.UserAgentString;
import com.facebook.inject.ApplicationScopeClassInit;
import com.facebook.inject.ApplicationScoped;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightSingletonProvider;
import com.facebook.soloader.nativeloader.NativeLoader;
import com.facebook.tigon.oktigon.OkTigonModule;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.UL;
import javax.inject.Inject;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@Dependencies({"_UL__ULSEP_okhttp3_OkHttpClient_ULSEP_com_facebook_tigon_oktigon_OkTigonClient_ULSEP_BINDING_ID", "_UL__ULSEP_java_lang_String_ULSEP_com_facebook_http_annotations_UserAgentString_ULSEP_BINDING_ID"})
@ApplicationScoped
public class OkTigonService extends AbstractOkTigonService {
    private static volatile OkTigonService _UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_INSTANCE;

    @AutoGeneratedAccessMethod
    public static final Lazy _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_facebook_tigon_oktigon_OkTigonService_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(OkTigonModule.UL_id._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_facebook_tigon_oktigon_OkTigonService_ULGT__ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return UltralightSingletonProvider.get(OkTigonModule.UL_id._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedAccessMethod
    public static final OkTigonService _UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (OkTigonService) UL.factorymap.get(OkTigonModule.UL_id._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final OkTigonService _UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        if (_UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_INSTANCE == null) {
            synchronized (OkTigonService.class) {
                ApplicationScopeClassInit start = ApplicationScopeClassInit.start(_UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_INSTANCE, injectorLike);
                if (start != null) {
                    try {
                        InjectorLike applicationInjector = injectorLike.getApplicationInjector();
                        _UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_INSTANCE = new OkTigonService(OkTigonModule._UL__ULSEP_okhttp3_OkHttpClient_ULSEP_com_facebook_tigon_oktigon_OkTigonClient_ULSEP_ACCESS_METHOD(applicationInjector), HttpAnnotationsModule._UL__ULSEP_java_lang_String_ULSEP_com_facebook_http_annotations_UserAgentString_ULSEP_ACCESS_METHOD(applicationInjector));
                    } finally {
                        start.finish();
                    }
                }
            }
        }
        return _UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_INSTANCE;
    }

    static {
        NativeLoader.loadLibrary("oktigon");
    }

    @Inject
    public OkTigonService(@OkTigonClient OkHttpClient okHttpClient, @UserAgentString String str) {
        super(okHttpClient, null, str);
    }
}
