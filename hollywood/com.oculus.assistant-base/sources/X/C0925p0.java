package X;

import com.facebook.acra.CrashTimeDataCollector;
import com.facebook.acra.anr.processmonitor.ProcessAnrErrorMonitor;
import com.facebook.acra.util.minidump.MinidumpReader;
import com.facebook.proxygen.HTTPTransportCallback;
import com.facebook.tigon.iface.TigonRequest;
import com.oculus.aidl.OVRServiceInterface;

/* renamed from: X.p0  reason: case insensitive filesystem */
public final class C0925p0 {
    public final String A00(int i) {
        if (i == 1) {
            return "START";
        }
        if (i == 2) {
            return "SUCCESS";
        }
        if (i == 3) {
            return "FAIL";
        }
        if (i == 4) {
            return "CANCEL";
        }
        if (i == 5) {
            return "DRAW_COMPLETE";
        }
        if (i == 6) {
            return "ON_RESUME";
        }
        if (i == 7) {
            return "ACTIVITY_CREATED";
        }
        switch (i) {
            case OVRServiceInterface.Stub.TRANSACTION_getEntitlementCheckBundle /*{ENCODED_INT: 7}*/:
                return "ACTIVITY_CREATED";
            case 8:
                return "CONSISTENCY_MODEL_UPDATER";
            case OVRServiceInterface.Stub.TRANSACTION_getLatestAvailableAppInformation /*{ENCODED_INT: 9}*/:
                return "SEND_MESSAGE";
            case 10:
                return "SUCCESS_COLD";
            case OVRServiceInterface.Stub.TRANSACTION_getInstalledVRApplications /*{ENCODED_INT: 11}*/:
                return "SUCCESS_WARM";
            case OVRServiceInterface.Stub.TRANSACTION_setSystemVoipPassthrough /*{ENCODED_INT: 12}*/:
                return "UI_IDLE";
            case OVRServiceInterface.Stub.TRANSACTION_setSystemVoipMicrophoneMuted /*{ENCODED_INT: 13}*/:
                return "PHASE_ONE";
            case OVRServiceInterface.Stub.TRANSACTION_setSystemVoipSuppressed /*{ENCODED_INT: 14}*/:
                return "PHASE_TWO";
            case OVRServiceInterface.Stub.TRANSACTION_getSystemVoipData /*{ENCODED_INT: 15}*/:
                return "DEQUEUE";
            case 16:
                return "NETWORK_COMPLETE";
            case OVRServiceInterface.Stub.TRANSACTION_getSystemVoipStatus /*{ENCODED_INT: 17}*/:
                return "MEMORY_CACHE_VISIT";
            case OVRServiceInterface.Stub.TRANSACTION_getSystemVoipMicrophoneMuted /*{ENCODED_INT: 18}*/:
                return "DISK_CACHE_VISIT";
            case OVRServiceInterface.Stub.TRANSACTION_startPartyChat /*{ENCODED_INT: 19}*/:
                return "CONSISTENCY_UPDATE";
            case 20:
                return "RETURN_TO_CALLER";
            case OVRServiceInterface.Stub.TRANSACTION_partyChatSetVolume /*{ENCODED_INT: 21}*/:
                return "PHOTO_UPLOAD_COMPLETE";
            case OVRServiceInterface.Stub.TRANSACTION_partyChatGetVolume /*{ENCODED_INT: 22}*/:
                return "USER_NAVIGATION_CANCELLATION";
            case OVRServiceInterface.Stub.TRANSACTION_getSharedMicrophoneData /*{ENCODED_INT: 23}*/:
                return "DB_FETCH";
            case 24:
                return "SERVER_FETCH";
            case OVRServiceInterface.Stub.TRANSACTION_sharedMicrophoneStop /*{ENCODED_INT: 25}*/:
                return "SUCCESS_CACHE";
            case OVRServiceInterface.Stub.TRANSACTION_sharedMicrophoneDisableNoiseSuppressor /*{ENCODED_INT: 26}*/:
                return "SUCCESS_DB";
            case OVRServiceInterface.Stub.TRANSACTION_sharedMicrophoneEnableNoiseSuppressor /*{ENCODED_INT: 27}*/:
                return "SUCCESS_NETWORK";
            case OVRServiceInterface.Stub.TRANSACTION_updatePlatformContext /*{ENCODED_INT: 28}*/:
                return "SUCCESS_LOCAL_UNSPECIFIED";
            case OVRServiceInterface.Stub.TRANSACTION_assetFileDownloadById /*{ENCODED_INT: 29}*/:
                return "CACHE_UPDATED";
            case OVRServiceInterface.Stub.TRANSACTION_assetFileDownloadByName /*{ENCODED_INT: 30}*/:
                return "DB_UPDATED";
            case OVRServiceInterface.Stub.TRANSACTION_assetFileDownloadCancelById /*{ENCODED_INT: 31}*/:
                return "DATA_RECEIVED";
            case 32:
                return "DRAW_VIEW";
            case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteById /*{ENCODED_INT: 33}*/:
                return "DATA_EMPTY";
            case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteByName /*{ENCODED_INT: 34}*/:
                return "CACHE_FETCH";
            case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusById /*{ENCODED_INT: 35}*/:
                return "PREPARE_BEGIN";
            case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusByName /*{ENCODED_INT: 36}*/:
                return "PREPARE_END";
            case OVRServiceInterface.Stub.TRANSACTION_assetFileList /*{ENCODED_INT: 37}*/:
                return "ASYNC_BEGIN";
            case OVRServiceInterface.Stub.TRANSACTION_languagePackGetCurrent /*{ENCODED_INT: 38}*/:
                return "ASYNC_END";
            case OVRServiceInterface.Stub.TRANSACTION_languagePackSetCurrent /*{ENCODED_INT: 39}*/:
                return "REMOVE_BEGIN";
            case OVRServiceInterface.Stub.TRANSACTION_getCloudStorage2UserDirectoryPath /*{ENCODED_INT: 40}*/:
                return "REMOVE_END";
            case OVRServiceInterface.Stub.TRANSACTION_launchOtherApp /*{ENCODED_INT: 41}*/:
                return "BROADCAST_DONE";
            case OVRServiceInterface.Stub.TRANSACTION_setRichPresence /*{ENCODED_INT: 42}*/:
                return "ON_RESUME_END";
            case OVRServiceInterface.Stub.TRANSACTION_registerProcessToken /*{ENCODED_INT: 43}*/:
                return "ON_ATTACH_END";
            case OVRServiceInterface.Stub.TRANSACTION_getViewerPurchasesDurableCacheJSON /*{ENCODED_INT: 44}*/:
                return "ON_FRAGMENT_CREATE_END";
            case OVRServiceInterface.Stub.TRANSACTION_getCurrentMapUuid /*{ENCODED_INT: 45}*/:
                return "ON_CREATE_VIEW_END";
            case OVRServiceInterface.Stub.TRANSACTION_shareMap /*{ENCODED_INT: 46}*/:
                return "ON_ACTIVITY_CREATED_END";
            case OVRServiceInterface.Stub.TRANSACTION_requestMap /*{ENCODED_INT: 47}*/:
                return "ON_START_END";
            case OVRServiceInterface.Stub.TRANSACTION_getDeviceScopedAccessToken /*{ENCODED_INT: 48}*/:
                return "QUEUED";
            case 49:
                return "IN_PROGRESS";
            case 50:
                return "INIT";
            case 51:
                return CrashTimeDataCollector.ANDROID_RUNTIME_UNKNOWN;
            case 52:
                return "RETRY_AFTER_FAILURE";
            case 53:
                return "RETRY_AFTER_RECONNECT";
            case 54:
                return "QUEUEING_BEGIN";
            case 55:
                return "QUEUEING_SUCCESS";
            case 56:
                return "QUEUEING_FAIL";
            case 57:
                return "MESSAGE_UPDATE_START";
            case 58:
                return "MESSAGE_UPDATE_END";
            case 59:
                return "PHOTO_CAPTURED";
            case 60:
                return "MEDIA_PREVIEW_VISIBLE";
            case 61:
                return "COUNTER";
            case 62:
                return "INTERACTION_LOAD_TIMELINE_HEADER";
            case 63:
                return "INTERACTION_LOAD_EVENT_PERMALINK";
            case HTTPTransportCallback.BODY_BYTES_GENERATED /*{ENCODED_INT: 64}*/:
                return "INTERACTION_LOAD_GROUPS_FEED";
            case 65:
                return "INTERACTION_LOAD_PAGE_HEADER";
            case 66:
                return "INTERACTION_LOAD_PAGE_HEADER_ADMIN";
            case 67:
                return "INTERACTION_LOAD_PERMALINK";
            case 68:
                return "INTERACTION_OPEN_COMPOSER";
            case 69:
                return "INTERACTION_OPEN_MEDIA_PICKER";
            case 70:
                return "INTERACTION_OPEN_PHOTO_GALLERY";
            case 71:
                return "INTERACTION_OPEN_CHECK_IN";
            case 72:
                return "INTERACTION_LOAD_WEB_VIEW";
            case 73:
                return "INTENT_MAPPED";
            case 74:
                return "ACTIVITY_LAUNCHED";
            case 75:
                return "ACTIVITY_PAUSED";
            case 76:
                return "ACTIVITY_STARTED";
            case 77:
                return "ACTIVITY_RESUMED";
            case 78:
                return "FRAGMENT_CREATED";
            case 79:
                return "FRAGMENT_RESUMED";
            case 80:
                return "ACTIVITY_ON_CREATE";
            case 81:
                return "INTENT_MAPPING_BEGIN";
            case 82:
                return "FRAGMENT_ON_CREATE";
            case 83:
                return "FRAGMENT_NEW_INSTANCE";
            case 84:
                return "MARKER_SWAPPED";
            case 85:
                return "FRAGMENT_INSTANCE_CREATED";
            case 86:
                return "PREV_ACTIVITY_PAUSED";
            case 87:
                return "ERROR";
            case 88:
                return "METHOD_INVOKE";
            case 89:
                return "FINALLY";
            case 90:
                return "PHOTO_DOWNLOAD_COMPLETE";
            case 91:
                return "MINIPREVIEW_COMPLETE";
            case 92:
                return "SEARCH_TYPEAHEAD";
            case 93:
                return "ANIMATION_END";
            case 94:
                return "UDP_REQUEST_SEND";
            case 95:
                return "MAIN_COMPLETE";
            case 96:
                return "INTERRUPTED";
            case 97:
                return "NETWORK_FAILED";
            case 98:
                return "NETWORK_RESPONSE";
            case 99:
                return "EDGE_PROCESSING_BEGIN";
            case 100:
                return "NEWSFEED_PROCESS_RESPONSE";
            case 101:
                return "ON_VIEW_CREATED_END";
            case 102:
                return "DATA_LOAD_START";
            case 103:
                return "LEGACY_MARKER";
            case 104:
                return "ACTION_BAR_COMPLETE";
            case 105:
                return "ABORTED";
            case 106:
                return "QUERY_READY";
            case 107:
                return "RTMP_PACKET_RECEIVED";
            case MinidumpReader.MODULE_FULL_SIZE /*{ENCODED_INT: 108}*/:
                return "REQUESTED_PLAYING";
            case 109:
                return "RTMP_CONNECTION_REQUESTED";
            case 110:
                return "RTMP_CONNECTION_RELEASE";
            case 111:
                return "NEW_START_FOUND";
            case 112:
                return "MISSED_EVENT";
            case 113:
                return "TIMEOUT";
            case 114:
                return "CONTROLLER_INITIATED";
            case 115:
                return "RTMP_STREAM_PREPARED";
            case 116:
                return "VIDEO_PLAYING";
            case 117:
                return "RTMP_CONNECTION_CONNECTED";
            case 118:
                return "RTMP_CONNECTION_FAILED";
            case 119:
                return "RTMP_CONNECTION_INTERCEPTED";
            case 120:
                return "VIDEO_SET_RENDERER_CONTEXT";
            case 121:
                return "HEADER_DATA_LOADED";
            case 122:
                return "CARD_DATA_LOADED";
            case 123:
                return "VIEW_WILL_APPEAR_BEGIN";
            case 124:
                return "VIEW_DID_LOAD_BEGIN";
            case 125:
                return "COMPONENTS_DATA_SOURCE_WILL_BEGIN_UPDATES";
            case 126:
                return "COMPONENTS_DATA_SOURCE_DID_END_UPDATES";
            case 127:
                return "LOAD_VIEW_BEGIN";
            case HTTPTransportCallback.BODY_BYTES_RECEIVED /*{ENCODED_INT: 128}*/:
                return "RTMP_FIRST_KEY_FRAME_RECEIVED";
            case 129:
                return "MESSENGER_QUEUE_CREATION";
            case 130:
                return "APP_DID_FINISH_LAUNCHING";
            case 131:
                return "APP_DID_BECOME_ACTIVE";
            case 132:
                return "APP_WILL_ENTER_FOREGROUND";
            case 133:
                return "APP_DID_ENTER_BACKGROUND";
            case 134:
                return "APP_MAIN";
            case 135:
                return "MQTT_CONNECTING";
            case 136:
                return "MQTT_CONNECTED";
            case 137:
                return "MQTT_DISCONNECTED";
            case 138:
                return "MESSENGER_DELTA_REQUEST";
            case 139:
                return "APP_FIRST_VIEW_CONTROLLER";
            case 140:
                return "MESSENGER_THREAD_LIST_LOADED";
            case 141:
                return "MESSENGER_THREAD_LIST_DISPLAYED";
            case 142:
                return "PREV_ACTIVITY_PAUSE";
            case 143:
                return "ACTIVITY_RESUME";
            case 144:
                return "ACTIVITY_START";
            case 145:
                return "BEGIN_START_ACTIVITY";
            case 146:
                return "END_START_ACTIVITY";
            case 147:
                return "FILE_SYSTEM_FAIL";
            case 148:
                return "FORMAT_ERROR";
            case 149:
                return "PRIVACY_VIOLATION";
            case 150:
                return "NETWORK_RESPONSE_INITIAL_SCAN";
            case 151:
                return "POPULATE_CONSISTENCY_MEMORY_CACHE";
            case 152:
                return "APPLY_OPTIMISTICS";
            case 153:
                return "APPLY_FINISHED_LIST";
            case 154:
                return "APPLY_FINISHED_LIST_AGAIN";
            case 155:
                return "FUTURE_LISTENERS_COMPLETE";
            case 156:
                return "SERVICE_ON_START_COMMAND";
            case 157:
                return "WAIT_FOR_BLOCKERS";
            case 158:
                return "NOTIFY_SUBSCRIBERS";
            case 159:
                return "FAIL_FILE_TOO_LARGE";
            case 160:
                return "OFFLINE";
            case 161:
                return "ASNYC_FAILED";
            case 162:
                return "ASYNC_FAIL";
            case 163:
                return "ON_ATTACH_FRAGMENT";
            case 164:
                return "VIEW_DID_APPEAR_BEGIN";
            case 165:
                return "DISPLAYED";
            case 166:
                return "DISPLAYED_ON_SCREEN";
            case 167:
                return "ASYNC_ACTION_SUCCESS";
            case 168:
                return "ASYNC_ACTION_FAIL";
            case 169:
                return "CONNECTIVITY_CHANGED";
            case 170:
                return "VIDEO_DISPLAYED";
            case 171:
                return "VIDEO_REQUESTED_PLAYING";
            case 172:
                return "LOADED_AUDIO_SESSION";
            case 173:
                return "LOADED_CAMERA_SESSION";
            case 174:
                return "SUCCESS_OPTIMISTIC";
            case 175:
                return "OUT_OF_ORDER";
            case 176:
                return "NOT_READY";
            case 177:
                return "JSON_PARSE";
            case 178:
                return "FILE_NOT_FOUND";
            case 179:
                return "METABOX_COMPLETE";
            case 180:
                return "CALL_TO_ACTION_COMPLETE";
            case 181:
                return "HEADER_DRAW_COMPLETE";
            case 182:
                return "COVER_PHOTO_COMPLETE";
            case 183:
                return "COMPONENT_WILL_CREATE";
            case 184:
                return "COMPONENT_DID_CREATE";
            case 185:
                return "COMPONENT_WILL_LAYOUT";
            case 186:
                return "COMPONENT_DID_LAYOUT";
            case 187:
                return "COMPONENT_WILL_MOUNT";
            case 188:
                return "COMPONENT_DID_MOUNT";
            case 189:
                return "PRECALCULATE_EDGES";
            case 190:
                return "UI_THREAD_DEQUEUE";
            case 191:
                return "CALLBACKS_COMPLETE";
            case 192:
                return "CALLBACKS_DISPATCHED";
            case 193:
                return "NETWORK_PARSE_COMPLETE";
            case 194:
                return "START_LOADING_JS_BUNDLE";
            case 195:
                return "FINISH_LOADING_JS_BUNDLE";
            case 196:
                return "START_EXECUTING_JS_BUNDLE";
            case 197:
                return "FINISH_EXECUTING_JS_BUNDLE";
            case 198:
                return "START_CALLING_JS_FUNCTION";
            case 199:
                return "FINISH_CALLING_JS_FUNCTION";
            case 200:
                return "CREATED_MODEL_FILE";
            case 201:
                return "DB_SUPPLIER_GET";
            case 202:
                return "BEGIN_TRANSACTION";
            case 203:
                return "FILE_FLUSHED";
            case 204:
                return "OPTIMISTIC_UPDATES_APPLIED";
            case 205:
                return "FRAGMENT_VISIBLE";
            case 206:
                return "STALE";
            case 207:
                return "SUCCESS_GET_MODEL";
            case 208:
                return "FAIL_GET_MODEL";
            case 209:
                return "ALREADY_SEEN";
            case 210:
                return "UNKNOWN_SEEN_STATE";
            case 211:
                return "CREATED_INTENT";
            case 212:
                return "INVALID_INTENT";
            case 213:
                return "SHOW_NOTIFICATION";
            case 214:
                return "SUCCESS_FETCH_IMAGE";
            case 215:
                return "FAIL_FETCH_IMAGE";
            case 216:
                return "DROPPED";
            case 217:
                return "QUERY_CHUNKS";
            case 218:
                return "QUERY_ROWS";
            case 219:
                return "COMPUTE_CHUNKS";
            case 220:
                return "SCROLL_COMPLETE";
            case 221:
                return "USE_INSTANCE_STATE";
            case 222:
                return "USE_ARGUMENTS";
            case 223:
                return "OFFSCREEN";
            case 224:
                return "LOG_READ";
            case 225:
                return "LOG_COMPACTED";
            case 226:
                return "LOG_WRITER_OPENED";
            case 227:
                return "TAB_SWITCH";
            case 228:
                return "EXIT_VIEW_CONTROLLER";
            case 229:
                return "TAGS_PREPARED";
            case 230:
                return "VIEW_DID_APPEAR";
            case 231:
                return "MEDIA_TOO_SMALL";
            case 232:
                return "ITEM_SELECTED";
            case 233:
                return "REPOSITIONED";
            case 234:
                return "PHOTO_UPLOAD_START";
            case 235:
                return "MEDIA_EDIT";
            case 236:
                return "MEDIA_EDIT_COMPLETE";
            case 237:
                return "VIDEO_PAUSE";
            case 238:
                return "VIDEO_COMPLETE";
            case 239:
                return "VIDEO_PLAYING_TIMEOUT";
            case 240:
                return "VIDEO_PLAYING_QPL_TIMEOUT";
            case 241:
                return "SESSION_OPEN";
            case 242:
                return "SCHEMA_HASH_MISMATCH";
            case 243:
                return "OVERRIDES_EXIST";
            case 244:
                return "DI_DONE";
            case 245:
                return "FLATBUFFER_SCHEMA_ABSENT";
            case 246:
                return "SUCCESS_NONEXISTENCE";
            case 247:
                return "VIDEO_CANCELLED";
            case 248:
                return "MESSENGER_QUEUE_CREATION_FAILURE";
            case 249:
                return "MESSENGER_DELTA_REQUEST_FAILURE";
            case 250:
                return "RETURN_EXCEPTION_TO_CALLER";
            case 251:
                return "SURFACE_TEXTURE_AVAILABLE";
            case 252:
                return "NEWS_FEED_FRAGMENT";
            case 253:
                return "HEADER_CACHE_FETCH_STARTED";
            case 610:
                return "RUN_FUNCTION";
            case 626:
                return "BEGIN_HANDLE_EVENT";
            case 627:
                return "END_HANDLE_EVENT";
            case 628:
                return "BEGIN_PROCESS_EVENT";
            case 629:
                return "END_PROCESS_EVENT";
            case 630:
                return "CANCEL_BACKGROUND";
            case 631:
                return "SC_TRACKER_SETUP_BEGIN";
            case 632:
                return "SC_TRACKER_SETUP_END";
            case 633:
                return "PROFILE_TOOLBOX_SETUP_BEGIN";
            case 634:
                return "PROFILE_TOOLBOX_SETUP_END";
            case 635:
                return "FEED_TOOLBOX_SETUP_BEGIN";
            case 636:
                return "FEED_TOOLBOX_SETUP_END";
            case 637:
                return "SCREEN_PART_RECEIVED";
            case 638:
                return "RVP_DID_FAIL_AUTOPLAY";
            case 639:
                return "VIEW_WILL_APPEAR_END";
            case 640:
                return "VIDEO_RENDERED";
            case 641:
                return "VIEW_DID_APPEAR_END";
            case 642:
                return "SHARE_FLOW_LOADED";
            case 643:
                return "START_DOWNLOAD_FACE_DETECTION_EFFECT";
            case 644:
                return "APPLY_FACE_DETECTION_EFFECT";
            case 645:
                return "INTERACTION_SWIPE_UP";
            case 646:
                return "LOOM_PROVIDER_FAILURE";
            case 647:
                return "ADS_SELECT_POST_VIEW";
            case 648:
                return "ADS_SELECT_IMAGE_VIEW";
            case 649:
                return "ADS_SELECT_BUDGET_VIEW";
            case 650:
                return "ADS_SELECT_AUDIENCE_VIEW";
            case 651:
                return "ADS_SELECT_CREATIVE_VIEW";
            case 652:
                return "VIDEO_FETCH_REQUEST_START";
            case 653:
                return "VIDEO_FETCH_REQUEST_RECEIVED";
            case 654:
                return "VIDEO_FETCH_REQUEST_ENTER_NETWORK_QUEUE";
            case 655:
                return "VIDEO_FETCH_REQUEST_NETWORK_REQUEST_START";
            case 656:
                return "VIDEO_FETCH_REQUEST_NETWORK_RESPONSE_RECEIVED";
            case 657:
                return "VIDEO_FETCH_REQUEST_NETWORK_FIRST_BYTE_ARRIVED";
            case 658:
                return "VIDEO_FETCH_REQUEST_NETWORK_TRANSFER_COMPLETE";
            case 659:
                return "VIDEO_FETCH_REQUEST_SATISFIED_BY_CACHE";
            case 660:
                return "VIDEO_FETCH_REQUEST_COMPLETE";
            case 661:
                return "VIDEO_FETCH_REQUEST_CACHE_CHECK_START";
            case 662:
                return "VIDEO_FETCH_REQUEST_CACHE_CHECK_END";
            case 663:
                return "VIDEO_FETCH_REQUEST_DID_ATTACH_TO_NETWORK_REQUEST";
            case 664:
                return "SELECT_PHOTOS_FAILED_SCORE";
            case 665:
                return "SELECT_PHOTOS_FAILED_TIMESTAMP";
            case 666:
                return "INTERACTION_CLICK";
            case 667:
                return "VIDEO_SCRUBBER_FIRST_THUMBNAIL_SHOWN";
            case 668:
                return "VIDEO_SCRUBBER_THUMBNAIL_SHOWN";
            case 669:
                return "COLD_START_BEGIN";
            case 670:
                return "COLD_START_END";
            case 671:
                return "COLD_START_LOAD_APP_JS";
            case 672:
                return "COLD_START_QUERY_SEND";
            case 673:
                return "COLD_START_APP_SHELL_COMPONENT_DID_MOUNT";
            case 674:
                return "VIDEO_RECORDING_START_CALLED";
            case 675:
                return "VIDEO_RECORDING_STOP_CALLED";
            case 676:
                return "WIKTORK_TEST";
            case 677:
                return "WIKTORK_TEST_TWO";
            case 678:
                return "ON_VIDEO_RECORDING_FINISHED";
            case 679:
                return "MEASURE_IMAGE";
            case 680:
                return "PDP_RENDER_LOADING";
            case 681:
                return "PDP_RENDER_FETCHED";
            case 682:
                return "VIDEO_FETCH_REQUEST_FAILED";
            case 683:
                return "LOGIN_FLOW_STARTED";
            case 684:
                return "LOGIN_FLOW_COMPLETED";
            case 685:
                return "VIDEO_DOWNLOAD_STARTED";
            case 686:
                return "VIDEO_DOWNLOAD_READY_TO_PLAY";
            case 687:
                return "VIDEO_DOWNLOAD_FAILED";
            case 688:
                return "FBLITE_SCREEN_RECEIVED";
            case 689:
                return "FBLITE_SERVER_START";
            case 690:
                return "FBLITE_SERVER_END";
            case 691:
                return "FBLITE_INCOMPLETE";
            case 692:
                return "BACKGROUND_THREAD";
            case 693:
                return "MAIN_THREAD";
            case 694:
                return "BWE_ESTIMATE_COMPLETE";
            case 695:
                return "WIKTORK_TEST_THREE";
            case 696:
                return "FBLITE_UNEXPECTED";
            case 697:
                return "THREAD_ASYNC_BEGIN_SERVER";
            case 698:
                return "THREAD_ASYNC_SUCCESS_SERVER";
            case 699:
                return "CARD_ASYNC_BEGIN_SERVER";
            case 700:
                return "CARD_ASYNC_SUCCESS_SERVER";
            case 701:
                return "FBLITE_INSTANT_TRANSITION_FAILED";
            case 702:
                return "BB_TRACE_REQUESTED";
            case 703:
                return "CANCEL_PSP";
            case 704:
                return "AGGREGATED";
            case 705:
                return "UNINSTRUMENTED";
            case 706:
                return "CANCEL_UNLOAD";
            case 707:
                return "DOWNLOAD_FAILED";
            case 708:
                return "UNZIP_FAILED";
            case 709:
                return "NO_ACTIVE_TRACE";
            case 710:
                return "LOOM_MMAP_TRACE_NOT_RECOVERED";
            case 711:
                return "PLUGIN_LOAD_END";
            case 712:
                return "UNPACKER_CHECK_START";
            case 713:
                return "PLUGIN_LOAD_START";
            case 714:
                return "UNPACKER_CHECK_END";
            case 715:
                return "UNPACKING_END";
            case 716:
                return "CREATE_UI_MANAGER_MODULE_START";
            case 717:
                return "CREATE_UI_MANAGER_MODULE_END";
            case 718:
                return "TEST_NUBBEL";
            case 719:
                return "CONDITION_NOT_MET";
            case 720:
                return "FAIL_FALSE_POSITIVE";
            case 721:
                return "FAIL_FALSE_NEGATIVE";
            case 722:
                return "APP_CRASH";
            case 723:
                return "TEST_GINDI";
            case 724:
                return "TTTT";
            case 725:
                return "BUG_BASH_ACTION";
            case 726:
                return "BUG_BASH_TEST";
            case 727:
                return "INIT_MOBILE_CONFIG";
            case 2001:
                return "APP_EXIT";
            case 3653:
                return "SUCCESS_PYTORCH";
            case 3921:
                return "INITIAL_LOAD";
            case 3922:
                return "NAVIGATION";
            case 6646:
                return "FRX_FLOW_END";
            case 11445:
                return "QPL_END_TO_END";
            case 11947:
                return "SUCCESS_CACHE_NOT_MODIFIED";
            case 12524:
                return "DUMMY";
            case 13061:
                return "PERMISSION_DIALOG_SHOWN";
            case 13062:
                return "NO_EMAIL_FETCHED";
            case 13063:
                return "HAVE_EXACTLY_ONE_GMAIL";
            case 13064:
                return "NUMBER_OF_GMAILS";
            case 13065:
                return "HAVE_ONE_GMAIL_MATCHED_CP";
            case 13066:
                return "NO_GMAIL_MATCHED";
            case 13067:
                return "OAUTH_DIALOG_SHOWN";
            case 13068:
                return "OAUTH_DIALOG_ACCEPT";
            case 13069:
                return "OAUTH_DIALOG_DENY";
            case 13070:
                return "OAUTH_TOKEN_FETCHED";
            case 13071:
                return "OAUTH_TOKEN_FAILURE";
            case 13072:
                return "OAUTH_SUCCESS";
            case 13073:
                return "OAUTH_FAIL_TIMEOUT";
            case 13074:
                return "OAUTH_FAIL_OTHER";
            case 13170:
                return "SUCCESS_NOTPRESENTED";
            case 29998:
                return "TEST_ACTION_FOR_CALLER_CONTEXT_TWO";
            case 32339:
                return "GINANDI_TEST";
            default:
                switch (i) {
                    case 258:
                        return "CHANGESET_ENQUEUED";
                    case 259:
                        return "RTC_BROADCAST_INITIALIZED";
                    case 260:
                        return "RTC_STREAMING_INITIALIZED";
                    case 261:
                        return "RTC_STREAMING_STARTED";
                    case 262:
                        return "CAMERA_VIDEO_OUTPUT_SWITCHED";
                    case 263:
                        return "RTMP_STREAM_STOPPED";
                    case 264:
                        return "LOCATION_FETCH_BEGIN";
                    case 265:
                        return "LOCATION_FETCH_SUCCESS";
                    case 266:
                        return "LOCATION_FETCH_FAILED";
                    case 267:
                        return "FIRST_UPDATE_SUCCESS";
                    case 268:
                        return "FIRST_UPDATE_FAILURE";
                    case 269:
                        return "RTMP_STREAMING_HANDLED_FRAME";
                    default:
                        switch (i) {
                            case 274:
                                return "RTMP_DVR_HANDLED_FRAME";
                            case 275:
                                return "LIVE_RTMP_STREAMING_HANDLED_FRAME";
                            case 276:
                                return "LIVE_RTMP_DVR_HANDLED_FRAME";
                            case 277:
                                return "PASS_QE_CHECK";
                            case 278:
                                return "PASS_AD_CHECK";
                            case 279:
                                return "PASS_SAMPLE_RATE_CHECK";
                            case 280:
                                return "HAS_VALID_HTML";
                            case 281:
                                return "FOUND_IMAGES";
                            case 282:
                                return "TIGON_REQUEST_BEGIN";
                            case 283:
                                return "TIGON_REQUEST_END";
                            case 284:
                                return "TIGON_RESPONSE_BEGIN";
                            case 285:
                                return "TIGON_RESPONSE_END";
                            case 286:
                                return "TIGON_PARSE_BEGIN";
                            case 287:
                                return "TIGON_PARSE_END";
                            case 288:
                                return "GRAPHQL_CACHE_FETCH_START";
                            case 289:
                                return "GRAPHQL_CACHE_FETCH_END";
                            case 290:
                                return "VIDEO_START_STALL";
                            case 291:
                                return "VIDEO_END_STALL";
                            case 292:
                                return "MERGE_LOCAL_FIELDS";
                            case 293:
                                return "LOAD_QUERY_STRING";
                            case 294:
                                return "CONFIG_TABLE_SCHEMA_HASH_MISMATCH";
                            case 295:
                                return "CONFIG_TABLE_SCHEMA_ABSENT";
                            case 296:
                                return "CONFIG_TABLE_MAGIC_MISMATCH";
                            case 297:
                                return "OBJSEL_FETCH";
                            case 298:
                                return "GO_TO_AD_ACTIVITY";
                            case 299:
                                return "SAVE_AD";
                            case 300:
                                return "UNSAVE_AD";
                            case 301:
                                return "SAVE_MODE";
                            case 302:
                                return "GO_AD_ACTIVITY_MODE";
                            case 303:
                                return "ACCESSIBILITY_ACTIVATE";
                            case 304:
                                return "ACCESSIBILITY_CUSTOM";
                            case 305:
                                return "ACCESSIBILITY_MAGIC_TAP";
                            case 306:
                                return "FINAL_IMAGE_SET";
                            case 307:
                                return "INTERMEDIATE_IMAGE_SET";
                            case 308:
                                return "INTERMEDIATE_IMAGE_FAIL";
                            case 309:
                                return "INTERMEDIATE_IMAGE_GOOD_ENOUGH_SET";
                            case 310:
                                return "APP_BACKGROUND";
                            case 311:
                                return "APP_FOREGROUND";
                            case 312:
                                return "RECEIVED_HARDWARE_FRAME";
                            case 313:
                                return "CAMERA_COMPONENT_MOUNTED";
                            case 314:
                                return "MQTT_CONNECTION_ATTEMPTED";
                            default:
                                switch (i) {
                                    case 325:
                                        return "DELTA_APPLICATION_COMPLETED";
                                    case 326:
                                        return "DELTAS_RECEIVED_AFTER_CONNECT";
                                    case 327:
                                        return "MESSENGER_DAY_UNIT_DISPLAYED";
                                    case 328:
                                        return "DATA_LOAD_END";
                                    case 329:
                                        return "VIEW_DID_BECOME_VISIBLE";
                                    case 330:
                                        return "DELTA_APPLICATION_INTERRUPTED";
                                    case 331:
                                        return "DELTA_BATCH_APPLICATION_COMPLETED";
                                    case 332:
                                        return "MESSAGE_LIST_DID_UPDATE";
                                    case 333:
                                        return "MESSAGE_LIST_WILL_UPDATE";
                                    case 334:
                                        return "SUCCESS_ZERO_WAIT_TIME";
                                    case 335:
                                        return "USER_SCROLLED";
                                    case 336:
                                        return "SPINNER_APPEARED";
                                    case 337:
                                        return "MODEL_ENQUEUED";
                                    case 338:
                                        return "VIEW_MODEL_APPLIED";
                                    case 339:
                                        return "PRESENTED";
                                    case 340:
                                        return "VIEW_DID_BECOME_VISIBLE_END";
                                    case 341:
                                        return "MESSENGER_DELTA_REQUEST_INIT";
                                    case 342:
                                        return "FEED_REQUEST_STARTED";
                                    case 343:
                                        return "FEED_REQUEST_FAILED";
                                    case 344:
                                        return "FEED_REQUEST_SUCCEEDED";
                                    case 345:
                                        return "FEED_LOAD_FROM_DISK_FINISHED";
                                    case 346:
                                        return "STORIES_REQUEST_STARTED";
                                    default:
                                        switch (i) {
                                            case 392:
                                                return "STORIES_REQUEST_FAILED";
                                            case 393:
                                                return "STORIES_REQUEST_SUCCEEDED";
                                            case 394:
                                                return "STORIES_LOAD_FROM_DISK_FINISHED";
                                            case 395:
                                                return "USER_INFO_LOADED";
                                            case 396:
                                                return "APP_CREATED";
                                            case 397:
                                                return "INIT_TO_USABLE";
                                            case 398:
                                                return "INIT_TO_NETWORK_CONTENT";
                                            case 399:
                                                return "TOTAL";
                                            case 400:
                                                return TigonRequest.HEAD;
                                            case 401:
                                                return "TAIL";
                                            case 402:
                                                return "INITIAL";
                                            case 403:
                                                return "OTHER";
                                            case 404:
                                                return "ANR_START_DATA_CAPTURE";
                                            case 405:
                                                return "ANR_ENQUEUE";
                                            case 406:
                                                return "NOTIF_NOT_ALERTED";
                                            case 407:
                                                return "NOTIF_DUPLICATE";
                                            case 408:
                                                return "NOTIF_MUTED";
                                            case 409:
                                                return "NOTIF_BUZZED";
                                            case 410:
                                                return "FEED_RESPONSE_PROCESSED";
                                            case 411:
                                                return "STORIES_RESPONSE_PROCESSED";
                                            case 412:
                                                return "APP_DID_FINISH_LAUNCHING_ENDED";
                                            case 413:
                                                return "ASYNC_BEGIN_DB";
                                            case 414:
                                                return "DELTA_APPLICATION_STARTED";
                                            case 415:
                                                return "ASYNC_SUCCESS_DB";
                                            case 416:
                                                return "ASYNC_FAIL_DB";
                                            case 417:
                                                return "ASYNC_BEGIN_SERVER";
                                            case 418:
                                                return "ASYNC_SUCCESS_SERVER";
                                            case 419:
                                                return "ASYNC_FAIL_SERVER";
                                            case 420:
                                                return "LEAVE";
                                            default:
                                                switch (i) {
                                                    case 429:
                                                        return "ASYNC_SUCCESS_DB_NO_DATA";
                                                    case 430:
                                                        return "ASYNC_FAIL_SERVER_NO_DATA";
                                                    case 431:
                                                        return "SUCCESS_MEMORY";
                                                    case 432:
                                                        return "SUCCESS_SERVER";
                                                    case 433:
                                                        return "FAIL_NO_DATA";
                                                    case 434:
                                                        return "ACTIVITY_NEW_INTENT";
                                                    case 435:
                                                        return "GRID_MEDIA_LOADED";
                                                    case 436:
                                                        return "STORY_TRAY_MEDIA_LOADED";
                                                    case 437:
                                                        return "INTERACTION_OPEN_QRCODE_SCANNER";
                                                    case 438:
                                                        return "MEDIA_LOAD_CACHE";
                                                    case 439:
                                                        return "MEDIA_LOAD_NETWORK";
                                                    case 440:
                                                        return "COMMENTS_LOAD_START";
                                                    case 441:
                                                        return "COMMENTS_LOAD_COMPLETE";
                                                    case 442:
                                                        return "MEDIA_LOAD_START";
                                                    case 443:
                                                        return "SCROLL_START";
                                                    case 444:
                                                        return "QRCODE_SCANNER_SCAN_SUCCESS";
                                                    case 445:
                                                        return "QRCODE_SCANNER_SCAN_FAILURE";
                                                    case 446:
                                                        return "APP_CREATED_MAIN_PROCESS";
                                                    case 447:
                                                        return "FINISH_REGISTERING_JS_NATIVE_MODULES";
                                                    case 448:
                                                        return "NON_ANR";
                                                    case 449:
                                                        return "FINISH_INITIALIZING_JS_BRIDGE";
                                                    case 450:
                                                        return "FINISH_INJECTING_JS_HOOKS";
                                                    case 451:
                                                        return "FINISH_RUNNING_JS_INITIALIZER";
                                                    case 452:
                                                        return "UI_RESPONSIVE";
                                                    case 453:
                                                        return "PHASE_ONE_COMPLETE";
                                                    case 454:
                                                        return "PHASE_TWO_COMPLETE";
                                                    case 455:
                                                        return "LS_HEADER_START";
                                                    case 456:
                                                        return "LS_HEADER_LOAD";
                                                    case 457:
                                                        return "LS_BODY_START";
                                                    case 458:
                                                        return "LS_BODY_LOAD";
                                                    case 459:
                                                        return "APP_ONCREATE";
                                                    case 460:
                                                        return "START_FETCH_IMAGE";
                                                    case 461:
                                                        return "LOGGED_OUT";
                                                    case 462:
                                                        return "LS_HEADER_LAYOUT_SUCCESS";
                                                    case 463:
                                                        return "STARTED_CAPTURE_SESSION";
                                                    case 464:
                                                        return "CAMERA_VIEW_READY";
                                                    case 465:
                                                        return "CAMERA_FIRST_FRAME";
                                                    case 466:
                                                        return "PHOTO_BITMAP_READY";
                                                    case 467:
                                                        return "END";
                                                    case 468:
                                                        return "FRAME_RENDERED";
                                                    case 469:
                                                        return "LS_MAP_LIST_START";
                                                    case 470:
                                                        return "LS_MAP_LIST_LOADED";
                                                    case 471:
                                                        return "LS_MAP_LIST_SUCCESS";
                                                    case 472:
                                                        return "FETCH_THREAD_STARTED";
                                                    case 473:
                                                        return "FETCH_THREAD_SUCCEEDED";
                                                    case 474:
                                                        return "FETCH_THREAD_FAILED";
                                                    case 475:
                                                        return "STRUCTURE_FETCH_COMPLETE";
                                                    case 476:
                                                        return "FOLLOWED_SHOWS_FETCHED";
                                                    case 477:
                                                        return "ABANDONED";
                                                    case 478:
                                                        return "ENTERED";
                                                    case 479:
                                                        return "LS_FILTER_START";
                                                    case 480:
                                                        return "LS_FILTER_LOAD";
                                                    case 481:
                                                        return "LS_FILTER_SUCCESS";
                                                    case 482:
                                                        return "LS_SEARCH_RESULT_START";
                                                    case 483:
                                                        return "LS_SEARCH_RESULT_LOAD";
                                                    case 484:
                                                        return "NETWORK_PARSE_START";
                                                    case 485:
                                                        return "NETWORK_REQUEST_SENT";
                                                    case 486:
                                                        return "COMPONENT_DATA_MODEL_UPDATE_START";
                                                    case 487:
                                                        return "COMPONENT_DATA_MODEL_UPDATE_COMPLETE";
                                                    case 488:
                                                        return "HIGH_RES_PHOTO_FILE_READY";
                                                    case 489:
                                                        return "NATIVE_PHOTO_BITMAP_READY";
                                                    case 490:
                                                        return "REEL_JSON_RECEIVED";
                                                    case 491:
                                                        return "REEL_MEDIA_RECEIVED";
                                                    case 492:
                                                        return "STORY_VIEWER_APPEAR";
                                                    case 493:
                                                        return "FETCH_INBOX_STARTED";
                                                    case 494:
                                                        return "FETCH_INBOX_SUCCEEDED";
                                                    case 495:
                                                        return "FETCH_INBOX_FAILED";
                                                    case 496:
                                                        return "REQUEST_ADDED";
                                                    case 497:
                                                        return "INIT_QE_START";
                                                    case 498:
                                                        return "INIT_QE_END";
                                                    case 499:
                                                        return "MULTIDEX_INSTALLED";
                                                    case ProcessAnrErrorMonitor.DEFAULT_POLLING_TIME_MS /*{ENCODED_INT: 500}*/:
                                                        return "PREPARE_CAMERA_SESSION";
                                                    case 501:
                                                        return "START_CAMERA_SESSION";
                                                    case 502:
                                                        return "DID_START_CAMERA_SESSION";
                                                    case 503:
                                                        return "FIRST_HARDWARE_FRAME";
                                                    case 504:
                                                        return "START_RENDERING_FIRST_USER_FRAME";
                                                    case 505:
                                                        return "FIRST_MEDIA_RENDERED";
                                                    case 506:
                                                        return "FIRST_CACHED_MEDIA_RENDERED";
                                                    case 507:
                                                        return "CAMERA_INITIALIZED";
                                                    case 508:
                                                        return "HTTP_TRANSACTION_STARTED";
                                                    case 509:
                                                        return "REMOTE_PROCESS";
                                                    case 510:
                                                        return "PRE_REQUEST_SEND_CALLED";
                                                    case 511:
                                                        return "BRIDGE_STARTUP_WILL_START";
                                                    case 512:
                                                        return "BRIDGE_STARTUP_DID_FINISH";
                                                    case 513:
                                                        return "COVER_PHOTO_LOW_RES";
                                                    case 514:
                                                        return "COVER_PHOTO_HIGH_RES";
                                                    case 515:
                                                        return "PROFILE_PIC_LOW_RES";
                                                    case 516:
                                                        return "PROFILE_PIC_HIGH_RES";
                                                    case 517:
                                                        return "CONTEXT_ITEMS";
                                                    case 518:
                                                        return "MEDIA_LOADED";
                                                    case 519:
                                                        return "STATE_UPDATE";
                                                    case 520:
                                                        return "ON_SHOW_LOGIN";
                                                    case 521:
                                                        return "EMPTY_REQUEST";
                                                    case 522:
                                                        return "METERED_CONNECTION";
                                                    case 523:
                                                        return "VIDEO_DOWNSTREAM_FORMAT_CHANGED";
                                                    case 524:
                                                        return "DISABLED";
                                                    case 525:
                                                        return "NO_METADATA";
                                                    case 526:
                                                        return "INCOMPLETE_METADATA";
                                                    case 527:
                                                        return "PHOTO_CAPTURE_READY";
                                                    case 528:
                                                        return "CAMERA_START_READY";
                                                    case 529:
                                                        return "DELAY_START";
                                                    case 530:
                                                        return "DELAY_STOP";
                                                    case 531:
                                                        return "RANK_START";
                                                    case 532:
                                                        return "RANK_STOP";
                                                    case 533:
                                                        return "DB_WRITE_START";
                                                    case 534:
                                                        return "DB_WRITE_STOP";
                                                    case 535:
                                                        return "ADD_STORY_TO_UI";
                                                    case 536:
                                                        return "WEBVIEW_URI_REDIRECTOR_CONSTRUCTION";
                                                    case 537:
                                                        return "UNINTERRUPTED";
                                                    case 538:
                                                        return "VIDEO_TOGGLE_FULL_SCREEN";
                                                    case 539:
                                                        return "CONFIGURE_START";
                                                    case 540:
                                                        return "CONFIGURE_END";
                                                    case 541:
                                                        return "BROWSER_OPEN";
                                                    case 542:
                                                        return "FIRST_DATA_RECEIVED";
                                                    case 543:
                                                        return "RVP_WILL_LOAD";
                                                    case 544:
                                                        return "RVP_DID_LOAD";
                                                    case 545:
                                                        return "CACHE_WRITE_START";
                                                    case 546:
                                                        return "CACHE_WRITE_SUCCESS";
                                                    case 547:
                                                        return "CACHE_WRITE_FAIL";
                                                    case 548:
                                                        return "RVP_WILL_PAUSE";
                                                    case 549:
                                                        return "RVP_DID_PAUSE";
                                                    case 550:
                                                        return "RVP_WILL_PLAY";
                                                    case 551:
                                                        return "RVP_DID_PLAY";
                                                    case 552:
                                                        return "RVP_WILL_PREPARE";
                                                    case 553:
                                                        return "RVP_DID_PREPARE";
                                                    case 554:
                                                        return "RVP_WILL_RELOAD";
                                                    case 555:
                                                        return "RVP_DID_RELOAD";
                                                    case 556:
                                                        return "RVP_WILL_CREATE";
                                                    case 557:
                                                        return "RVP_DID_CREATE";
                                                    case 558:
                                                        return "RVP_WILL_FINISH_INFLATE";
                                                    case 559:
                                                        return "RVP_DID_FINISH_INFLATE";
                                                    case 560:
                                                        return "RVP_WILL_MOUNT";
                                                    case 561:
                                                        return "RVP_DID_MOUNT";
                                                    case 562:
                                                        return "START_COMPRESSING_MESSAGE";
                                                    case 563:
                                                        return "MESSAGE_COMPRESSED";
                                                    case 564:
                                                        return "START_DECOMPRESSING_MESSAGE";
                                                    case 565:
                                                        return "MESSAGE_DECOMPRESSED";
                                                    case 566:
                                                        return "START_SENDING_MESSAGE";
                                                    case 567:
                                                        return "CAMERA_PREVIEW_FROZEN";
                                                    default:
                                                        switch (i) {
                                                            case 569:
                                                                return "VC_INIT_START";
                                                            case 570:
                                                                return "VC_INIT_BEGIN";
                                                            case 571:
                                                                return "VC_INIT_END";
                                                            case 572:
                                                                return "VC_VIEW_DID_LOAD_BEGIN";
                                                            case 573:
                                                                return "VC_VIEW_DID_LOAD_END";
                                                            case 574:
                                                                return "ROOT_QUERY_START";
                                                            case 575:
                                                                return "ROOT_QUERY_SUCCESS";
                                                            case 576:
                                                                return "ROOT_QUERY_FAIL";
                                                            case 577:
                                                                return "CACHE_INITIALIZED";
                                                            case 578:
                                                                return "FETCH_BEGIN";
                                                            case 579:
                                                                return "FETCH_FINISHED";
                                                            case 580:
                                                                return "PARSING_FINISHED";
                                                            case 581:
                                                                return "LOAD_VIEW_END";
                                                            case 582:
                                                                return "LOAD_URL_BEGIN";
                                                            case 583:
                                                                return "LOAD_URL_END";
                                                            default:
                                                                switch (i) {
                                                                    case 598:
                                                                        return "SHOULD_LOAD_URL_BEGIN";
                                                                    case 599:
                                                                        return "SHOULD_LOAD_URL_END";
                                                                    case 600:
                                                                        return "BLOCKING_RESOURCES_LOADED";
                                                                    case 601:
                                                                        return "WEB_PAGE_LOADED";
                                                                    default:
                                                                        switch (i) {
                                                                            case 603:
                                                                                return "JS_TEARDOWN";
                                                                            case 604:
                                                                                return "JS_SETUP";
                                                                            case 605:
                                                                                return "PREP_STATE";
                                                                            case 606:
                                                                                return "PREP_FORMS";
                                                                            default:
                                                                                switch (i) {
                                                                                    case 613:
                                                                                        return "LOAD_MODULES";
                                                                                    case 614:
                                                                                        return "VIDEO_READY_TO_PLAY";
                                                                                    case 615:
                                                                                        return "CANCEL_NAVIGATION";
                                                                                    default:
                                                                                        return "UNDEFINED_QPL_ACTION";
                                                                                }
                                                                        }
                                                                }
                                                        }
                                                }
                                        }
                                }
                        }
                }
        }
    }

    /*  JADX ERROR: Type inference failed with exception
        jadx.core.utils.exceptions.JadxOverflowException: Type update terminated with stack overflow, arg: (r1v0 ?? I:??[int, boolean, OBJECT, ARRAY, byte, short, char])
        	at jadx.core.utils.ErrorsCounter.addError(ErrorsCounter.java:57)
        	at jadx.core.utils.ErrorsCounter.error(ErrorsCounter.java:31)
        	at jadx.core.dex.attributes.nodes.NotificationAttrNode.addError(NotificationAttrNode.java:15)
        	at jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(TypeInferenceVisitor.java:107)
        */
    public final java.lang.String A01(int r4) {
        /*
        // Method dump skipped, instructions count: 35454
        */
        throw new UnsupportedOperationException("Method not decompiled: X.C0925p0.A01(int):java.lang.String");
    }
}
