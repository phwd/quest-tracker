package com.oculus.auth.api;

import X.AbstractC06640p5;
import X.AbstractC08380wS;
import X.AbstractC08390wT;
import X.AnonymousClass0p1;
import X.AnonymousClass117;
import X.C003008y;
import X.C01020Iw;
import X.C08220wC;
import X.C08330wN;
import X.C08340wO;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import java.io.IOException;
import javax.inject.Provider;

@Dependencies({})
public class FacebookAuthorizationInterceptor implements AbstractC08380wS {
    public static final String HEADER_AUTHORIZATION = "Authorization";

    @AutoGeneratedAccessMethod
    public static final AnonymousClass0p1 _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_api_FacebookAuthorizationInterceptor_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C003008y(59, r2);
    }

    @AutoGeneratedAccessMethod
    public static final FacebookAuthorizationInterceptor _UL__ULSEP_com_oculus_auth_api_FacebookAuthorizationInterceptor_ULSEP_ACCESS_METHOD(AbstractC06640p5 r1) {
        return (FacebookAuthorizationInterceptor) AnonymousClass117.A00(59, r1);
    }

    @AutoGeneratedFactoryMethod
    public static final FacebookAuthorizationInterceptor _UL__ULSEP_com_oculus_auth_api_FacebookAuthorizationInterceptor_ULSEP_FACTORY_METHOD(AbstractC06640p5 r0) {
        return new FacebookAuthorizationInterceptor();
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_api_FacebookAuthorizationInterceptor_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C01020Iw(59, r2);
    }

    @Override // X.AbstractC08380wS
    public C08220wC intercept(AbstractC08390wT r5) throws IOException {
        C08330wN A8H = r5.A8H();
        if (A8H.A02.A00("Authorization") == null) {
            C08340wO r1 = new C08340wO(A8H);
            r1.A02("Authorization", "OAuth null");
            A8H = r1.A00();
        }
        return r5.A7Z(A8H);
    }
}
