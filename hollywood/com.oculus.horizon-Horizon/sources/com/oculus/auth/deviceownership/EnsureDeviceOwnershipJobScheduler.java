package com.oculus.auth.deviceownership;

import X.AbstractC06640p5;
import X.AnonymousClass0J2;
import X.AnonymousClass0QC;
import X.AnonymousClass0p1;
import X.AnonymousClass117;
import X.C003008y;
import X.C01020Iw;
import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.job.JobInfo;
import android.app.job.JobScheduler;
import android.content.ComponentName;
import android.content.Context;
import android.text.TextUtils;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.google.common.collect.ImmutableMap;
import com.oculus.auth.components.AuthAction;
import com.oculus.auth.components.AuthLogger;
import com.oculus.auth.components.DeviceOwnershipHelper;
import com.oculus.auth.credentials.Credentials;
import com.oculus.auth.credentials.CredentialsManager;
import com.oculus.multiuser.UserClassifier;
import com.oculus.time.Clock;
import java.util.concurrent.TimeUnit;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_time_Clock_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_AuthLogger_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_multiuser_UserClassifier_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_DeviceOwnershipHelper_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID"})
@TargetApi(24)
public class EnsureDeviceOwnershipJobScheduler {
    public static final String ACTION = "com.oculus.auth.deviceownership.SCHEDULE_ENSURE_DEVICE_OWNERSHIP_JOB";
    public static final int JOB_ID = 1828726829;
    public static final String OUTCOME_JOB_ALREADY_SCHEDULED = "job_already_scheduled";
    public static final String OUTCOME_JOB_SCHEDULED = "job_scheduled";
    public static final String OUTCOME_OWNERSHIP_ALREADY_SET = "ownership_already_set";
    public static final String OUTCOME_USER_NOT_LOGGED_IN = "user_not_logged_in";
    public static final String OUTCOME_USER_NOT_PRIMARY = "user_not_primary";
    public static final long RETRY_TIMEOUT_MILLIS = TimeUnit.HOURS.toMillis(1);
    public AnonymousClass0QC _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final AnonymousClass0p1 _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_deviceownership_EnsureDeviceOwnershipJobScheduler_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C003008y(395, r2);
    }

    @AutoGeneratedAccessMethod
    public static final EnsureDeviceOwnershipJobScheduler _UL__ULSEP_com_oculus_auth_deviceownership_EnsureDeviceOwnershipJobScheduler_ULSEP_ACCESS_METHOD(AbstractC06640p5 r1) {
        return (EnsureDeviceOwnershipJobScheduler) AnonymousClass117.A00(395, r1);
    }

    @AutoGeneratedFactoryMethod
    public static final EnsureDeviceOwnershipJobScheduler _UL__ULSEP_com_oculus_auth_deviceownership_EnsureDeviceOwnershipJobScheduler_ULSEP_FACTORY_METHOD(AbstractC06640p5 r1) {
        return new EnsureDeviceOwnershipJobScheduler(r1);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_deviceownership_EnsureDeviceOwnershipJobScheduler_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C01020Iw(395, r2);
    }

    private String doScheduleJobIfNecessary() {
        if (!((UserClassifier) AnonymousClass0J2.A03(3, 468, this._UL_mInjectionContext)).A01()) {
            return OUTCOME_USER_NOT_PRIMARY;
        }
        if (((DeviceOwnershipHelper) AnonymousClass0J2.A03(4, 23, this._UL_mInjectionContext)).isOwnershipSet()) {
            return OUTCOME_OWNERSHIP_ALREADY_SET;
        }
        if (!isUserLoggedIn()) {
            return OUTCOME_USER_NOT_LOGGED_IN;
        }
        if (jobScheduler().getPendingJob(1828726829) != null) {
            return OUTCOME_JOB_ALREADY_SCHEDULED;
        }
        jobScheduler().schedule(new JobInfo.Builder(1828726829, new ComponentName((Context) AnonymousClass0J2.A03(0, 294, this._UL_mInjectionContext), EnsureDeviceOwnershipJobService.class)).setRequiredNetworkType(1).setBackoffCriteria(RETRY_TIMEOUT_MILLIS, 0).setPersisted(true).build());
        return OUTCOME_JOB_SCHEDULED;
    }

    private boolean isUserLoggedIn() {
        Credentials credentials = ((CredentialsManager) AnonymousClass0J2.A03(5, 199, this._UL_mInjectionContext)).getCredentials();
        if (credentials == null || TextUtils.isEmpty(credentials.mAccessToken)) {
            return false;
        }
        return true;
    }

    @SuppressLint({"Return Not Nullable"})
    private JobScheduler jobScheduler() {
        return (JobScheduler) ((Context) AnonymousClass0J2.A03(0, 294, this._UL_mInjectionContext)).getSystemService("jobscheduler");
    }

    public void scheduleJobIfNecessary() {
        ((AuthLogger) AnonymousClass0J2.A03(2, 456, this._UL_mInjectionContext)).reportAction(AuthAction.newInstance(ACTION, (Clock) AnonymousClass0J2.A03(1, 354, this._UL_mInjectionContext)), null, ImmutableMap.A02(AuthLogger.EXTRA_OUTCOME, doScheduleJobIfNecessary()));
    }

    @Inject
    public EnsureDeviceOwnershipJobScheduler(AbstractC06640p5 r3) {
        this._UL_mInjectionContext = new AnonymousClass0QC(6, r3);
    }
}
