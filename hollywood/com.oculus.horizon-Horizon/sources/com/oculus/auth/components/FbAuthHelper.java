package com.oculus.auth.components;

import X.AbstractC06640p5;
import X.AnonymousClass0D4;
import X.AnonymousClass0DC;
import X.AnonymousClass0p1;
import X.AnonymousClass117;
import X.C003008y;
import X.C01020Iw;
import androidx.annotation.VisibleForTesting;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.facebook.ultralight.Inject;
import com.oculus.auth.api.AuthMethods;
import com.oculus.auth.api.LoginWithFbAuthResponse;
import com.oculus.horizon.api.ApiTaskCallback;
import javax.annotation.concurrent.ThreadSafe;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_auth_api_AuthMethods_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_AuthComponentRunner_ULSEP_BINDING_ID"})
@ThreadSafe
@VisibleForTesting
public class FbAuthHelper {
    @Inject
    @Eager
    public final AuthMethods mAuthMethods;
    @Inject
    @Eager
    public final AuthComponentRunner mComponentRunner;

    @AutoGeneratedAccessMethod
    public static final AnonymousClass0p1 _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_components_FbAuthHelper_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C003008y(503, r2);
    }

    @AutoGeneratedAccessMethod
    public static final FbAuthHelper _UL__ULSEP_com_oculus_auth_components_FbAuthHelper_ULSEP_ACCESS_METHOD(AbstractC06640p5 r1) {
        return (FbAuthHelper) AnonymousClass117.A00(503, r1);
    }

    @AutoGeneratedFactoryMethod
    public static final FbAuthHelper _UL__ULSEP_com_oculus_auth_components_FbAuthHelper_ULSEP_FACTORY_METHOD(AbstractC06640p5 r1) {
        return new FbAuthHelper(r1);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_components_FbAuthHelper_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C01020Iw(503, r2);
    }

    public AnonymousClass0DC<LoginWithFbAuthResponse.AccountInfo> fetchFbInfoForAccountLinkingAsync(String str, AuthAction authAction) {
        ApiTaskCallback apiTaskCallback = new ApiTaskCallback();
        this.mAuthMethods.loginWithFbAuth(str, apiTaskCallback);
        return this.mComponentRunner.runAsync(apiTaskCallback.mCompletionSource.A00.A0B(new AnonymousClass0D4<LoginWithFbAuthResponse, LoginWithFbAuthResponse.AccountInfo>() {
            /* class com.oculus.auth.components.FbAuthHelper.AnonymousClass2 */

            @Override // X.AnonymousClass0D4
            public LoginWithFbAuthResponse.AccountInfo then(AnonymousClass0DC<LoginWithFbAuthResponse> r3) throws Exception {
                LoginWithFbAuthResponse A0G = r3.A0G();
                LoginWithFbAuthResponse.LoginSession loginSession = A0G.loginSession;
                if (loginSession == null) {
                    LoginWithFbAuthResponse.AccountInfo accountInfo = A0G.prefilledAccountInfo;
                    if (accountInfo != null) {
                        return accountInfo;
                    }
                    throw new UnexpectedResponseError();
                }
                throw new CannotMergeAccountsBecauseAlreadyLinkedError(loginSession);
            }
        }), AuthLogger.COMPONENT_FETCH_FB_INFO_FOR_ACCOUNT_LINKING, authAction);
    }

    public AnonymousClass0DC<LoginWithFbAuthResponse.LoginSession> loginWithFbAuthAsync(String str, AuthAction authAction) {
        ApiTaskCallback apiTaskCallback = new ApiTaskCallback();
        this.mAuthMethods.loginWithFbAuth(str, apiTaskCallback);
        return this.mComponentRunner.runAsync(apiTaskCallback.mCompletionSource.A00.A0B(new AnonymousClass0D4<LoginWithFbAuthResponse, LoginWithFbAuthResponse.LoginSession>() {
            /* class com.oculus.auth.components.FbAuthHelper.AnonymousClass1 */

            @Override // X.AnonymousClass0D4
            public LoginWithFbAuthResponse.LoginSession then(AnonymousClass0DC<LoginWithFbAuthResponse> r4) throws Exception {
                LoginWithFbAuthResponse A0G = r4.A0G();
                LoginWithFbAuthResponse.LoginSession loginSession = A0G.loginSession;
                if (loginSession != null) {
                    return loginSession;
                }
                LoginWithFbAuthResponse.AccountInfo accountInfo = A0G.prefilledAccountInfo;
                if (accountInfo != null) {
                    throw new NoLinkedAccountError(accountInfo, A0G.existingEmailConflict);
                }
                throw new UnexpectedResponseError();
            }
        }), AuthLogger.COMPONENT_LOGIN_WITH_FB_AUTH, authAction);
    }

    @Inject
    public FbAuthHelper(AbstractC06640p5 r2) {
        this.mAuthMethods = AuthMethods._UL__ULSEP_com_oculus_auth_api_AuthMethods_ULSEP_ACCESS_METHOD(r2);
        this.mComponentRunner = AuthComponentRunner._UL__ULSEP_com_oculus_auth_components_AuthComponentRunner_ULSEP_ACCESS_METHOD(r2);
    }
}
