package com.oculus.auth.components;

import X.AbstractC06640p5;
import X.AnonymousClass006;
import X.AnonymousClass0D3;
import X.AnonymousClass0D4;
import X.AnonymousClass0DC;
import X.AnonymousClass0DD;
import X.AnonymousClass0J2;
import X.AnonymousClass0NO;
import X.AnonymousClass0QC;
import X.AnonymousClass0p1;
import X.AnonymousClass117;
import X.C003008y;
import X.C01020Iw;
import android.annotation.TargetApi;
import android.content.Context;
import android.content.Intent;
import android.os.Process;
import android.os.SystemClock;
import android.text.TextUtils;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.google.common.base.Preconditions;
import com.google.common.base.Strings;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.RegularImmutableSet;
import com.google.common.collect.SingletonImmutableSet;
import com.oculus.auth.api.AuthMethods;
import com.oculus.auth.api.LoginWithFbAuthResponse;
import com.oculus.auth.credentials.Credentials;
import com.oculus.auth.service.contract.ServiceContract;
import com.oculus.auth.storage.AuthDatastore;
import com.oculus.errorreporting.interfaces.IErrorReporter;
import com.oculus.horizon.api.ApiRequestManager;
import com.oculus.horizon.api.ApiTaskCallback;
import com.oculus.horizon.api.login.LoginRequest;
import com.oculus.horizon.api.login.LoginResponse;
import com.oculus.horizon.api.profile.MyUserProfileRequest;
import com.oculus.horizon.api.profile.MyUserProfileResponse;
import com.oculus.horizon.api.twofac.TwoFactorVerifyResponse;
import com.oculus.http.core.base.ApiCallback;
import com.oculus.http.core.base.ApiError;
import com.oculus.multiuser.UserClassifier;
import com.oculus.perflogs.OculusPerformanceLogger;
import com.oculus.util.WakeupUtil;
import java.util.ArrayList;
import java.util.Locale;
import java.util.concurrent.Callable;
import java.util.concurrent.Executor;
import javax.annotation.Nullable;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_horizon_api_ApiRequestManager_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_api_AuthMethods_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_perflogs_OculusPerformanceLogger_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_errorreporting_interfaces_IErrorReporter_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_FbAuthHelper_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_UserInfoFetcher_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_DeviceClaimHelper_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_BackendUpdater_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_multiuser_UserClassifier_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_SecondaryUserEnroller_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_DeviceOwnershipHelper_ULSEP_BINDING_ID"})
@TargetApi(24)
public class LoginComponents {
    public static final String TAG = "LoginComponents";
    public AnonymousClass0QC _UL_mInjectionContext;

    public enum Option {
        SKIP_CLAIMING,
        RELOGIN
    }

    @AutoGeneratedAccessMethod
    public static final AnonymousClass0p1 _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_components_LoginComponents_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C003008y(478, r2);
    }

    @AutoGeneratedAccessMethod
    public static final LoginComponents _UL__ULSEP_com_oculus_auth_components_LoginComponents_ULSEP_ACCESS_METHOD(AbstractC06640p5 r1) {
        return (LoginComponents) AnonymousClass117.A00(478, r1);
    }

    @AutoGeneratedFactoryMethod
    public static final LoginComponents _UL__ULSEP_com_oculus_auth_components_LoginComponents_ULSEP_FACTORY_METHOD(AbstractC06640p5 r1) {
        return new LoginComponents(r1);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_components_LoginComponents_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C01020Iw(478, r2);
    }

    public static <T> AnonymousClass0DC<Void> captureResult(AnonymousClass0DC<T> r1, final AnonymousClass0D3<T> r2) {
        return r1.A0B(new AnonymousClass0D4<T, Void>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass11 */

            @Override // X.AnonymousClass0D4
            public Void then(AnonymousClass0DC<T> r3) {
                AnonymousClass0D3.this.A00 = r3.A0G();
                return null;
            }
        });
    }

    /* access modifiers changed from: private */
    /* access modifiers changed from: public */
    private AnonymousClass0DC<Void> claimDeviceAsync(final String str, final AuthAction authAction) {
        final AnonymousClass0D3 r3 = new AnonymousClass0D3();
        AnonymousClass0DC<Void> captureResult = captureResult(((UserInfoFetcher) AnonymousClass0J2.A03(7, 38, this._UL_mInjectionContext)).fetchUserInfoAsync(str), r3);
        AnonymousClass10 r0 = new AnonymousClass0D4<Void, AnonymousClass0DC<Void>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass10 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Void> then(AnonymousClass0DC<Void> r4) {
                return ((BackendUpdater) AnonymousClass0J2.A03(9, 141, LoginComponents.this._UL_mInjectionContext)).activateHmdAsync(str, authAction);
            }
        };
        Executor executor = AnonymousClass0DC.A0A;
        return captureResult.A0D(r0, executor).A0D(new AnonymousClass0D4<Void, AnonymousClass0DC<Void>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass9 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Void> then(AnonymousClass0DC<Void> r5) {
                return ((DeviceClaimHelper) AnonymousClass0J2.A03(8, 386, LoginComponents.this._UL_mInjectionContext)).claimDeviceAsync(r3.A00.deviceSecret, authAction);
            }
        }, executor);
    }

    private AnonymousClass0DC<Void> ensureDeviceOwnershipAsync(AuthAction authAction) {
        return ((DeviceOwnershipHelper) AnonymousClass0J2.A03(12, 23, this._UL_mInjectionContext)).ensureOwnershipAsync(authAction).A09(new AnonymousClass0D4<Void, Void>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass18 */

            @Override // X.AnonymousClass0D4
            public Void then(AnonymousClass0DC<Void> r5) {
                if (!r5.A0K()) {
                    return null;
                }
                ((IErrorReporter) AnonymousClass0J2.A03(5, 428, LoginComponents.this._UL_mInjectionContext)).A97(LoginComponents.TAG, "Non-fatal error ensuring device ownership upon login", r5.A0F());
                return null;
            }
        });
    }

    private AnonymousClass0DC<Void> runPostLoginBroadcast(final boolean z) {
        return AnonymousClass0DC.A07(new Callable<Void>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass17 */

            @Override // java.util.concurrent.Callable
            public Void call() {
                LoginComponents.this.sendLoginBroadcast(z);
                LoginComponents.this.triggerHomeGatekeepersFetch();
                LoginComponents.this.triggerHomeQuickExperimentFetch();
                return null;
            }
        }, AnonymousClass0DC.A0B, null);
    }

    /* access modifiers changed from: private */
    /* access modifiers changed from: public */
    private AnonymousClass0DC<Void> runPostLoginTasksAsync(AuthAction authAction, boolean z) {
        ArrayList arrayList = new ArrayList();
        arrayList.add(runPostLoginBroadcast(z));
        if (((UserClassifier) AnonymousClass0J2.A03(10, 468, this._UL_mInjectionContext)).A01()) {
            arrayList.add(ensureDeviceOwnershipAsync(authAction));
        }
        return AnonymousClass0DC.A05(arrayList).A09(new AnonymousClass0D4<Void, Void>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass16 */

            @Override // X.AnonymousClass0D4
            public Void then(AnonymousClass0DC<Void> r5) {
                if (!r5.A0K()) {
                    return null;
                }
                ((IErrorReporter) AnonymousClass0J2.A03(5, 428, LoginComponents.this._UL_mInjectionContext)).A97(LoginComponents.TAG, "Unexpected error executing post login tasks", r5.A0F());
                return null;
            }
        });
    }

    @Nullable
    public static String scrub(@Nullable String str) {
        if (str == null) {
            return null;
        }
        int length = str.length();
        boolean z = true;
        if (length <= 1) {
            if (length < 0) {
                z = false;
            }
            Preconditions.checkArgument(z, "invalid count: %s", length);
            if (length == 0) {
                return "";
            }
            return "x";
        }
        int length2 = "x".length();
        long j = ((long) length2) * ((long) length);
        int i = (int) j;
        if (((long) i) == j) {
            char[] cArr = new char[i];
            "x".getChars(0, length2, cArr, 0);
            while (true) {
                int i2 = i - length2;
                if (length2 < i2) {
                    System.arraycopy(cArr, 0, cArr, length2, length2);
                    length2 <<= 1;
                } else {
                    System.arraycopy(cArr, 0, cArr, length2, i2);
                    return new String(cArr);
                }
            }
        } else {
            throw new ArrayIndexOutOfBoundsException(AnonymousClass006.A04("Required array size too large: ", j));
        }
    }

    /* access modifiers changed from: private */
    /* access modifiers changed from: public */
    private void sendLoginBroadcast(boolean z) {
        Intent intent = new Intent();
        intent.setAction(ServiceContract.BROADCAST_LOGIN);
        intent.putExtra("user", Process.myUserHandle());
        intent.putExtra("is_relogin", z);
        ((Context) AnonymousClass0J2.A03(0, 294, this._UL_mInjectionContext)).sendBroadcast(intent);
    }

    /* access modifiers changed from: private */
    /* access modifiers changed from: public */
    private void triggerHomeGatekeepersFetch() {
        WakeupUtil.A00((Context) AnonymousClass0J2.A03(0, 294, this._UL_mInjectionContext), WakeupUtil.Action.FETCH_GK);
    }

    /* access modifiers changed from: private */
    /* access modifiers changed from: public */
    private void triggerHomeQuickExperimentFetch() {
        WakeupUtil.A00((Context) AnonymousClass0J2.A03(0, 294, this._UL_mInjectionContext), WakeupUtil.Action.FETCH_QE);
    }

    public AnonymousClass0DC<Void> completeLoginAsync(final AnonymousClass0DC<Credentials> r4, final ImmutableSet<Option> immutableSet, final AuthAction authAction) {
        AnonymousClass8 r0 = new AnonymousClass0D4<Credentials, AnonymousClass0DC<Credentials>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass8 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Credentials> then(AnonymousClass0DC<Credentials> r5) throws Exception {
                String str = r5.A0G().mUserId;
                String userId = ((AuthDatastore) AnonymousClass0J2.A03(3, 17, LoginComponents.this._UL_mInjectionContext)).getUserId();
                if (userId == null || str.equals(userId)) {
                    return r5;
                }
                throw new MarshallableError(-18, "Account Conflict", "User is trying to login to a different account than the one already on the device.");
            }
        };
        Executor executor = AnonymousClass0DC.A0A;
        return r4.A0D(r0, executor).A0D(new AnonymousClass0D4<Credentials, AnonymousClass0DC<Void>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass7 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Void> then(AnonymousClass0DC<Credentials> r6) {
                if (immutableSet.contains(Option.SKIP_CLAIMING)) {
                    return AnonymousClass0DC.A04(null);
                }
                String str = r6.A0G().mUserId;
                String str2 = r6.A0G().mAccessToken;
                if (((UserClassifier) AnonymousClass0J2.A03(10, 468, LoginComponents.this._UL_mInjectionContext)).A01()) {
                    return LoginComponents.this.claimDeviceAsync(str2, authAction);
                }
                return ((SecondaryUserEnroller) AnonymousClass0J2.A03(11, 378, LoginComponents.this._UL_mInjectionContext)).enrollAsync(str, str2, authAction);
            }
        }, executor).A0D(new AnonymousClass0D4<Void, AnonymousClass0DC<Void>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass6 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Void> then(AnonymousClass0DC<Void> r5) throws Exception {
                ((AuthDatastore) AnonymousClass0J2.A03(3, 17, LoginComponents.this._UL_mInjectionContext)).storeCredentials((Credentials) r4.A0G());
                return LoginComponents.this.runPostLoginTasksAsync(authAction, immutableSet.contains(Option.RELOGIN));
            }
        }, executor).A0A(new AnonymousClass0D4<Void, AnonymousClass0DC<Void>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass5 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Void> then(AnonymousClass0DC<Void> r6) throws Exception {
                if (!r6.A0K()) {
                    return r6;
                }
                Exception A0F = r6.A0F();
                if (!(A0F instanceof ApiError) && !(A0F instanceof MarshallableError)) {
                    ((IErrorReporter) AnonymousClass0J2.A03(5, 428, LoginComponents.this._UL_mInjectionContext)).A97(LoginComponents.TAG, "Unexpected error", A0F);
                }
                return AnonymousClass0DC.A03(A0F);
            }
        });
    }

    public AnonymousClass0DC<Credentials> loginAsync(String str, String str2, @Nullable String str3) {
        ((OculusPerformanceLogger) AnonymousClass0J2.A03(4, 326, this._UL_mInjectionContext)).markerStart(15400966);
        final AnonymousClass0DD r4 = new AnonymousClass0DD();
        ((ApiRequestManager) AnonymousClass0J2.A03(1, 407, this._UL_mInjectionContext)).post(new LoginRequest(str, str2, str3), new ApiCallback<LoginResponse>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass12 */

            @Override // com.oculus.http.core.base.ApiCallback
            public void onError(ApiError apiError) {
                AnonymousClass0NO.A0B(LoginComponents.TAG, "Failed to login", apiError);
                ((OculusPerformanceLogger) AnonymousClass0J2.A03(4, 326, LoginComponents.this._UL_mInjectionContext)).markerEnd(15400966, 3);
                r4.A01(apiError);
            }

            public void onResponse(LoginResponse loginResponse) {
                String str = loginResponse.uid;
                String str2 = loginResponse.access_token;
                if (AnonymousClass0NO.A01.A54(3)) {
                    LoginComponents.scrub(str);
                    LoginComponents.scrub(str2);
                }
                if (Strings.isNullOrEmpty(str) || "0".equals(str)) {
                    UnexpectedResponseError unexpectedResponseError = new UnexpectedResponseError();
                    r4.A01(unexpectedResponseError);
                    ((IErrorReporter) AnonymousClass0J2.A03(5, 428, LoginComponents.this._UL_mInjectionContext)).A97(LoginComponents.TAG, AnonymousClass006.A07("Unexpected userId: [", str, "]"), unexpectedResponseError);
                } else if (Strings.isNullOrEmpty(str2)) {
                    UnexpectedResponseError unexpectedResponseError2 = new UnexpectedResponseError();
                    r4.A01(unexpectedResponseError2);
                    ((IErrorReporter) AnonymousClass0J2.A03(5, 428, LoginComponents.this._UL_mInjectionContext)).A97(LoginComponents.TAG, AnonymousClass006.A07("Unexpected accessToken: [", str2, "]"), unexpectedResponseError2);
                } else {
                    r4.A02(new Credentials(str, str2));
                    ((OculusPerformanceLogger) AnonymousClass0J2.A03(4, 326, LoginComponents.this._UL_mInjectionContext)).markerEnd(15400966, 2);
                    return;
                }
                ((OculusPerformanceLogger) AnonymousClass0J2.A03(4, 326, LoginComponents.this._UL_mInjectionContext)).markerEnd(15400966, 3);
            }
        });
        return r4.A00;
    }

    public AnonymousClass0DC<Void> sendTwoFactorCode(String str, String str2) {
        ApiTaskCallback apiTaskCallback = new ApiTaskCallback();
        ((AuthMethods) AnonymousClass0J2.A03(2, 84, this._UL_mInjectionContext)).sendTwoFactorCodeViaMethod(str, str2, apiTaskCallback);
        return apiTaskCallback.mCompletionSource.A00;
    }

    public AnonymousClass0DC<LoginWithFbAuthResponse.AccountInfo> startFetchFbInfoForAccountLinkingAsync(String str, AuthAction authAction) {
        return ((FbAuthHelper) AnonymousClass0J2.A03(6, 503, this._UL_mInjectionContext)).fetchFbInfoForAccountLinkingAsync(str, authAction);
    }

    public AnonymousClass0DC<Void> startLoginWithFbAuthAsync(String str, boolean z, final AuthAction authAction) {
        final ImmutableSet immutableSet;
        if (z) {
            immutableSet = new SingletonImmutableSet(Option.RELOGIN);
        } else {
            immutableSet = RegularImmutableSet.A05;
        }
        return ((FbAuthHelper) AnonymousClass0J2.A03(6, 503, this._UL_mInjectionContext)).loginWithFbAuthAsync(str, authAction).A0D(new AnonymousClass0D4<LoginWithFbAuthResponse.LoginSession, AnonymousClass0DC<Void>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass3 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Void> then(AnonymousClass0DC<LoginWithFbAuthResponse.LoginSession> r6) {
                LoginWithFbAuthResponse.LoginSession A0G = r6.A0G();
                return LoginComponents.this.startLoginAsync(A0G.userId, A0G.accessToken, immutableSet, authAction);
            }
        }, AnonymousClass0DC.A0A);
    }

    public AnonymousClass0DC<Void> startVerifyLoginAsync(@Nullable String str, String str2, @Nullable String str3, @Nullable String str4, boolean z) {
        final ImmutableSet immutableSet;
        if (z) {
            immutableSet = new SingletonImmutableSet(Option.RELOGIN);
        } else {
            immutableSet = RegularImmutableSet.A05;
        }
        return verifyLoginAsync(str, str2, str3, str4).A0A(new AnonymousClass0D4<Credentials, AnonymousClass0DC<Void>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass4 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Void> then(AnonymousClass0DC<Credentials> r4) {
                return LoginComponents.this.completeLoginAsync(r4, immutableSet, AuthAction.unknown());
            }
        });
    }

    public AnonymousClass0DC<Credentials> verifyLoginAsync(@Nullable String str, String str2, @Nullable String str3, @Nullable String str4) {
        final AnonymousClass0DD r3 = new AnonymousClass0DD();
        if (!TextUtils.isEmpty(str3)) {
            ((AuthMethods) AnonymousClass0J2.A03(2, 84, this._UL_mInjectionContext)).verifyTwoFactorCode(str, str2, str4, new ApiCallback<TwoFactorVerifyResponse>() {
                /* class com.oculus.auth.components.LoginComponents.AnonymousClass13 */

                @Override // com.oculus.http.core.base.ApiCallback
                public void onError(ApiError apiError) {
                    AnonymousClass0NO.A0E(LoginComponents.TAG, "Two factor verification failed with error: %s", apiError.getMessage());
                    r3.A01(apiError);
                }

                public void onResponse(TwoFactorVerifyResponse twoFactorVerifyResponse) {
                    r3.A02(new Credentials(twoFactorVerifyResponse.uid, twoFactorVerifyResponse.access_token));
                }
            });
        } else {
            ((AuthMethods) AnonymousClass0J2.A03(2, 84, this._UL_mInjectionContext)).verifyLogin(str, str2, str4, new ApiCallback<LoginResponse>() {
                /* class com.oculus.auth.components.LoginComponents.AnonymousClass14 */

                @Override // com.oculus.http.core.base.ApiCallback
                public void onError(ApiError apiError) {
                    AnonymousClass0NO.A0E(LoginComponents.TAG, "Login approvals failed with error: %s", apiError.getMessage());
                    r3.A01(apiError);
                }

                public void onResponse(LoginResponse loginResponse) {
                    r3.A02(new Credentials(loginResponse.uid, loginResponse.access_token));
                }
            });
        }
        return r3.A00;
    }

    @Inject
    public LoginComponents(AbstractC06640p5 r3) {
        this._UL_mInjectionContext = new AnonymousClass0QC(13, r3);
    }

    private AnonymousClass0DC<Credentials> fetchUserAsync(final String str) {
        final long elapsedRealtime = SystemClock.elapsedRealtime();
        final AnonymousClass0DD r6 = new AnonymousClass0DD();
        ((ApiRequestManager) AnonymousClass0J2.A03(1, 407, this._UL_mInjectionContext)).post(new MyUserProfileRequest(str), new ApiCallback<MyUserProfileResponse>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass15 */

            @Override // com.oculus.http.core.base.ApiCallback
            public void onError(ApiError apiError) {
                AnonymousClass0NO.A0B(LoginComponents.TAG, String.format(Locale.US, "Failed to fetch user [%dms]", Long.valueOf(SystemClock.elapsedRealtime() - elapsedRealtime)), apiError);
                r6.A01(apiError);
            }

            public void onResponse(MyUserProfileResponse myUserProfileResponse) {
                SystemClock.elapsedRealtime();
                r6.A02(new Credentials(myUserProfileResponse.viewer.user.id, str));
            }
        });
        return r6.A00;
    }

    /* access modifiers changed from: private */
    /* access modifiers changed from: public */
    private AnonymousClass0DC<Void> startLoginAsync(@Nullable String str, String str2, final ImmutableSet<Option> immutableSet, final AuthAction authAction) {
        AnonymousClass0DC<Credentials> fetchUserAsync;
        if (str != null) {
            fetchUserAsync = AnonymousClass0DC.A04(new Credentials(str, str2));
        } else {
            fetchUserAsync = fetchUserAsync(str2);
        }
        return fetchUserAsync.A0A(new AnonymousClass0D4<Credentials, AnonymousClass0DC<Void>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass2 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Void> then(AnonymousClass0DC<Credentials> r4) {
                return LoginComponents.this.completeLoginAsync(r4, immutableSet, authAction);
            }
        });
    }

    public AnonymousClass0DC<Void> startLoginAsync(@Nullable String str, String str2, AuthAction authAction) {
        return startLoginAsync(str, str2, new SingletonImmutableSet(Option.SKIP_CLAIMING), authAction);
    }

    public AnonymousClass0DC<Void> startLoginAsync(String str, String str2, @Nullable String str3, final ImmutableSet<Option> immutableSet, final AuthAction authAction) {
        return loginAsync(str, str2, str3).A0A(new AnonymousClass0D4<Credentials, AnonymousClass0DC<Void>>() {
            /* class com.oculus.auth.components.LoginComponents.AnonymousClass1 */

            @Override // X.AnonymousClass0D4
            public AnonymousClass0DC<Void> then(AnonymousClass0DC<Credentials> r4) {
                return LoginComponents.this.completeLoginAsync(r4, immutableSet, authAction);
            }
        });
    }
}
