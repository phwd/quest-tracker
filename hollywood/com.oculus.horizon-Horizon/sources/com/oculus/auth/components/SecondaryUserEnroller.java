package com.oculus.auth.components;

import X.AbstractC06640p5;
import X.AnonymousClass0D4;
import X.AnonymousClass0DC;
import X.AnonymousClass0I1;
import X.AnonymousClass0J2;
import X.AnonymousClass0NO;
import X.AnonymousClass0QC;
import X.AnonymousClass0p1;
import X.AnonymousClass117;
import X.C003008y;
import X.C01020Iw;
import android.content.Context;
import android.os.RemoteException;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.oculus.userserver.api.AccountAlreadyOnDeviceException;
import com.oculus.userserver.api.AccountConflictException;
import com.oculus.userserver.api.ExceptionUtils;
import com.oculus.userserver.api.OculusUserManager;
import com.oculus.userserver.api.inject.OculusUserManagerProvider;
import com.squareup.okhttp.internal.DiskLruCache;
import java.util.concurrent.Callable;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_util_device_DeviceUtils_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_HorizonDsatHelper_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_userserver_api_inject_OculusUserManagerProvider_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_auth_components_AuthComponentRunner_ULSEP_BINDING_ID"})
public class SecondaryUserEnroller {
    public static final String TAG = "SecondaryUserEnroller";
    public AnonymousClass0QC _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final AnonymousClass0p1 _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_components_SecondaryUserEnroller_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C003008y(378, r2);
    }

    @AutoGeneratedAccessMethod
    public static final SecondaryUserEnroller _UL__ULSEP_com_oculus_auth_components_SecondaryUserEnroller_ULSEP_ACCESS_METHOD(AbstractC06640p5 r1) {
        return (SecondaryUserEnroller) AnonymousClass117.A00(378, r1);
    }

    @AutoGeneratedFactoryMethod
    public static final SecondaryUserEnroller _UL__ULSEP_com_oculus_auth_components_SecondaryUserEnroller_ULSEP_FACTORY_METHOD(AbstractC06640p5 r1) {
        return new SecondaryUserEnroller(r1);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_components_SecondaryUserEnroller_ULGT__ULSEP_ACCESS_METHOD(AbstractC06640p5 r2) {
        return new C01020Iw(378, r2);
    }

    /* access modifiers changed from: private */
    /* access modifiers changed from: public */
    private AnonymousClass0DC<Void> registerLoginAsync(final String str, final String str2, AuthAction authAction) {
        return ((AuthComponentRunner) AnonymousClass0J2.A03(3, 6, this._UL_mInjectionContext)).runAsync(AnonymousClass0DC.A06(new Callable<Void>() {
            /* class com.oculus.auth.components.SecondaryUserEnroller.AnonymousClass2 */

            @Override // java.util.concurrent.Callable
            public Void call() throws MarshallableError {
                try {
                    OculusUserManager oculusUserManager = new OculusUserManager((Context) AnonymousClass0J2.A03(0, 294, ((OculusUserManagerProvider) AnonymousClass0J2.A03(2, 116, SecondaryUserEnroller.this._UL_mInjectionContext))._UL_mInjectionContext));
                    try {
                        try {
                            OculusUserManager.A00(oculusUserManager).A85(str, str2);
                            oculusUserManager.close();
                            return null;
                        } catch (IllegalStateException e) {
                            ExceptionUtils.A00(e, AccountConflictException.class);
                            ExceptionUtils.A00(e, AccountAlreadyOnDeviceException.class);
                            throw e;
                        }
                    } catch (Throwable unused) {
                    }
                    throw th;
                } catch (AccountConflictException e2) {
                    throw new MarshallableError(-18, e2);
                } catch (AccountAlreadyOnDeviceException e3) {
                    throw new MarshallableError(-17, e3);
                } catch (RemoteException e4) {
                    throw new GenericError(e4);
                }
            }
        }), AuthLogger.COMPONENT_REGISTER_LOGIN, authAction);
    }

    public AnonymousClass0DC<Void> enrollAsync(final String str, String str2, final AuthAction authAction) {
        if (!AnonymousClass0I1.A02("debug.oculus.disable_device_identity_features").equals(DiskLruCache.VERSION_1)) {
            return ((HorizonDsatHelper) AnonymousClass0J2.A03(1, 347, this._UL_mInjectionContext)).produceTokenAsync(str2, authAction).A0D(new AnonymousClass0D4<String, AnonymousClass0DC<Void>>() {
                /* class com.oculus.auth.components.SecondaryUserEnroller.AnonymousClass1 */

                @Override // X.AnonymousClass0D4
                public AnonymousClass0DC<Void> then(AnonymousClass0DC<String> r5) {
                    return SecondaryUserEnroller.this.registerLoginAsync(str, r5.A0G(), authAction);
                }
            }, AnonymousClass0DC.A0A);
        }
        AnonymousClass0NO.A09(TAG, "Device identity features disabled");
        return registerLoginAsync(str, "", authAction);
    }

    @Inject
    public SecondaryUserEnroller(AbstractC06640p5 r3) {
        this._UL_mInjectionContext = new AnonymousClass0QC(4, r3);
    }
}
