package com.oculus.deviceconfigservice;

import X.AnonymousClass0J5;
import X.AnonymousClass0NO;
import X.AnonymousClass1aT;
import X.AnonymousClass1ao;
import android.content.Context;
import android.content.pm.PackageManager;
import com.facebook.infer.annotation.Nullsafe;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.ForAppContext;
import com.facebook.inject.InjectorModule;
import com.facebook.inject.ProviderMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.oculus.http.useragent.UserAgentAppVersionMap;
import java.util.HashMap;
import java.util.Map;
import javax.annotation.Nullable;
import org.json.JSONObject;

@InjectorModule
@Nullsafe(Nullsafe.Mode.LOCAL)
public class MobileConfigInitModule extends AnonymousClass0J5 {
    public static final String TAG = "MobileConfigInitModule";
    public static Map<AccessorKey, AnonymousClass1aT> sAccessors = new HashMap();

    public static class AccessorKey {
        public final AnonymousClass1ao mAccessor;
        public final Context mContext;

        public final int hashCode() {
            return 0;
        }

        public final boolean equals(@Nullable Object obj) {
            if (!(obj instanceof AccessorKey)) {
                return false;
            }
            AccessorKey accessorKey = (AccessorKey) obj;
            if (this.mAccessor == accessorKey.mAccessor && this.mContext == accessorKey.mContext) {
                return true;
            }
            return false;
        }

        public AccessorKey(AnonymousClass1ao r1, Context context) {
            this.mAccessor = r1;
            this.mContext = context;
        }
    }

    @AutoGeneratedBinder
    public static class AutoGeneratedBindingsForMobileConfigInitModule {
    }

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_facebook_mobileconfig_interfaces_MobileConfigServiceHelperInterface_ULSEP_BINDING_ID = 306;
        public static final int _UL__ULSEP_com_facebook_mobileconfigservice_mobileconfigaccessor_MobileConfigAccessorDecorator_ULSEP_BINDING_ID = 348;
        public static final int _UL__ULSEP_com_oculus_deviceconfigservice_DeviceConfigCallerVerifier_ULSEP_BINDING_ID = 424;
        public static final int _UL__ULSEP_com_oculus_deviceconfigservice_MobileConfigAppAwareAccessorDecorator_ULSEP_BINDING_ID = 2084;
        public static final int _UL__ULSEP_com_oculus_deviceconfigservice_MobileConfigServiceHelper_ULSEP_BINDING_ID = 454;
        public static final int _UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_useragent_UserAgentAppVersionMap_ULSEP_BINDING_ID = 18;
    }

    @ProviderMethod
    public static synchronized AnonymousClass1aT A00(AnonymousClass1ao r4, @ForAppContext Context context) {
        AnonymousClass1aT r1;
        synchronized (MobileConfigInitModule.class) {
            AccessorKey accessorKey = new AccessorKey(r4, context);
            r1 = sAccessors.get(accessorKey);
            if (r1 == null) {
                if (!sAccessors.isEmpty()) {
                    AnonymousClass0NO.A08(TAG, "Unexpected multiple MobileConfigAccessorDecorator implementations");
                }
                r1 = new MobileConfigAppAwareAccessorDecorator(r4, context);
                sAccessors.put(accessorKey, r1);
            }
        }
        return r1;
    }

    @UserAgentAppVersionMap
    @ProviderMethod
    public static String A01(@ForAppContext Context context) {
        HashMap hashMap = new HashMap();
        PackageManager packageManager = context.getPackageManager();
        if (packageManager == null) {
            AnonymousClass0NO.A08(TAG, "No package manager found.");
            return "";
        }
        DeviceConfigVerifiedApps[] values = DeviceConfigVerifiedApps.values();
        for (DeviceConfigVerifiedApps deviceConfigVerifiedApps : values) {
            try {
                hashMap.put(deviceConfigVerifiedApps.getAppId(), packageManager.getPackageInfo(deviceConfigVerifiedApps.getPackageName(), 0).versionName);
            } catch (PackageManager.NameNotFoundException unused) {
            }
        }
        return new JSONObject(hashMap).toString();
    }
}
