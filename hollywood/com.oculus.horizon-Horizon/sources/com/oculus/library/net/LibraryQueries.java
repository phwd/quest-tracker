package com.oculus.library.net;

public class LibraryQueries {
    public static final String ACTIVE_ENTITLEMENT_OSS_QUERY = "query ActiveEntitlement($machine_id: ID, $imageScale: Float){entitlements: me {  active_android_entitlements {nodes {      grant_reason,      grant_time,      expiration_time,id, last_used, signed_token(machine_id: $machine_id),      item {        id,        display_name,        ... on Application {          comfort_rating,          category,          grouping {            id,            cloud_file_is_enabled,          }          organization {            id          }          cover_square_image(size: \"360x360          \", scale: $imageScale) {            name,            uri,            scale,          },          cover_landscape_image(size: \"720x405          \", scale: $imageScale) {            name,            uri,            scale,          },          small_landscape_image(size: \"360x120          \", scale: $imageScale) {            name,            uri,            scale,          }          thumbnail: cover_landscape_image(size: \"180x101          \", scale: $imageScale) {            name,            uri,            scale,          },          hero_image(size: \"1029x308          \", scale: $imageScale) {            name,            uri,            scale,          },          latest_supported_binary {            ... on AndroidBinary {              id,              package_name,              head_tracking,              version,              version_code,              target_android_sdk_version,              permissions,              can_use_external_storage,              size,            },          },          supported_input_devices_list {            tag,            name,          },          app_viewer_id,          microphone_usage,          min_recommended_version_code,          min_required_version_code,          is_demo_of {            id,          },          platform,          share_capabilities,          supported_player_modes,          internet_connection,          is_concept,          is_tv_app,          is_test,          system_ui_as_overlay_mode,          auto_update_mode,          is_duc_non_compliant,          can_access_feature_keys,          environment_source {            id,            display_name,          }        }      }    }  }}}".replace("  ", "");
    public static final String ACTIVE_ENTITLEMENT_V2_OSS_QUERY = "query ActiveEntitlement($machine_id: ID, $imageScale: Float){entitlements: viewer {  entitlements {nodes {      grant_reason,      grant_time,      expiration_time,id, last_used, signed_token(machine_id: $machine_id),      item {        id,        display_name,        ... on Application {          comfort_rating,          category,          grouping {            id,            cloud_file_is_enabled,          }          organization {            id          }          cover_square_image(size: \"360x360          \", scale: $imageScale) {            name,            uri,            scale,          },          cover_landscape_image(size: \"720x405          \", scale: $imageScale) {            name,            uri,            scale,          },          small_landscape_image(size: \"360x120          \", scale: $imageScale) {            name,            uri,            scale,          }          thumbnail: cover_landscape_image(size: \"180x101          \", scale: $imageScale) {            name,            uri,            scale,          },          hero_image(size: \"1029x308          \", scale: $imageScale) {            name,            uri,            scale,          },          latest_supported_binary {            ... on AndroidBinary {              id,              package_name,              head_tracking,              version,              version_code,              target_android_sdk_version,              permissions,              can_use_external_storage,              size,            },          },          supported_input_devices_list {            tag,            name,          },          app_viewer_id,          microphone_usage,          min_recommended_version_code,          min_required_version_code,          is_demo_of {            id,          },          platform,          share_capabilities,          supported_player_modes,          internet_connection,          is_concept,          is_tv_app,          is_test,          system_ui_as_overlay_mode,          auto_update_mode,          is_duc_non_compliant,          can_access_feature_keys,          environment_source {            id,            display_name,          }        }      }    }  }}}".replace("  ", "");
    public static final String APP_INFO_OSS_QUERY = "query AppInfo($params: AppBinaryInfoArgs!) {app_binary_info (args: $params) {  ... on AppBinaryInfoList {    info {      ... on AppBinaryInfo {        binary {          ... on AndroidBinary {            obb_binary {              file_name              checksum_hash            }            asset_files {              edges {                node {                  ... on AssetFile {                    file_name                    checksum_hash                    is_required                  }                }              }            }          }        }      }    }  }}}";
    public static final String ENTITLEMENT_SCHEMA = "nodes {      grant_reason,      grant_time,      expiration_time,id, last_used, signed_token(machine_id: $machine_id),      item {        id,        display_name,        ... on Application {          comfort_rating,          category,          grouping {            id,            cloud_file_is_enabled,          }          organization {            id          }          cover_square_image(size: \"360x360          \", scale: $imageScale) {            name,            uri,            scale,          },          cover_landscape_image(size: \"720x405          \", scale: $imageScale) {            name,            uri,            scale,          },          small_landscape_image(size: \"360x120          \", scale: $imageScale) {            name,            uri,            scale,          }          thumbnail: cover_landscape_image(size: \"180x101          \", scale: $imageScale) {            name,            uri,            scale,          },          hero_image(size: \"1029x308          \", scale: $imageScale) {            name,            uri,            scale,          },          latest_supported_binary {            ... on AndroidBinary {              id,              package_name,              head_tracking,              version,              version_code,              target_android_sdk_version,              permissions,              can_use_external_storage,              size,            },          },          supported_input_devices_list {            tag,            name,          },          app_viewer_id,          microphone_usage,          min_recommended_version_code,          min_required_version_code,          is_demo_of {            id,          },          platform,          share_capabilities,          supported_player_modes,          internet_connection,          is_concept,          is_tv_app,          is_test,          system_ui_as_overlay_mode,          auto_update_mode,          is_duc_non_compliant,          can_access_feature_keys,          environment_source {            id,            display_name,          }        }      }    }  }}}";
    public static final String UPDATE_INFO_OSS_QUERY = "query UpdateInfo($params: AppBinaryUpdatesArgs!) {app_binary_updates (args: $params) {  ... on AppBinaryUpdateList {    updates {      app_id,      new_binary {        ... on AndroidBinary { id, uri, size,          version_code,          apk_cert_signature,          external_signatures,          checksum_hash,          obb_binary {            ... on OBBBinary { id, uri, size,              checksum_hash,            },          },          asset_files {            edges {              node {                ... on AssetFile { id, uri, size,                  file_name,                  is_required,                  checksum_hash,                },              },            },          },        },      },      patch { id, uri, size,        checksum_hash,        obb_patch {          ... on AppBinaryPatch { id, uri, size,            checksum_hash,            },        },        asset_file_patches {          ... on AppBinaryPatch {            checksum_hash,            is_persistent, id, uri, size,            source_binary {              ... on AssetFile {                file_name,                is_required,              },            },          },        },      },    },  },},}".replace("  ", "");
}
