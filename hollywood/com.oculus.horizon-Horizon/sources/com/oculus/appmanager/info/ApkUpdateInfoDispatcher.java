package com.oculus.appmanager.info;

import X.AbstractC06640p5;
import X.AnonymousClass0Pi;
import X.AnonymousClass117;
import com.facebook.inject.ApplicationScoped;
import com.facebook.internal.FacebookRequestErrorClassification;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.oculus.dispatcher.ListenerDispatcher;
import com.oculus.errorreporting.interfaces.IErrorReporter;
import com.oculus.errorreporting.interfaces.InterfacesModule;
import java.util.Set;
import javax.inject.Inject;

@Dependencies({"_UL__ULSEP_com_oculus_errorreporting_interfaces_IErrorReporter_ULSEP_BINDING_ID", "_UL__ULSEP_java_util_Set_ULLT_com_oculus_appmanager_info_ApkUpdateInfoListener_ULGT__ULSEP_BINDING_ID"})
@ApplicationScoped
public class ApkUpdateInfoDispatcher extends ListenerDispatcher<ApkUpdateInfoListener> {
    public static final String ERROR_CATEGORY = "ApkUpdateInfoDispatcher";
    public static volatile ApkUpdateInfoDispatcher _UL__ULSEP_com_oculus_appmanager_info_ApkUpdateInfoDispatcher_ULSEP_INSTANCE;
    public final IErrorReporter mErrorReporter;

    @AutoGeneratedAccessMethod
    public static final ApkUpdateInfoDispatcher A00(AbstractC06640p5 r1) {
        return (ApkUpdateInfoDispatcher) AnonymousClass117.A00(FacebookRequestErrorClassification.EC_INVALID_SESSION, r1);
    }

    @AutoGeneratedFactoryMethod
    public static final ApkUpdateInfoDispatcher A01(AbstractC06640p5 r5) {
        if (_UL__ULSEP_com_oculus_appmanager_info_ApkUpdateInfoDispatcher_ULSEP_INSTANCE == null) {
            synchronized (ApkUpdateInfoDispatcher.class) {
                AnonymousClass0Pi A00 = AnonymousClass0Pi.A00(_UL__ULSEP_com_oculus_appmanager_info_ApkUpdateInfoDispatcher_ULSEP_INSTANCE, r5);
                if (A00 != null) {
                    try {
                        AbstractC06640p5 applicationInjector = r5.getApplicationInjector();
                        _UL__ULSEP_com_oculus_appmanager_info_ApkUpdateInfoDispatcher_ULSEP_INSTANCE = new ApkUpdateInfoDispatcher(InterfacesModule.A00(applicationInjector), InfoModule.A00(applicationInjector));
                    } finally {
                        A00.A01();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_appmanager_info_ApkUpdateInfoDispatcher_ULSEP_INSTANCE;
    }

    @Inject
    public ApkUpdateInfoDispatcher(IErrorReporter iErrorReporter, Set<ApkUpdateInfoListener> set) {
        super(set);
        this.mErrorReporter = iErrorReporter;
    }
}
