package com.oculus.http.core;

import X.AbstractC06640p5;
import X.AbstractC08800yc;
import X.AbstractC08810yd;
import X.AbstractC08820ye;
import X.AnonymousClass0QC;
import X.AnonymousClass0X1;
import X.AnonymousClass117;
import X.C08780ya;
import X.C08790yb;
import X.C08830yf;
import X.C08870ys;
import X.C09020zD;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.Map;
import retrofit.converter.Converter;
import retrofit.converter.GsonConverter;
import retrofit.mime.TypedOutput;

@Dependencies({"_UL__ULSEP_com_oculus_logging_utils_EventManager_ULSEP_BINDING_ID", "_UL__ULSEP_java_lang_Boolean_ULSEP_com_oculus_http_core_annotations_ReportGraphBackendException_ULSEP_BINDING_ID"})
public class ApiResponseConverter implements Converter {
    public static final String EVENT_BACKEND_EXCEPTION = "oculus_graph_backend_exception";
    public static final String EXTRA_EXCEPTION_CLASS = "exception_class";
    public static final String EXTRA_EXCEPTION_MESSAGE = "exception_message";
    public static final String EXTRA_EXCEPTION_STACK_TRACE = "exception_stack_trace";
    public static final String EXTRA_MESSAGE = "message";
    public static final String EXTRA_PATH = "path";
    public static final String EXTRA_SEVERITY = "severity";
    public static final String TAG = "ApiResponseConverter";
    public AnonymousClass0QC _UL_mInjectionContext;
    public final GsonConverter mGsonConverter;
    public final GsonConverter mGsonSingleMapConverter;

    public class BackendException {
        @SerializedName("class")
        public final String cls;
        public final String message;
        public final String[] stack_trace;
        public final /* synthetic */ ApiResponseConverter this$0;
    }

    public class Error {
        public final BackendException exception;
        public final String message;
        public final String[] path;
        public final String severity;
        public final /* synthetic */ ApiResponseConverter this$0;
    }

    public static class SingleEntryResponseWithErrorSupport<T> {
        public T data;
        public Error[] errors;
    }

    public static class SingleEntryResponseWithErrorSupportType implements ParameterizedType {
        public final Type mActualTypeArgument;

        public final Type[] getActualTypeArguments() {
            return new Type[]{this.mActualTypeArgument};
        }

        public final Type getOwnerType() {
            return null;
        }

        public SingleEntryResponseWithErrorSupportType(Type type) {
            this.mActualTypeArgument = type;
        }

        public final Type getRawType() {
            return SingleEntryResponseWithErrorSupport.class;
        }
    }

    @AutoGeneratedAccessMethod
    public static final ApiResponseConverter A00(AbstractC06640p5 r1) {
        return (ApiResponseConverter) AnonymousClass117.A00(254, r1);
    }

    @AutoGeneratedFactoryMethod
    public static final ApiResponseConverter A01(AbstractC06640p5 r1) {
        return new ApiResponseConverter(r1);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:16:0x0043, code lost:
        if (((java.lang.Class) r15).isAnnotationPresent(com.oculus.http.core.annotations.SingleEntryMapResponse.class) == false) goto L_0x0045;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:3:0x000e, code lost:
        if (((java.lang.Class) r15).isAnnotationPresent(com.oculus.http.core.annotations.SingleEntryMapResponse.class) == false) goto L_0x0010;
     */
    @Override // retrofit.converter.Converter
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final java.lang.Object fromBody(retrofit.mime.TypedInput r14, java.lang.reflect.Type r15) throws retrofit.converter.ConversionException {
        /*
        // Method dump skipped, instructions count: 255
        */
        throw new UnsupportedOperationException("Method not decompiled: com.oculus.http.core.ApiResponseConverter.fromBody(retrofit.mime.TypedInput, java.lang.reflect.Type):java.lang.Object");
    }

    @Override // retrofit.converter.Converter
    public final TypedOutput toBody(Object obj) {
        return this.mGsonConverter.toBody(obj);
    }

    @Inject
    public ApiResponseConverter(AbstractC06640p5 r6) {
        this._UL_mInjectionContext = new AnonymousClass0QC(2, r6);
        final C08780ya r4 = new C08780ya();
        AnonymousClass1 r3 = new AbstractC08810yd<SingleEntryResponseWithErrorSupport>() {
            /* class com.oculus.http.core.ApiResponseConverter.AnonymousClass1 */

            /* Return type fixed from 'java.lang.Object' to match base method */
            @Override // X.AbstractC08810yd
            public final SingleEntryResponseWithErrorSupport A2F(AbstractC08820ye r7, Type type, AbstractC08800yc r9) throws C08830yf {
                Object A00;
                SingleEntryResponseWithErrorSupport singleEntryResponseWithErrorSupport = new SingleEntryResponseWithErrorSupport();
                for (Map.Entry<String, AbstractC08820ye> entry : r7.A02().A00.entrySet()) {
                    if (entry.getKey().equals("errors")) {
                        C08780ya r3 = r4;
                        AbstractC08820ye value = entry.getValue();
                        Class<Error[]> cls = Error[].class;
                        if (value == null) {
                            A00 = null;
                        } else {
                            A00 = C08780ya.A00(r3, new AnonymousClass0X1(value), cls);
                        }
                        Class<?> cls2 = C09020zD.A00.get(cls);
                        if (cls2 != null) {
                            cls = cls2;
                        }
                        singleEntryResponseWithErrorSupport.errors = cls.cast(A00);
                    } else if (singleEntryResponseWithErrorSupport.data == null) {
                        C08780ya r32 = r4;
                        AbstractC08820ye value2 = entry.getValue();
                        singleEntryResponseWithErrorSupport.data = value2 == null ? null : (T) C08780ya.A00(r32, new AnonymousClass0X1(value2), ((ParameterizedType) type).getActualTypeArguments()[0]);
                    } else {
                        throw new C08830yf("Encountered too many root objects");
                    }
                }
                return singleEntryResponseWithErrorSupport;
            }
        };
        C08790yb r2 = new C08790yb();
        boolean z = r3 instanceof AbstractC08810yd;
        C08870ys.A00(!z ? false : true);
        if (z) {
            r2.A04.add(new TreeTypeAdapter$SingleTypeFactory(r3));
        }
        this.mGsonSingleMapConverter = new GsonConverter(r2.A00());
        this.mGsonConverter = new GsonConverter(r4);
    }
}
