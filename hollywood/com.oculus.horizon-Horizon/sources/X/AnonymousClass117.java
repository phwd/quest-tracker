package X;

import X.AnonymousClass0p1;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.os.Build;
import android.text.TextUtils;
import androidx.core.app.NotificationCompat$WearableExtender;
import com.facebook.GraphRequest;
import com.facebook.acra.util.minidump.MinidumpReader;
import com.facebook.gk.sessionless.GkSessionlessModule;
import com.facebook.internal.FacebookRequestErrorClassification;
import com.facebook.tigon.oktigon.OkTigonService;
import com.facebook.tigon.oktigon.OkTigonServiceHolder;
import com.facebook.ultralight.AutoGeneratedSwitch;
import com.facebook.ultralight.AutoGeneratedSwitchMasterMethod;
import com.oculus.aidl.OVRServiceInterface;
import com.oculus.android.AndroidModule;
import com.oculus.android.os.internal.UserHandleInternal;
import com.oculus.antipiracy.AntiPiracyManager;
import com.oculus.antipiracy.AntiPiracyMethods;
import com.oculus.antipiracy.AntiPiracyPushHelper;
import com.oculus.antipiracy.AntiPiracyServiceScheduler;
import com.oculus.antipiracy.AntiPiracySettingInitListener;
import com.oculus.antipiracy.GraphQLQuery;
import com.oculus.app.standalone.StandaloneApplicationLike;
import com.oculus.appmanager.downloader.OculusFileDownloader;
import com.oculus.appmanager.downloader.progress.OculusDownloadProgressTracker;
import com.oculus.appmanager.downloader.progress.OuculusDownloadProgressTrackerModule;
import com.oculus.appmanager.info.ApkUpdateInfoDispatcher;
import com.oculus.appmanager.info.ApkUpdateInfoProvider;
import com.oculus.appmanager.info.ApkUpdateStorage;
import com.oculus.appmanager.info.InfoUtils;
import com.oculus.appmanager.info.database.ApkUpdateDatabaseSupplier;
import com.oculus.appmanager.info.database.ApkUpdateExtrasManager;
import com.oculus.appmanager.info.schema.ApkUpdateExtrasTable;
import com.oculus.appmanager.info.schema.ApkUpdateSchemaPart;
import com.oculus.appmanager.info.schema.ApkUpdateTable;
import com.oculus.appmanager.installer.analytics.InstallerAnalytics;
import com.oculus.appmanager.installer.broadcast.AssetBroadcastDispatch;
import com.oculus.appmanager.installer.common.CryptoMethods;
import com.oculus.appmanager.installer.common.InstallerFileUtils;
import com.oculus.appmanager.patcher.Patcher;
import com.oculus.appmanager.patcher.RsyncNativeLibrary;
import com.oculus.appmanager.verifier.TrustedAppVerifier;
import com.oculus.auth.api.ApiModule;
import com.oculus.auth.api.AuthMethods;
import com.oculus.auth.api.FBAuthMethods;
import com.oculus.auth.api.FacebookAuthorizationInterceptor;
import com.oculus.auth.components.AppScopedTokenHelper;
import com.oculus.auth.components.AuthComponentRunner;
import com.oculus.auth.components.AuthLogger;
import com.oculus.auth.components.BackendUpdater;
import com.oculus.auth.components.DeviceClaimHelper;
import com.oculus.auth.components.DeviceOwnershipHelper;
import com.oculus.auth.components.DsatHelper;
import com.oculus.auth.components.FBLoginComponents;
import com.oculus.auth.components.FbAuthHelper;
import com.oculus.auth.components.HorizonDsatHelper;
import com.oculus.auth.components.LoginComponents;
import com.oculus.auth.components.LogoutComponents;
import com.oculus.auth.components.SecondaryUserEnroller;
import com.oculus.auth.components.UserInfoFetcher;
import com.oculus.auth.credentials.Credentials;
import com.oculus.auth.credentials.CredentialsManager;
import com.oculus.auth.credentials.CredentialsModule;
import com.oculus.auth.device.DeviceAuthTokenStore;
import com.oculus.auth.device.noop_subscriber.NoOpDeviceAuthTokenSubscriber;
import com.oculus.auth.deviceownership.EnsureDeviceOwnershipJobScheduler;
import com.oculus.auth.receiver.LoginHandlersRunner;
import com.oculus.auth.receiver.LogoutHandlersRunner;
import com.oculus.auth.service.AuthManager;
import com.oculus.auth.service.AuthModule;
import com.oculus.auth.service.AuthTrustedAppVerifier;
import com.oculus.auth.service.FacebookAuthManager;
import com.oculus.auth.service.passwordencryption.OculusPasswordEncryptionKeyFetcher;
import com.oculus.auth.service.passwordencryption.OculusPasswordEncryptionKeyStore;
import com.oculus.auth.service.passwordencryption.PasswordEncryptionHelper;
import com.oculus.auth.service.passwordencryption.PasswordEncryptionLogger;
import com.oculus.auth.service.passwordencryption.PasswordEncryptionModule;
import com.oculus.auth.settings.AuthSettings;
import com.oculus.auth.storage.AuthDatastore;
import com.oculus.auth.subscriber.LoginDeviceAuthTokenSubscriber;
import com.oculus.auth.subscriber.LoginDeviceAuthTokenSubscriberModule;
import com.oculus.auth.util.AccessTokenUtils;
import com.oculus.authapi.inject.CallerInfoProviderImpl;
import com.oculus.authapi.inject.OVRAuthModule;
import com.oculus.base.app.AppInfo;
import com.oculus.base.app.AppInfoModule;
import com.oculus.common.init.AppInitModule;
import com.oculus.common.init.impl.AppInitializer;
import com.oculus.common.packagescache.PackageManagerUtils;
import com.oculus.config.ConfigController;
import com.oculus.config.ConfigModule;
import com.oculus.config.duc.DUCHelper;
import com.oculus.config.duc.DUCModule;
import com.oculus.config.service.GkServiceCallerVerifier;
import com.oculus.config.trusted_user.TrustedUserModule;
import com.oculus.config.updater.ConfigUpdater;
import com.oculus.config.updater.ConfigUpdaterDumperPlugin;
import com.oculus.config.updater.ConfigUpdaterInit;
import com.oculus.config.updater.ConfigUpdaterJobScheduler;
import com.oculus.config.updater.ConfigUpdaterLoginHandler;
import com.oculus.config.updater.ConfigUpdaterLogoutHandler;
import com.oculus.config.updater.ConfigUpdaterMethods;
import com.oculus.config.updater.ConfigUpdaterModule;
import com.oculus.config.updater.logging.ConfigUpdaterLogger;
import com.oculus.coreapps.CoreAppManager;
import com.oculus.debug.DebugMode;
import com.oculus.defaultapps.DefaultAppsMethods;
import com.oculus.defaultapps.DefaultAppsPrefs;
import com.oculus.defaultapps.DefaultAppsSetupListener;
import com.oculus.defaultapps.DefaultAppsSetupManager;
import com.oculus.defaultapps.dumper.DefaultAppsDumperPlugin;
import com.oculus.defaultapps.graphql.DefaultAppsGraphQLQuery;
import com.oculus.deviceconfigservice.DeviceConfigCallerVerifier;
import com.oculus.deviceconfigservice.MobileConfigInitModule;
import com.oculus.deviceconfigservice.MobileConfigServiceHelper;
import com.oculus.downloader.contract.DownloaderContract;
import com.oculus.downloader.dispatcher.OculusDownloadListenerDispatcher;
import com.oculus.downloader.extras.DownloadExtras;
import com.oculus.downloader.init.DownloaderInit;
import com.oculus.downloader.progress.DownloadProgressTracker;
import com.oculus.dsatauth.DsatFetcher;
import com.oculus.durableiap.DurableIAPDatabaseSupplier;
import com.oculus.durableiap.DurableIAPJobScheduler;
import com.oculus.durableiap.DurableIAPSchemaPart;
import com.oculus.durableiap.DurableIAPStorage;
import com.oculus.durableiap.DurableIAPTable;
import com.oculus.durableiap.net.DurableIAPMethods;
import com.oculus.errorreporting.ErrorReportingModule;
import com.oculus.errorreporting.init.ErrorReporterLoginHandler;
import com.oculus.errorreporting.init.ErrorReporterLogoutHandler;
import com.oculus.errorreporting.interfaces.InterfacesModule;
import com.oculus.executors.ExecutorsModule;
import com.oculus.friendlistcontentprovider.FriendListContentProviderLogger;
import com.oculus.headlesshorizon.HeadlessHorizonModule;
import com.oculus.headlesshorizon.notifications.receivers.NotificationsLogger;
import com.oculus.headlesshorizon.notifications.receivers.SocialNotificationManager;
import com.oculus.headlesshorizon.remotelaunch.QueuedRemoteLaunchProcessor;
import com.oculus.headlesshorizon.social.MeManager;
import com.oculus.headlesshorizon.social.SocialJobScheduler;
import com.oculus.horizon.abuse_prevention.AbuseAVCapture;
import com.oculus.horizon.abuse_prevention.FileReceiverManager;
import com.oculus.horizon.abuse_prevention.VideoUploaderMethods;
import com.oculus.horizon.abuse_prevention.VideoUploaderServiceManager;
import com.oculus.horizon.abuse_prevention.interfaces.AbuseCaptureProvider;
import com.oculus.horizon.accountlinking.dropbox.DropboxAPIHelper;
import com.oculus.horizon.accountlinking.dropbox.DropboxAPIMethods;
import com.oculus.horizon.accountlinking.dropbox.DropboxAPIModule;
import com.oculus.horizon.accountlinking.dropbox.interceptor.DropboxAPIInterceptor;
import com.oculus.horizon.accountlinking.dropbox.interceptor.DropboxAuthorizationInterceptor;
import com.oculus.horizon.accountlinking.google.GoogleAPIHelper;
import com.oculus.horizon.accountlinking.google.GoogleAPIMethods;
import com.oculus.horizon.accountlinking.google.GoogleAPIModule;
import com.oculus.horizon.accountlinking.google.interceptor.GoogleAuthorizationInterceptor;
import com.oculus.horizon.api.ApiDispatcher;
import com.oculus.horizon.api.ApiRequestManager;
import com.oculus.horizon.auth.HorizonLoginHandler;
import com.oculus.horizon.auth.shared_datastore.HorizonAuthDatastore;
import com.oculus.horizon.auth.shared_datastore.HorizonCredentialsManager;
import com.oculus.horizon.auth.shared_datastore.HorizonCredentialsModule;
import com.oculus.horizon.auth.shared_datastore.HorizonCredentialsNotifier;
import com.oculus.horizon.camera.bitmap.CameraBitmapHelper;
import com.oculus.horizon.capture.CaptureDelegateFactory;
import com.oculus.horizon.capture.ScreenCapture;
import com.oculus.horizon.capture.SurfaceBroadcast;
import com.oculus.horizon.cast.CastAnalytics;
import com.oculus.horizon.cast.CastHTTPServerForWeb;
import com.oculus.horizon.cast.CastHTTPServerManagerProvider;
import com.oculus.horizon.cloudstorage2.CloudStorageLogger;
import com.oculus.horizon.cloudstorage2.CloudStorageManager;
import com.oculus.horizon.cloudstorage2.TaskProgressReporterProvider;
import com.oculus.horizon.cloudstorage2.callable.GetFileDownloadRequestsProvider;
import com.oculus.horizon.cloudstorage2.callable.UpdateAndRemoveFilesProvider;
import com.oculus.horizon.cloudstorage2.callable.UploadConflictDetectorProvider;
import com.oculus.horizon.cloudstorage2.callable.UploadVerifierProvider;
import com.oculus.horizon.cloudstorage2.callable.WriteMetadataToFileProvider;
import com.oculus.horizon.cloudstorage2.task.BuildConflictDataTaskProvider;
import com.oculus.horizon.cloudstorage2.task.DownloadMetadataTaskProvider;
import com.oculus.horizon.cloudstorage2.task.DownloadMetadataToFileTaskProvider;
import com.oculus.horizon.cloudstorage2.task.DownloadSyncTaskProvider;
import com.oculus.horizon.cloudstorage2.task.DownloadWildcardsTaskProvider;
import com.oculus.horizon.cloudstorage2.task.FileDownloadTaskProvider;
import com.oculus.horizon.cloudstorage2.task.FileUploadTaskProvider;
import com.oculus.horizon.cloudstorage2.task.ResolveConflictTaskProvider;
import com.oculus.horizon.cloudstorage2.task.UploadMutationTaskProvider;
import com.oculus.horizon.cloudstorage2.task.UploadSyncTaskProvider;
import com.oculus.horizon.endpoint.HorizonEndpointModule;
import com.oculus.horizon.events.time.EventTimeFormat;
import com.oculus.horizon.fbconnect.FBConnectConfiguration;
import com.oculus.horizon.fbconnect.FBConnectContentProvider;
import com.oculus.horizon.fbconnect.FBConnectDumperPlugin;
import com.oculus.horizon.fbconnect.FBConnectHelper;
import com.oculus.horizon.fbconnect.FBConnectInit;
import com.oculus.horizon.fbconnect.FBConnectLogger;
import com.oculus.horizon.fbconnect.FBConnectLoginHandler;
import com.oculus.horizon.fbconnect.FBConnectLogoutHandler;
import com.oculus.horizon.fbconnect.FBConnectMethods;
import com.oculus.horizon.fbconnect.FBConnectModule;
import com.oculus.horizon.foreground.ApplicationForegroundTracker;
import com.oculus.horizon.fresco.FrescoModule;
import com.oculus.horizon.fresco.init.FrescoInit;
import com.oculus.horizon.library.push.OVRLibraryPushHandler;
import com.oculus.horizon.linkedaccounts.LinkedAccountsManager;
import com.oculus.horizon.linkedaccounts.database.LinkedAccountsSQLiteHelper;
import com.oculus.horizon.linkedaccounts.dumper.LinkedAccountsDumperPlugin;
import com.oculus.horizon.linkedaccounts.provider.LinkedAccountsContentProviderLogger;
import com.oculus.horizon.linkedaccounts.provider.verifier.LinkedAccountsCallerVerifier;
import com.oculus.horizon.logging.HorizonForegroundListener;
import com.oculus.horizon.logging.OculusLogger;
import com.oculus.horizon.logging.init.OculusLoggerInit;
import com.oculus.horizon.media_session.MediaSessionLifecycleManager;
import com.oculus.horizon.mediaupload.MediaUploaderSyncServiceInit;
import com.oculus.horizon.mediaupload.dumper.MediaUploadDumperPlugin;
import com.oculus.horizon.notifications.core.NotificationBuilder;
import com.oculus.horizon.notifications.reachability.api.ReachabilityChecksMethods;
import com.oculus.horizon.platform.PlatformContext;
import com.oculus.horizon.platform.PresenceActivityLifecycleCallbacks;
import com.oculus.horizon.platform.PresenceInit;
import com.oculus.horizon.platform.PresenceManager;
import com.oculus.horizon.platformplugin.PlatformPluginManager;
import com.oculus.horizon.platformplugin.PlatformPluginModule;
import com.oculus.horizon.platformpush.PlatformPushHandler;
import com.oculus.horizon.platformsdk.DeeplinkIntentUtils;
import com.oculus.horizon.platformsdk.dumper.DeeplinkDumperPlugin;
import com.oculus.horizon.profile.UserProfileHelper;
import com.oculus.horizon.profile.init.UserProfileHelperLoginHandler;
import com.oculus.horizon.profile.init.UserProfileHelperLogoutHandler;
import com.oculus.horizon.provider.ProfileProviderTrustedApps;
import com.oculus.horizon.push.FbnsPushInit;
import com.oculus.horizon.push.FbnsPushLoginHandler;
import com.oculus.horizon.push.FbnsPushLogoutHandler;
import com.oculus.horizon.push.FbnsPushProcessor;
import com.oculus.horizon.push.dumper.FbnsPushDumperPlugin;
import com.oculus.horizon.remotelaunchlogger.RemoteLaunchLogger;
import com.oculus.horizon.remotewipe.RemoteWipeInit;
import com.oculus.horizon.remotewipe.RemoteWipeManager;
import com.oculus.horizon.remotewipe.RemoteWipeMethods;
import com.oculus.horizon.service.AssetBundleUtil;
import com.oculus.horizon.service.CallerUtils;
import com.oculus.horizon.service.ExternalPlatformLocal;
import com.oculus.horizon.service.ExternalPlatformNetwork;
import com.oculus.horizon.service.OVRModule;
import com.oculus.horizon.service.ServiceLogger;
import com.oculus.horizon.service.result.AppScopedAccessTokenResultBuilderProvider;
import com.oculus.horizon.service.result.DeviceScopedAccessTokenResultBuilderProvider;
import com.oculus.horizon.service.result.DurableIAPResultBuilderProvider;
import com.oculus.horizon.service.result.EntitlementCheckResultBuilderProvider;
import com.oculus.horizon.service.result.GetCloudStorage2UserDirectoryPathResultBuilderProvider;
import com.oculus.horizon.service.result.IAPCheckoutFlowResultBuilderProvider;
import com.oculus.horizon.service.result.InstalledVRApplicationsResultBuilderProvider;
import com.oculus.horizon.service.result.InvitableUsersFlowResultBuilderProvider;
import com.oculus.horizon.service.result.IsAppEntitledResultBuilderProvider;
import com.oculus.horizon.service.result.LatestAvailableAppInformationResultBuilderProvider;
import com.oculus.horizon.service.result.LaunchOtherAppResultBuilderProvider;
import com.oculus.horizon.service.result.RegisterProcessTokenResultBuilderProvider;
import com.oculus.horizon.service.result.SetRichPresenceResultBuilderProvider;
import com.oculus.horizon.service_media.AppSwitchManager;
import com.oculus.horizon.service_media.CaptureAnalytics;
import com.oculus.horizon.service_media.FileCapture;
import com.oculus.horizon.service_media.ForegroundAppChecker;
import com.oculus.horizon.service_media.HorizonCallerPackageVerifier;
import com.oculus.horizon.service_media.InstantReplayHelper;
import com.oculus.horizon.service_media.OVRLivestreamingErrorUtility;
import com.oculus.horizon.service_media.OVRMediaServiceManagerProvider;
import com.oculus.horizon.service_media.OVRMediaServiceNotification;
import com.oculus.horizon.service_media.ServiceMediaModule;
import com.oculus.horizon.service_media.SurfaceCapture;
import com.oculus.horizon.service_media.WebRTCCapture;
import com.oculus.horizon.service_media.dumper.OVRMediaServiceDumperPlugin;
import com.oculus.horizon.service_media.screenshot.ScreenshotManager;
import com.oculus.horizon.service_media.vrcast.VrCastManager;
import com.oculus.horizon.service_media.vrcast.VrCastServiceConnection;
import com.oculus.horizon.service_media.vrcast.VrCastServicePackageVerifier;
import com.oculus.horizon.social.SocialMethods;
import com.oculus.horizon.sso.SsoManager;
import com.oculus.horizon.tv.push.TvPushHandler;
import com.oculus.horizon.usermanagerupdater.UserManagerUpdater;
import com.oculus.horizon.usermanagerupdater.UserManagerUpdaterServiceStarter;
import com.oculus.horizon.util.launch.PackageLauncherUtils;
import com.oculus.horizon.vr.VRStateManager;
import com.oculus.horizon.vr_lifecycle.VRLifecycleJobScheduler;
import com.oculus.horizon.vr_lifecycle.VRLifecycleManager;
import com.oculus.horizon.vr_lifecycle.VRLifecycleSessionManager;
import com.oculus.horizon.vr_lifecycle.query.VRLifecycleMethods;
import com.oculus.horizon.vrbugreporter.BugReporterMethods;
import com.oculus.http.common.HttpModule;
import com.oculus.http.core.ApiResponseConverter;
import com.oculus.http.core.HttpCoreLogger;
import com.oculus.http.core.LoggingErrorHandler;
import com.oculus.http.core.endpoint.EndpointModule;
import com.oculus.http.core.interceptor.ApiInterceptor;
import com.oculus.http.core.interceptor.GzipInterceptor;
import com.oculus.http.core.interceptor.OculusAuthorizationInterceptor;
import com.oculus.http.core.interceptor.UserAgentInterceptor;
import com.oculus.http.defaultclient.DefaultClientModule;
import com.oculus.http.socketconfig.SocketConfigModule;
import com.oculus.http.useragent.UserAgentFactory;
import com.oculus.http.useragent.UserAgentModule;
import com.oculus.library.utils.AppSharingUtils;
import com.oculus.libraryapi.OVRLibraryModule;
import com.oculus.locale.LocaleModule;
import com.oculus.logging.utils.EventManagerImpl;
import com.oculus.logging.utils.StorageLoggingUtils;
import com.oculus.logging.utils.UtilsModule;
import com.oculus.managed.ManagedMode;
import com.oculus.mediaupload.FacebookMediaUploaderServiceManager;
import com.oculus.mediaupload.MediaUploaderRequestRunner;
import com.oculus.mediaupload.MediaUploaderServiceManager;
import com.oculus.mediaupload.OculusMediaUploaderServiceManager;
import com.oculus.mediaupload.api.FacebookShareMethods;
import com.oculus.mediaupload.api.MediaUploaderMetadataHelper;
import com.oculus.mediaupload.api.OculusShareMethods;
import com.oculus.mediaupload.io.FacebookGamingProfileTokenManager;
import com.oculus.mediaupload.io.MediaUploaderDB;
import com.oculus.mediaupload.io.MediaUploaderNotifications;
import com.oculus.mediaupload.logging.UploadEventFactory;
import com.oculus.mediaupload.model.MediaUploaderIntentValidator;
import com.oculus.mobileconfig.init.MobileConfigConfiguration;
import com.oculus.mobileconfig.init.MobileConfigInit;
import com.oculus.mobileconfig.init.MobileConfigInitModule;
import com.oculus.mobileconfig.init.MobileConfigInitOptions;
import com.oculus.mobileconfig.init.MobileConfigLoginHandler;
import com.oculus.mobileconfig.init.MobileConfigLogoutHandler;
import com.oculus.mobileconfigservice.MobileConfigUpdater;
import com.oculus.multiuser.UserClassifier;
import com.oculus.oculustestsettings.OculusTestSettings;
import com.oculus.oculustestsettings.OculusTestSettingsDefaultImpl;
import com.oculus.oculustestsettings.OculusTestSettingsModule;
import com.oculus.ossdk.inject.OsSdkModule;
import com.oculus.partystatemanager.logging.PartyEventFactory;
import com.oculus.perflogs.OculusPerformanceLogger;
import com.oculus.perflogs.impl.fbquicklog.FbQuicklogPerformanceLogger;
import com.oculus.perflogs.impl.fbquicklog.FbQuicklogPerformanceLoggerModule;
import com.oculus.perflogs.impl.fbquicklog.HoneyClientLoggerImpl;
import com.oculus.perflogs.impl.fbquicklog.PerfLogsHelper;
import com.oculus.processtokentracker.ProcessTokenTracker;
import com.oculus.profileapi.OVRProfile;
import com.oculus.remotewipe.CompanionBinder;
import com.oculus.remotewipe.WipeTelemetry;
import com.oculus.security.basecomponent.OculusContentProviderLogger;
import com.oculus.security.basecomponent.OculusIntentLogger;
import com.oculus.signature.inject.SignatureCheckProvider;
import com.oculus.signature.inject.SignatureChecker;
import com.oculus.time.Clock;
import com.oculus.time.TimeModule;
import com.oculus.unifiedtelemetry.unifiedlogging.utils.TelemetryStateMonitor;
import com.oculus.unlockulus_helper.UnlockulusHelper;
import com.oculus.uploader.OculusHttpRequestExecutor;
import com.oculus.uploader.UploaderModule;
import com.oculus.userserver.api.inject.OculusUserManagerProvider;
import com.oculus.util.constants.OculusConstants;
import com.oculus.util.device.DeviceUtils;
import com.oculus.util.service.ServiceFutures;
import com.oculus.util.task.TaskDelayFactory;
import com.oculus.util.thread.ThreadUtils;
import com.oculus.util.vr.VRUtils;
import com.oculus.xanalytics.OculusXAnalyticsProvider;
import com.squareup.okhttp.internal.framed.Hpack;
import java.io.File;
import java.util.List;
import java.util.Set;
import javax.inject.Provider;
import retrofit.RestAdapter;

@AutoGeneratedSwitch
/* renamed from: X.117  reason: invalid class name */
public final class AnonymousClass117 {
    @AutoGeneratedSwitchMasterMethod
    public static Object A00(int i, AbstractC06640p5 r16) {
        String str;
        if (((i >> 11) & 31) == 0) {
            int i2 = (i >> 7) & 15;
            if (i2 == 0) {
                switch ((i >> 0) & Hpack.PREFIX_7_BITS) {
                    case 0:
                        return new DefaultAppsPrefs(C003108z.A00(r16));
                    case 1:
                        return OVRModule.ENABLE_CRASH_REPORT_LOG_COLLECTION;
                    case 2:
                        return ApiModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_auth_api_FacebookLoginGraphRestAdapter_ULSEP_FACTORY_METHOD(r16);
                    case 3:
                        return com.oculus.http.core.ApiModule.A0A(r16);
                    case 4:
                        return OVRModule.ENABLE_STATIONARY_GUARDIAN_V2;
                    case 5:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_stationary_ULUNDERSCORE_guardian_ULUNDERSCORE_v2_ULSEP_FACTORY_METHOD(r16);
                    case 6:
                        return AuthComponentRunner._UL__ULSEP_com_oculus_auth_components_AuthComponentRunner_ULSEP_FACTORY_METHOD(r16);
                    case 7:
                        return new DurableIAPSchemaPart((DurableIAPTable) A00(64, r16));
                    case 8:
                        if (VRLifecycleSessionManager._UL__ULSEP_com_oculus_horizon_vr_ULUNDERSCORE_lifecycle_VRLifecycleSessionManager_ULSEP_INSTANCE == null) {
                            synchronized (VRLifecycleSessionManager.class) {
                                AnonymousClass0Pi A00 = AnonymousClass0Pi.A00(VRLifecycleSessionManager._UL__ULSEP_com_oculus_horizon_vr_ULUNDERSCORE_lifecycle_VRLifecycleSessionManager_ULSEP_INSTANCE, r16);
                                if (A00 != null) {
                                    try {
                                        AbstractC06640p5 applicationInjector = r16.getApplicationInjector();
                                        VRLifecycleSessionManager._UL__ULSEP_com_oculus_horizon_vr_ULUNDERSCORE_lifecycle_VRLifecycleSessionManager_ULSEP_INSTANCE = new VRLifecycleSessionManager(applicationInjector, C003108z.A00(applicationInjector), new C003008y(404, applicationInjector));
                                    } finally {
                                        A00.A01();
                                    }
                                }
                            }
                        }
                        return VRLifecycleSessionManager._UL__ULSEP_com_oculus_horizon_vr_ULUNDERSCORE_lifecycle_VRLifecycleSessionManager_ULSEP_INSTANCE;
                    case 9:
                        return OVRModule.ENABLE_REALITY_TUNER;
                    case 10:
                        if (RsyncNativeLibrary._UL__ULSEP_com_oculus_appmanager_patcher_RsyncNativeLibrary_ULSEP_INSTANCE == null) {
                            synchronized (RsyncNativeLibrary.class) {
                                AnonymousClass0Pi A002 = AnonymousClass0Pi.A00(RsyncNativeLibrary._UL__ULSEP_com_oculus_appmanager_patcher_RsyncNativeLibrary_ULSEP_INSTANCE, r16);
                                if (A002 != null) {
                                    try {
                                        r16.getApplicationInjector();
                                        RsyncNativeLibrary._UL__ULSEP_com_oculus_appmanager_patcher_RsyncNativeLibrary_ULSEP_INSTANCE = new RsyncNativeLibrary();
                                    } finally {
                                        A002.A01();
                                    }
                                }
                            }
                        }
                        return RsyncNativeLibrary._UL__ULSEP_com_oculus_appmanager_patcher_RsyncNativeLibrary_ULSEP_INSTANCE;
                    case 11:
                        return new OculusShareMethods(r16, com.oculus.http.core.ApiModule.A0C(r16));
                    case 12:
                        return RestAdapter.LogLevel.NONE;
                    case 13:
                        return new RegisterProcessTokenResultBuilderProvider(r16);
                    case 14:
                        if (NotificationBuilder._UL__ULSEP_com_oculus_horizon_notifications_core_NotificationBuilder_ULSEP_INSTANCE == null) {
                            synchronized (NotificationBuilder.class) {
                                AnonymousClass0Pi A003 = AnonymousClass0Pi.A00(NotificationBuilder._UL__ULSEP_com_oculus_horizon_notifications_core_NotificationBuilder_ULSEP_INSTANCE, r16);
                                if (A003 != null) {
                                    try {
                                        NotificationBuilder._UL__ULSEP_com_oculus_horizon_notifications_core_NotificationBuilder_ULSEP_INSTANCE = new NotificationBuilder(r16.getApplicationInjector());
                                    } finally {
                                        A003.A01();
                                    }
                                }
                            }
                        }
                        return NotificationBuilder._UL__ULSEP_com_oculus_horizon_notifications_core_NotificationBuilder_ULSEP_INSTANCE;
                    case 15:
                        return A00(160, r16);
                    case 16:
                        return new UploadEventFactory(r16);
                    case 17:
                        if (HorizonCredentialsModule._UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_INSTANCE == null) {
                            synchronized (AuthDatastore.class) {
                                AnonymousClass0Pi A004 = AnonymousClass0Pi.A00(HorizonCredentialsModule._UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_INSTANCE, r16);
                                if (A004 != null) {
                                    try {
                                        HorizonCredentialsModule._UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_INSTANCE = (HorizonCredentialsManager) A00(310, r16.getApplicationInjector());
                                    } finally {
                                        A004.A01();
                                    }
                                }
                            }
                        }
                        return HorizonCredentialsModule._UL__ULSEP_com_oculus_auth_storage_AuthDatastore_ULSEP_INSTANCE;
                    case 18:
                        return MobileConfigInitModule.A01(C003108z.A00(r16));
                    case 19:
                        if (LinkedAccountsManager._UL__ULSEP_com_oculus_horizon_linkedaccounts_LinkedAccountsManager_ULSEP_INSTANCE == null) {
                            synchronized (LinkedAccountsManager.class) {
                                AnonymousClass0Pi A005 = AnonymousClass0Pi.A00(LinkedAccountsManager._UL__ULSEP_com_oculus_horizon_linkedaccounts_LinkedAccountsManager_ULSEP_INSTANCE, r16);
                                if (A005 != null) {
                                    try {
                                        LinkedAccountsManager._UL__ULSEP_com_oculus_horizon_linkedaccounts_LinkedAccountsManager_ULSEP_INSTANCE = new LinkedAccountsManager(r16.getApplicationInjector());
                                    } finally {
                                        A005.A01();
                                    }
                                }
                            }
                        }
                        return LinkedAccountsManager._UL__ULSEP_com_oculus_horizon_linkedaccounts_LinkedAccountsManager_ULSEP_INSTANCE;
                    case 20:
                        return OVRModule.ENABLE_CHROMECAST_FORCE_H264_FOR_SMART_TVS;
                    case 21:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_guardian_ULUNDERSCORE_reality_ULUNDERSCORE_tuner_ULSEP_FACTORY_METHOD(r16);
                    case 22:
                        return new OVRLivestreamingErrorUtility(r16);
                    case 23:
                        return new DeviceOwnershipHelper(r16);
                    case 24:
                        if (Patcher._UL__ULSEP_com_oculus_appmanager_patcher_Patcher_ULSEP_INSTANCE == null) {
                            synchronized (Patcher.class) {
                                AnonymousClass0Pi A006 = AnonymousClass0Pi.A00(Patcher._UL__ULSEP_com_oculus_appmanager_patcher_Patcher_ULSEP_INSTANCE, r16);
                                if (A006 != null) {
                                    try {
                                        Patcher._UL__ULSEP_com_oculus_appmanager_patcher_Patcher_ULSEP_INSTANCE = new Patcher((RsyncNativeLibrary) A00(10, r16.getApplicationInjector()));
                                    } finally {
                                        A006.A01();
                                    }
                                }
                            }
                        }
                        return Patcher._UL__ULSEP_com_oculus_appmanager_patcher_Patcher_ULSEP_INSTANCE;
                    case 25:
                        return OVRModule.ENABLE_NATIVE_VOICE_SERVICE;
                    case 26:
                        return new MediaUploaderIntentValidator(r16);
                    case 27:
                        return OVRModule.ENABLE_CHROMECAST_INCREASE_PING_FAILURE_TOLERANCE;
                    case 28:
                        return OVRModule.IS_ABUSE_PREVENTION_OVERLAYS_ENABLED_GK;
                    case 29:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_guardian_ULUNDERSCORE_internal_ULUNDERSCORE_anchor_ULSEP_FACTORY_METHOD(r16);
                    case 30:
                        return new HorizonCredentialsNotifier(r16);
                    case 31:
                        return new DownloadMetadataTaskProvider(r16);
                    case 32:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_chromecast_ULUNDERSCORE_longer_ULUNDERSCORE_ping_ULUNDERSCORE_interval_ULSEP_FACTORY_METHOD(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteById /*{ENCODED_INT: 33}*/:
                        return null;
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteByName /*{ENCODED_INT: 34}*/:
                        return HorizonEndpointModule.A00(C003108z.A00(r16));
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusById /*{ENCODED_INT: 35}*/:
                        return OculusAuthorizationInterceptor.A01(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusByName /*{ENCODED_INT: 36}*/:
                        return OVRModule.ENABLE_CHROMECAST_LONGER_PING_INTERVAL;
                    case 37:
                        return new LogoutComponents(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_languagePackGetCurrent /*{ENCODED_INT: 38}*/:
                        return new UserInfoFetcher(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_languagePackSetCurrent /*{ENCODED_INT: 39}*/:
                        return C003809k.A01(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_getCloudStorage2UserDirectoryPath /*{ENCODED_INT: 40}*/:
                        return OVRModule.ENABLE_OCULUS_MEDIA_SHARED_MIC;
                    case OVRServiceInterface.Stub.TRANSACTION_launchOtherApp /*{ENCODED_INT: 41}*/:
                        return new LinkedAccountsDumperPlugin(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_setRichPresence /*{ENCODED_INT: 42}*/:
                        return new PasswordEncryptionHelper(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_registerProcessToken /*{ENCODED_INT: 43}*/:
                        return LoggingErrorHandler.A01(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_getViewerPurchasesDurableCacheJSON /*{ENCODED_INT: 44}*/:
                        return C003809k.A04(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_getCurrentMapUuid /*{ENCODED_INT: 45}*/:
                        return OVRModule.ENABLE_P2P_DTX_GK;
                    case OVRServiceInterface.Stub.TRANSACTION_shareMap /*{ENCODED_INT: 46}*/:
                        return EventManagerImpl.A01(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_requestMap /*{ENCODED_INT: 47}*/:
                        C003108z.A06();
                        break;
                    case OVRServiceInterface.Stub.TRANSACTION_getDeviceScopedAccessToken /*{ENCODED_INT: 48}*/:
                        if (OculusDownloadListenerDispatcher._UL__ULSEP_com_oculus_downloader_dispatcher_OculusDownloadListenerDispatcher_ULSEP_INSTANCE == null) {
                            synchronized (OculusDownloadListenerDispatcher.class) {
                                AnonymousClass0Pi A007 = AnonymousClass0Pi.A00(OculusDownloadListenerDispatcher._UL__ULSEP_com_oculus_downloader_dispatcher_OculusDownloadListenerDispatcher_ULSEP_INSTANCE, r16);
                                if (A007 != null) {
                                    try {
                                        OculusDownloadListenerDispatcher._UL__ULSEP_com_oculus_downloader_dispatcher_OculusDownloadListenerDispatcher_ULSEP_INSTANCE = new OculusDownloadListenerDispatcher((Set) A00(465, r16.getApplicationInjector()));
                                    } finally {
                                        A007.A01();
                                    }
                                }
                            }
                        }
                        return OculusDownloadListenerDispatcher._UL__ULSEP_com_oculus_downloader_dispatcher_OculusDownloadListenerDispatcher_ULSEP_INSTANCE;
                    case 49:
                        return new FbnsPushInit(r16, C003108z.A00(r16), AppInfoModule.A00(r16));
                    case GraphRequest.MAXIMUM_BATCH_SIZE /*{ENCODED_INT: 50}*/:
                        if (GkSessionlessModule.A05 == null) {
                            synchronized (GkSessionlessModule.A02) {
                                AnonymousClass0Pi A008 = AnonymousClass0Pi.A00(GkSessionlessModule.A05, r16);
                                if (A008 != null) {
                                    try {
                                        r16.getApplicationInjector();
                                        GkSessionlessModule.A05 = new AnonymousClass11r();
                                    } finally {
                                        A008.A01();
                                    }
                                }
                            }
                        }
                        return GkSessionlessModule.A05;
                    case 51:
                        return new HorizonLoginHandler(r16);
                    case 52:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_deviceconfig_ULUNDERSCORE_test_ULUNDERSCORE_73_ULSEP_FACTORY_METHOD(r16);
                    case 53:
                        return C003309b.A02(r16);
                    case 54:
                        return AntiPiracyManager.A01(r16);
                    case 55:
                        return UserProfileHelper.A01(C003108z.A00(r16));
                    case 56:
                        return new AnonymousClass1MY();
                    case 57:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_chromecast_ULUNDERSCORE_force_ULUNDERSCORE_h264_ULUNDERSCORE_for_ULUNDERSCORE_smart_ULUNDERSCORE_tvs_ULSEP_FACTORY_METHOD(r16);
                    case 58:
                        return ApiDispatcher._UL__ULSEP_com_oculus_horizon_api_ApiDispatcher_ULSEP_FACTORY_METHOD(r16);
                    case 59:
                        return new FacebookAuthorizationInterceptor();
                    case CastHTTPServerForWeb.WWW_ANSWER_TIMEOUT /*{ENCODED_INT: 60}*/:
                        return new AnonymousClass0Qp(r16, AnonymousClass112.A03);
                    case 61:
                        return new VideoUploaderServiceManager(r16);
                    case 62:
                        return UserAgentModule.A02(r16);
                    case Hpack.PREFIX_6_BITS /*{ENCODED_INT: 63}*/:
                        if (SignatureChecker._UL__ULSEP_com_oculus_signature_inject_SignatureChecker_ULSEP_INSTANCE == null) {
                            synchronized (SignatureChecker.class) {
                                AnonymousClass0Pi A009 = AnonymousClass0Pi.A00(SignatureChecker._UL__ULSEP_com_oculus_signature_inject_SignatureChecker_ULSEP_INSTANCE, r16);
                                if (A009 != null) {
                                    try {
                                        SignatureChecker._UL__ULSEP_com_oculus_signature_inject_SignatureChecker_ULSEP_INSTANCE = new SignatureChecker(r16.getApplicationInjector());
                                    } finally {
                                        A009.A01();
                                    }
                                }
                            }
                        }
                        return SignatureChecker._UL__ULSEP_com_oculus_signature_inject_SignatureChecker_ULSEP_INSTANCE;
                    case 64:
                        return new DurableIAPTable();
                    case 65:
                        return ExecutorsModule.A02();
                    case 66:
                        if (DeeplinkIntentUtils._UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_INSTANCE == null) {
                            synchronized (DeeplinkIntentUtils.class) {
                                AnonymousClass0Pi A0010 = AnonymousClass0Pi.A00(DeeplinkIntentUtils._UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_INSTANCE, r16);
                                if (A0010 != null) {
                                    try {
                                        DeeplinkIntentUtils._UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_INSTANCE = new DeeplinkIntentUtils(r16.getApplicationInjector());
                                    } finally {
                                        A0010.A01();
                                    }
                                }
                            }
                        }
                        return DeeplinkIntentUtils._UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_INSTANCE;
                    case 67:
                        return ApkUpdateExtrasManager.A01(r16);
                    case 68:
                        if (UserProfileHelper._UL__ULSEP_com_oculus_horizon_profile_UserProfileHelper_ULSEP_INSTANCE == null) {
                            synchronized (UserProfileHelper.class) {
                                AnonymousClass0Pi A0011 = AnonymousClass0Pi.A00(UserProfileHelper._UL__ULSEP_com_oculus_horizon_profile_UserProfileHelper_ULSEP_INSTANCE, r16);
                                if (A0011 != null) {
                                    try {
                                        UserProfileHelper._UL__ULSEP_com_oculus_horizon_profile_UserProfileHelper_ULSEP_INSTANCE = new UserProfileHelper(r16.getApplicationInjector());
                                    } finally {
                                        A0011.A01();
                                    }
                                }
                            }
                        }
                        return UserProfileHelper._UL__ULSEP_com_oculus_horizon_profile_UserProfileHelper_ULSEP_INSTANCE;
                    case 69:
                        return new GoogleAPIHelper(r16);
                    case 70:
                        return OVRModule.ENABLE_PASSTHROUGH_QUICKBOOT;
                    case 71:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_quest_ULUNDERSCORE_playspace_ULUNDERSCORE_scan_ULUNDERSCORE_headless_ULSEP_FACTORY_METHOD(r16);
                    case FBConnectContentProvider.DEFAULT_PROFILE_PICTURE_SIZE /*{ENCODED_INT: 72}*/:
                        return new LaunchOtherAppResultBuilderProvider(r16);
                    case 73:
                        if (CloudStorageManager._UL__ULSEP_com_oculus_horizon_cloudstorage2_CloudStorageManager_ULSEP_INSTANCE == null) {
                            synchronized (CloudStorageManager.class) {
                                AnonymousClass0Pi A0012 = AnonymousClass0Pi.A00(CloudStorageManager._UL__ULSEP_com_oculus_horizon_cloudstorage2_CloudStorageManager_ULSEP_INSTANCE, r16);
                                if (A0012 != null) {
                                    try {
                                        CloudStorageManager._UL__ULSEP_com_oculus_horizon_cloudstorage2_CloudStorageManager_ULSEP_INSTANCE = new CloudStorageManager(r16.getApplicationInjector());
                                    } finally {
                                        A0012.A01();
                                    }
                                }
                            }
                        }
                        return CloudStorageManager._UL__ULSEP_com_oculus_horizon_cloudstorage2_CloudStorageManager_ULSEP_INSTANCE;
                    case 74:
                        return new UploadVerifierProvider(r16);
                    case 75:
                        return new MobileConfigLogoutHandler(new C01020Iw(357, r16), new C01020Iw(399, r16), new C01010Iv(487, r16));
                    case 76:
                        return new HorizonForegroundListener(r16, C003108z.A00(r16), (OculusLogger) A00(574, r16));
                    case 77:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_link_ULUNDERSCORE_vrshell_ULUNDERSCORE_modal2_ULSEP_FACTORY_METHOD(r16);
                    case 78:
                        return OVRModule.QUEST_PLAYSPACE_SCAN_HEADLESS;
                    case 79:
                        return new OculusHttpRequestExecutor(r16);
                    case NotificationCompat$WearableExtender.DEFAULT_GRAVITY /*{ENCODED_INT: 80}*/:
                        return C003108z.A03(r16);
                    case 81:
                        if (OuculusDownloadProgressTrackerModule._UL__ULSEP_com_oculus_downloader_progress_DownloadProgressTracker_ULSEP_INSTANCE == null) {
                            synchronized (DownloadProgressTracker.class) {
                                AnonymousClass0Pi A0013 = AnonymousClass0Pi.A00(OuculusDownloadProgressTrackerModule._UL__ULSEP_com_oculus_downloader_progress_DownloadProgressTracker_ULSEP_INSTANCE, r16);
                                if (A0013 != null) {
                                    try {
                                        OuculusDownloadProgressTrackerModule._UL__ULSEP_com_oculus_downloader_progress_DownloadProgressTracker_ULSEP_INSTANCE = (OculusDownloadProgressTracker) A00(344, r16.getApplicationInjector());
                                    } finally {
                                        A0013.A01();
                                    }
                                }
                            }
                        }
                        return OuculusDownloadProgressTrackerModule._UL__ULSEP_com_oculus_downloader_progress_DownloadProgressTracker_ULSEP_INSTANCE;
                    case 82:
                        return OsSdkModule.A02(r16);
                    case 83:
                        return OVRModule.OCULUS_TREX_FITNESSTRACKER_KILLSW;
                    case 84:
                        return AuthMethods._UL__ULSEP_com_oculus_auth_api_AuthMethods_ULSEP_FACTORY_METHOD(r16);
                    case ScreenshotManager.COMPRESSION_QUALITY /*{ENCODED_INT: 85}*/:
                        return new HoneyClientLoggerImpl(r16);
                    case 86:
                        return OVRModule.ENABLE_LOCATION_SERVICE;
                    case 87:
                        return OVRModule.USE_PACKAGE_PARTS_UPLOADER;
                    case 88:
                        return OVRModule.ENABLE_VRSHELL_SYSICONS_HANDS;
                    case 89:
                        return new CryptoMethods();
                    case 90:
                        return new DropboxAPIHelper(r16);
                    case 91:
                        return PresenceManager._UL__ULSEP_com_oculus_horizon_platform_PresenceManager_ULSEP_FACTORY_METHOD(r16);
                    case 92:
                        return new VRLifecycleMethods(com.oculus.http.core.ApiModule.A0C(r16));
                    case 93:
                        return OVRModule.ENABLE_CHROMECAST_101_ERROR_KEEP_CONNECTED;
                    case 94:
                        return new IsAppEntitledResultBuilderProvider(r16);
                    case 95:
                        return new InvitableUsersFlowResultBuilderProvider(r16);
                    case 96:
                        return OVRModule.ENABLE_CHROMECAST_H264_OVERRIDE;
                    case 97:
                        if (AnonymousClass121.A02 == null) {
                            synchronized (AnonymousClass121.A00) {
                                AnonymousClass0Pi A0014 = AnonymousClass0Pi.A00(AnonymousClass121.A02, r16);
                                if (A0014 != null) {
                                    try {
                                        r16.getApplicationInjector();
                                        AnonymousClass121.A02 = new C09311at();
                                    } finally {
                                        A0014.A01();
                                    }
                                }
                            }
                        }
                        return AnonymousClass121.A02;
                    case 98:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_coremobileservices_ULUNDERSCORE_location_ULSEP_FACTORY_METHOD(r16);
                    case 99:
                        if (MediaSessionLifecycleManager._UL__ULSEP_com_oculus_horizon_media_ULUNDERSCORE_session_MediaSessionLifecycleManager_ULSEP_INSTANCE == null) {
                            synchronized (MediaSessionLifecycleManager.class) {
                                AnonymousClass0Pi A0015 = AnonymousClass0Pi.A00(MediaSessionLifecycleManager._UL__ULSEP_com_oculus_horizon_media_ULUNDERSCORE_session_MediaSessionLifecycleManager_ULSEP_INSTANCE, r16);
                                if (A0015 != null) {
                                    try {
                                        MediaSessionLifecycleManager._UL__ULSEP_com_oculus_horizon_media_ULUNDERSCORE_session_MediaSessionLifecycleManager_ULSEP_INSTANCE = new MediaSessionLifecycleManager(r16.getApplicationInjector());
                                    } finally {
                                        A0015.A01();
                                    }
                                }
                            }
                        }
                        return MediaSessionLifecycleManager._UL__ULSEP_com_oculus_horizon_media_ULUNDERSCORE_session_MediaSessionLifecycleManager_ULSEP_INSTANCE;
                    case 100:
                        if (com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_com_facebook_mobileconfig_factory_module_SessionlessMC_ULSEP_INSTANCE == null) {
                            synchronized (com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_com_facebook_mobileconfig_factory_module_SessionlessMC_ULSEP_LOCK) {
                                AnonymousClass0Pi A0016 = AnonymousClass0Pi.A00(com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_com_facebook_mobileconfig_factory_module_SessionlessMC_ULSEP_INSTANCE, r16);
                                if (A0016 != null) {
                                    try {
                                        AbstractC06640p5 applicationInjector2 = r16.getApplicationInjector();
                                        Context A0017 = C003108z.A00(applicationInjector2);
                                        AnonymousClass1Ae r2 = new AnonymousClass1Ae((C09311at) A00(97, applicationInjector2));
                                        File filesDir = A0017.getFilesDir();
                                        AnonymousClass1ar r1 = r2.A00;
                                        r1.A04 = filesDir;
                                        r1.A00 = A0017.getAssets();
                                        com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_com_facebook_mobileconfig_factory_module_SessionlessMC_ULSEP_INSTANCE = r2.A00();
                                    } finally {
                                        A0016.A01();
                                    }
                                }
                            }
                        }
                        return com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_com_facebook_mobileconfig_factory_module_SessionlessMC_ULSEP_INSTANCE;
                    case 101:
                        return OsSdkModule.A04(r16);
                    case FacebookRequestErrorClassification.EC_INVALID_SESSION /*{ENCODED_INT: 102}*/:
                        return ApkUpdateInfoDispatcher.A01(r16);
                    case 103:
                        return new UserProfileHelperLoginHandler(r16);
                    case 104:
                        return new FbnsPushLogoutHandler(C003108z.A00(r16));
                    case 105:
                        return CredentialsModule._UL__ULSEP_com_oculus_auth_credentials_Credentials_ULSEP_FACTORY_METHOD(r16);
                    case 106:
                        return TimeModule.A00();
                    case 107:
                        if (OkTigonServiceHolder._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonServiceHolder_ULSEP_INSTANCE == null) {
                            synchronized (OkTigonServiceHolder.class) {
                                AnonymousClass0Pi A0018 = AnonymousClass0Pi.A00(OkTigonServiceHolder._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonServiceHolder_ULSEP_INSTANCE, r16);
                                if (A0018 != null) {
                                    try {
                                        OkTigonServiceHolder._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonServiceHolder_ULSEP_INSTANCE = new OkTigonServiceHolder((OkTigonService) A00(209, r16.getApplicationInjector()));
                                    } finally {
                                        A0018.A01();
                                    }
                                }
                            }
                        }
                        return OkTigonServiceHolder._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonServiceHolder_ULSEP_INSTANCE;
                    case MinidumpReader.MODULE_FULL_SIZE /*{ENCODED_INT: 108}*/:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_vrshell_ULUNDERSCORE_core_ULUNDERSCORE_quest_ULUNDERSCORE_retaildemo_ULSEP_FACTORY_METHOD(r16);
                    case 109:
                        return new ErrorReporterLogoutHandler(r16);
                    case 110:
                        return new EventTimeFormat(C003108z.A02(r16), (Clock) A00(354, r16), LocaleModule.A01(r16), new C01020Iw(106, r16));
                    case 111:
                        return ApkUpdateStorage.A00(r16);
                    case 112:
                        return DsatFetcher.A00(r16);
                    case 113:
                        return OVRModule.ENABLE_CHROMECAST_INIT_NSD_ON_DISCOVERY;
                    case 114:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_bugreport_ULUNDERSCORE_service_ULUNDERSCORE_enabled_ULSEP_FACTORY_METHOD(r16);
                    case 115:
                        return ApiModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_auth_api_FacebookLoginApiRestAdapter_ULSEP_FACTORY_METHOD(r16);
                    case 116:
                        return new OculusUserManagerProvider(r16);
                    case 117:
                        return new DefaultAppsDumperPlugin(r16);
                    case 118:
                        return new DownloadSyncTaskProvider(r16);
                    case 119:
                        return new TelemetryStateMonitor();
                    case 120:
                        return OVRModule.ENABLE_BUGREPORT_SERVICE;
                    case 121:
                        return OVRModule.ENABLE_RETAIL_DEMO;
                    case 122:
                        return new UserManagerUpdater(r16);
                    case 123:
                        return new AnonymousClass0Qp(r16, AnonymousClass112.A0D);
                    case 124:
                        return new DefaultAppsMethods(r16, com.oculus.http.core.ApiModule.A0C(r16));
                    case 125:
                        return new SurfaceCapture(r16);
                    case 126:
                        return new TaskProgressReporterProvider(r16);
                    case Hpack.PREFIX_7_BITS /*{ENCODED_INT: 127}*/:
                        return OculusPasswordEncryptionKeyFetcher._UL__ULSEP_com_oculus_auth_service_passwordencryption_OculusPasswordEncryptionKeyFetcher_ULSEP_FACTORY_METHOD(r16);
                }
            } else if (i2 != 1) {
                if (i2 != 2) {
                    if (i2 == 3) {
                        switch ((i >> 0) & Hpack.PREFIX_7_BITS) {
                            case 0:
                                return AnonymousClass093.A00(r16);
                            case 1:
                                return GkServiceCallerVerifier._UL__ULSEP_com_oculus_config_service_GkServiceCallerVerifier_ULSEP_FACTORY_METHOD(r16);
                            case 2:
                                return new DeviceClaimHelper(r16);
                            case 3:
                                return new FBConnectLogger(r16);
                            case 4:
                                return PackageManagerUtils.A01(r16);
                            case 5:
                                if (ProcessTokenTracker._UL__ULSEP_com_oculus_processtokentracker_ProcessTokenTracker_ULSEP_INSTANCE == null) {
                                    synchronized (ProcessTokenTracker.class) {
                                        AnonymousClass0Pi A0019 = AnonymousClass0Pi.A00(ProcessTokenTracker._UL__ULSEP_com_oculus_processtokentracker_ProcessTokenTracker_ULSEP_INSTANCE, r16);
                                        if (A0019 != null) {
                                            try {
                                                r16.getApplicationInjector();
                                                ProcessTokenTracker._UL__ULSEP_com_oculus_processtokentracker_ProcessTokenTracker_ULSEP_INSTANCE = new ProcessTokenTracker();
                                            } finally {
                                                A0019.A01();
                                            }
                                        }
                                    }
                                }
                                return ProcessTokenTracker._UL__ULSEP_com_oculus_processtokentracker_ProcessTokenTracker_ULSEP_INSTANCE;
                            case 6:
                                return new FileReceiverManager(r16);
                            case 7:
                                if (QueuedRemoteLaunchProcessor._UL__ULSEP_com_oculus_headlesshorizon_remotelaunch_QueuedRemoteLaunchProcessor_ULSEP_INSTANCE == null) {
                                    synchronized (QueuedRemoteLaunchProcessor.class) {
                                        AnonymousClass0Pi A0020 = AnonymousClass0Pi.A00(QueuedRemoteLaunchProcessor._UL__ULSEP_com_oculus_headlesshorizon_remotelaunch_QueuedRemoteLaunchProcessor_ULSEP_INSTANCE, r16);
                                        if (A0020 != null) {
                                            try {
                                                QueuedRemoteLaunchProcessor._UL__ULSEP_com_oculus_headlesshorizon_remotelaunch_QueuedRemoteLaunchProcessor_ULSEP_INSTANCE = new QueuedRemoteLaunchProcessor(r16.getApplicationInjector());
                                            } finally {
                                                A0020.A01();
                                            }
                                        }
                                    }
                                }
                                return QueuedRemoteLaunchProcessor._UL__ULSEP_com_oculus_headlesshorizon_remotelaunch_QueuedRemoteLaunchProcessor_ULSEP_INSTANCE;
                            case 8:
                                return AnonymousClass094.A03();
                            case 9:
                                return AnonymousClass094.A02();
                            case 10:
                                return com.oculus.http.core.ApiModule.A03(r16);
                            case 11:
                                return EnsureDeviceOwnershipJobScheduler._UL__ULSEP_com_oculus_auth_deviceownership_EnsureDeviceOwnershipJobScheduler_ULSEP_FACTORY_METHOD(r16);
                            case 12:
                                return new FileUploadTaskProvider(r16);
                            case 13:
                                return new InstallerFileUtils(r16);
                            case 14:
                                return new AuthSettings();
                            case 15:
                                if (com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_INSTANCE == null) {
                                    synchronized (com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_LOCK) {
                                        AnonymousClass0Pi A0021 = AnonymousClass0Pi.A00(com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_INSTANCE, r16);
                                        if (A0021 != null) {
                                            try {
                                                AbstractC06640p5 applicationInjector3 = r16.getApplicationInjector();
                                                Context A0022 = C003108z.A00(applicationInjector3);
                                                MobileConfigInitModule.AnonymousClass1 r3 = new AnonymousClass0Ra() {
                                                    /* class com.oculus.mobileconfig.init.MobileConfigInitModule.AnonymousClass1 */

                                                    @Override // X.AnonymousClass0Ra
                                                    public final String getUserId() {
                                                        if (AnonymousClass0p1.this.get() != null) {
                                                            return ((Credentials) AnonymousClass0p1.this.get()).mUserId;
                                                        }
                                                        return "";
                                                    }
                                                };
                                                AnonymousClass1Ae r22 = new AnonymousClass1Ae((C09311at) A00(357, applicationInjector3));
                                                File filesDir2 = A0022.getFilesDir();
                                                AnonymousClass1ar r0 = r22.A00;
                                                r0.A04 = filesDir2;
                                                r0.A01 = r3;
                                                com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_INSTANCE = r22.A00();
                                            } finally {
                                                A0021.A01();
                                            }
                                        }
                                    }
                                }
                                return com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_INSTANCE;
                            case 16:
                                return com.oculus.http.core.ApiModule.A0D(r16);
                            case 17:
                                return com.oculus.http.core.ApiModule.A0B(r16);
                            case 18:
                                return new SocialJobScheduler(r16, C003108z.A00(r16));
                            case 19:
                                return new OculusLoggerInit(r16);
                            case 20:
                                return new VRLifecycleJobScheduler(r16, C003108z.A00(r16));
                            case 21:
                                return OVRModule.IS_OSUPDATER_TEST_MODE_ENABLED_GK;
                            case 22:
                                if (FrescoModule._UL__ULSEP_com_facebook_imagepipeline_core_ImagePipeline_ULSEP_INSTANCE == null) {
                                    synchronized (C09801pc.class) {
                                        AnonymousClass0Pi A0023 = AnonymousClass0Pi.A00(FrescoModule._UL__ULSEP_com_facebook_imagepipeline_core_ImagePipeline_ULSEP_INSTANCE, r16);
                                        if (A0023 != null) {
                                            try {
                                                ((FrescoInit) A00(448, r16.getApplicationInjector())).init();
                                                C10051qt r12 = C10051qt.A0I;
                                                AnonymousClass0KU.A02(r12, "ImagePipelineFactory was not initialized!");
                                                C09801pc r02 = r12.A04;
                                                if (r02 == null) {
                                                    r02 = C10051qt.A05(r12);
                                                    r12.A04 = r02;
                                                }
                                                FrescoModule._UL__ULSEP_com_facebook_imagepipeline_core_ImagePipeline_ULSEP_INSTANCE = r02;
                                            } finally {
                                                A0023.A01();
                                            }
                                        }
                                    }
                                }
                                return FrescoModule._UL__ULSEP_com_facebook_imagepipeline_core_ImagePipeline_ULSEP_INSTANCE;
                            case 23:
                                return ApiRequestManager._UL__ULSEP_com_oculus_horizon_api_ApiRequestManager_ULSEP_FACTORY_METHOD(r16);
                            case 24:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_livestreaming_ULUNDERSCORE_enable_ULUNDERSCORE_all_ULUNDERSCORE_apps_ULSEP_FACTORY_METHOD(r16);
                            case 25:
                                return OVRModule.ENABLE_NEW_NOTIFICATIONS_SOUND;
                            case 26:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_breakpad_ULSEP_FACTORY_METHOD(r16);
                            case 27:
                                return new MediaUploaderDB();
                            case 28:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_quest_ULUNDERSCORE_playspace_ULUNDERSCORE_scan_ULSEP_FACTORY_METHOD(r16);
                            case 29:
                                return new LinkedAccountsCallerVerifier(r16);
                            case 30:
                                return new HorizonAuthDatastore(r16);
                            case 31:
                                return OVRModule.OCULUS_LICENSEMANAGER_ENABLE;
                            case 32:
                                return new OculusMediaUploaderServiceManager(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteById /*{ENCODED_INT: 33}*/:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_deviceconfig_ULUNDERSCORE_test_ULUNDERSCORE_enabled_ULSEP_FACTORY_METHOD(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteByName /*{ENCODED_INT: 34}*/:
                                return new CameraBitmapHelper(C003108z.A00(r16));
                            case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusById /*{ENCODED_INT: 35}*/:
                                return new AnonymousClass0Qp(r16, AnonymousClass112.A04);
                            case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusByName /*{ENCODED_INT: 36}*/:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_homebutton_ULUNDERSCORE_eattrigger_ULUNDERSCORE_spotfix_ULSEP_FACTORY_METHOD(r16);
                            case 37:
                                return OVRModule.ENABLE_FLAIL_LOCKOUT;
                            case OVRServiceInterface.Stub.TRANSACTION_languagePackGetCurrent /*{ENCODED_INT: 38}*/:
                                return new AssetBundleUtil(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_languagePackSetCurrent /*{ENCODED_INT: 39}*/:
                                return new FbnsPushLoginHandler(C003108z.A00(r16), AppInfoModule.A00(r16));
                            case OVRServiceInterface.Stub.TRANSACTION_getCloudStorage2UserDirectoryPath /*{ENCODED_INT: 40}*/:
                                return new DeviceConfigCallerVerifier(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_launchOtherApp /*{ENCODED_INT: 41}*/:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_multi_ULUNDERSCORE_user_ULUNDERSCORE_enabled_ULSEP_FACTORY_METHOD(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_setRichPresence /*{ENCODED_INT: 42}*/:
                                return new DropboxAPIMethods((RestAdapter) A00(365, r16));
                            case OVRServiceInterface.Stub.TRANSACTION_registerProcessToken /*{ENCODED_INT: 43}*/:
                                return new OVRMediaServiceManagerProvider(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_getViewerPurchasesDurableCacheJSON /*{ENCODED_INT: 44}*/:
                                return ErrorReportingModule.A00(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_getCurrentMapUuid /*{ENCODED_INT: 45}*/:
                                if (OculusFileDownloader._UL__ULSEP_com_oculus_appmanager_downloader_OculusFileDownloader_ULSEP_INSTANCE == null) {
                                    synchronized (OculusFileDownloader.class) {
                                        AnonymousClass0Pi A0024 = AnonymousClass0Pi.A00(OculusFileDownloader._UL__ULSEP_com_oculus_appmanager_downloader_OculusFileDownloader_ULSEP_INSTANCE, r16);
                                        if (A0024 != null) {
                                            try {
                                                OculusFileDownloader._UL__ULSEP_com_oculus_appmanager_downloader_OculusFileDownloader_ULSEP_INSTANCE = new OculusFileDownloader(r16.getApplicationInjector());
                                            } finally {
                                                A0024.A01();
                                            }
                                        }
                                    }
                                }
                                return OculusFileDownloader._UL__ULSEP_com_oculus_appmanager_downloader_OculusFileDownloader_ULSEP_INSTANCE;
                            case OVRServiceInterface.Stub.TRANSACTION_shareMap /*{ENCODED_INT: 46}*/:
                                return new PresenceInit(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_requestMap /*{ENCODED_INT: 47}*/:
                                if (PackageLauncherUtils._UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_INSTANCE == null) {
                                    synchronized (PackageLauncherUtils.class) {
                                        AnonymousClass0Pi A0025 = AnonymousClass0Pi.A00(PackageLauncherUtils._UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_INSTANCE, r16);
                                        if (A0025 != null) {
                                            try {
                                                PackageLauncherUtils._UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_INSTANCE = new PackageLauncherUtils(r16.getApplicationInjector());
                                            } finally {
                                                A0025.A01();
                                            }
                                        }
                                    }
                                }
                                return PackageLauncherUtils._UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_INSTANCE;
                            case OVRServiceInterface.Stub.TRANSACTION_getDeviceScopedAccessToken /*{ENCODED_INT: 48}*/:
                                if (AnonymousClass1ao.A0D == null) {
                                    synchronized (AnonymousClass1ao.class) {
                                        AnonymousClass0Pi A0026 = AnonymousClass0Pi.A00(AnonymousClass1ao.A0D, r16);
                                        if (A0026 != null) {
                                            try {
                                                AbstractC06640p5 applicationInjector4 = r16.getApplicationInjector();
                                                AnonymousClass1ao.A0D = new AnonymousClass1ao((AnonymousClass0Rp) A00(306, applicationInjector4), C003108z.A00(applicationInjector4), (AnonymousClass1aV) A00(227, applicationInjector4));
                                            } finally {
                                                A0026.A01();
                                            }
                                        }
                                    }
                                }
                                return AnonymousClass1ao.A0D;
                            case 49:
                                return UserAgentModule.A01(r16);
                            case GraphRequest.MAXIMUM_BATCH_SIZE /*{ENCODED_INT: 50}*/:
                                return new PartyEventFactory(r16);
                            case 51:
                                return OVRModule.ENABLE_NOTIFICATION_SOFT_FOLLOW;
                            case 52:
                                return new DefaultAppsSetupManager(r16);
                            case 53:
                                return OVRModule.ENABLE_MR_DATA_PERMISSION;
                            case 54:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_platformsdk_ULUNDERSCORE_parties_ULUNDERSCORE_voip_ULUNDERSCORE_with_ULUNDERSCORE_dsats_ULSEP_FACTORY_METHOD(r16);
                            case 55:
                                return LoginDeviceAuthTokenSubscriber._UL__ULSEP_com_oculus_auth_subscriber_LoginDeviceAuthTokenSubscriber_ULSEP_FACTORY_METHOD(r16);
                            case 56:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_livestreaming_ULSEP_FACTORY_METHOD(r16);
                            case 57:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_quest_ULUNDERSCORE_glanceable_ULUNDERSCORE_bounds_ULSEP_FACTORY_METHOD(r16);
                            case 58:
                                return new DurableIAPStorage(r16);
                            case 59:
                                return HttpModule.A01(r16);
                            case CastHTTPServerForWeb.WWW_ANSWER_TIMEOUT /*{ENCODED_INT: 60}*/:
                                return new WriteMetadataToFileProvider(r16);
                            case 61:
                                return OVRModule.ENABLE_QUEST_GLANCEABLE_BOUNDS;
                            case 62:
                                return UserAgentFactory.A01(r16);
                            case Hpack.PREFIX_6_BITS /*{ENCODED_INT: 63}*/:
                                return new AnonymousClass0Qp(r16, AnonymousClass112.A02);
                            case 64:
                                return new FrescoInit(r16);
                            case 65:
                                return OVRModule.USE_DSAT_FOR_PARTY_VOIP_GK;
                            case 66:
                                return new UploadMutationTaskProvider(r16);
                            case 67:
                                return new LinkedAccountsContentProviderLogger(r16);
                            case 68:
                                return OVRModule.OCULUS_TREX_SPATIALPERSISTENCE_KILLSW;
                            case 69:
                                return AntiPiracyMethods.A01(r16);
                            case 70:
                                return new MobileConfigServiceHelper(r16);
                            case 71:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_party_ULUNDERSCORE_voip_ULUNDERSCORE_use_ULUNDERSCORE_verts_ULUNDERSCORE_impl_ULSEP_FACTORY_METHOD(r16);
                            case FBConnectContentProvider.DEFAULT_PROFILE_PICTURE_SIZE /*{ENCODED_INT: 72}*/:
                                return AuthLogger._UL__ULSEP_com_oculus_auth_components_AuthLogger_ULSEP_FACTORY_METHOD(r16);
                            case 73:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_trex_ULUNDERSCORE_bodyapi_ULUNDERSCORE_killsw_ULSEP_FACTORY_METHOD(r16);
                            case 74:
                                return C003809k.A07(r16);
                            case 75:
                                return new MediaUploaderRequestRunner(r16);
                            case 76:
                                return new FacebookGamingProfileTokenManager(r16);
                            case 77:
                                return OVRModule.OCULUS_TREX_BODYAPI_KILLSW;
                            case 78:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_screenshot_ULUNDERSCORE_shortcut_ULSEP_FACTORY_METHOD(r16);
                            case 79:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_spacewarp_ULSEP_FACTORY_METHOD(r16);
                            case NotificationCompat$WearableExtender.DEFAULT_GRAVITY /*{ENCODED_INT: 80}*/:
                                return new UserProfileHelperLogoutHandler((UserProfileHelper) A00(68, r16));
                            case 81:
                                return new AnonymousClass0Qp(r16, AnonymousClass112.A0A);
                            case 82:
                                return AntiPiracyServiceScheduler.A01(r16);
                            case 83:
                                return OVRModule.ENABLE_MOBILE_SCREENSHOT_SHORTCUT;
                            case 84:
                                return UserClassifier.A00(r16);
                            case ScreenshotManager.COMPRESSION_QUALITY /*{ENCODED_INT: 85}*/:
                                return OVRModule.HOME_SHORTPRESS_LOGGING;
                            case 86:
                                return new AnonymousClass12f(C003108z.A02(r16));
                            case 87:
                                return new AppSwitchManager(r16);
                            case 88:
                                if (CoreAppManager._UL__ULSEP_com_oculus_coreapps_CoreAppManager_ULSEP_INSTANCE == null) {
                                    synchronized (CoreAppManager.class) {
                                        AnonymousClass0Pi A0027 = AnonymousClass0Pi.A00(CoreAppManager._UL__ULSEP_com_oculus_coreapps_CoreAppManager_ULSEP_INSTANCE, r16);
                                        if (A0027 != null) {
                                            try {
                                                CoreAppManager._UL__ULSEP_com_oculus_coreapps_CoreAppManager_ULSEP_INSTANCE = new CoreAppManager(r16.getApplicationInjector());
                                            } finally {
                                                A0027.A01();
                                            }
                                        }
                                    }
                                }
                                return CoreAppManager._UL__ULSEP_com_oculus_coreapps_CoreAppManager_ULSEP_INSTANCE;
                            case 89:
                                if (com.oculus.mediaupload.api.ApiModule._UL__ULSEP_okhttp3_OkHttpClient_ULSEP_com_oculus_mediaupload_api_FacebookHttpClient_ULSEP_INSTANCE == null) {
                                    synchronized (com.oculus.mediaupload.api.ApiModule._UL__ULSEP_okhttp3_OkHttpClient_ULSEP_com_oculus_mediaupload_api_FacebookHttpClient_ULSEP_LOCK) {
                                        AnonymousClass0Pi A0028 = AnonymousClass0Pi.A00(com.oculus.mediaupload.api.ApiModule._UL__ULSEP_okhttp3_OkHttpClient_ULSEP_com_oculus_mediaupload_api_FacebookHttpClient_ULSEP_INSTANCE, r16);
                                        if (A0028 != null) {
                                            try {
                                                AbstractC06640p5 applicationInjector5 = r16.getApplicationInjector();
                                                AnonymousClass0N1 A05 = HttpModule.A05(applicationInjector5);
                                                Context A0029 = C003108z.A00(applicationInjector5);
                                                PackageInfo A02 = C003809k.A02(applicationInjector5);
                                                String A01 = UserAgentModule.A01(applicationInjector5);
                                                Provider A012 = LocaleModule.A01(applicationInjector5);
                                                C08360wQ r23 = new C08360wQ(A05);
                                                ApiInterceptor A0030 = ApiInterceptor.A00(A0029, A02, A01, A012);
                                                List<AbstractC08380wS> list = r23.A0N;
                                                list.add(A0030);
                                                list.add(new GzipInterceptor());
                                                r23.A0K = AnonymousClass0S3.A00(Build.TIME);
                                                com.oculus.mediaupload.api.ApiModule._UL__ULSEP_okhttp3_OkHttpClient_ULSEP_com_oculus_mediaupload_api_FacebookHttpClient_ULSEP_INSTANCE = new AnonymousClass0N1(r23);
                                            } finally {
                                                A0028.A01();
                                            }
                                        }
                                    }
                                }
                                return com.oculus.mediaupload.api.ApiModule._UL__ULSEP_okhttp3_OkHttpClient_ULSEP_com_oculus_mediaupload_api_FacebookHttpClient_ULSEP_INSTANCE;
                            case 90:
                                return new AnonymousClass0Qp(r16, AnonymousClass112.A05);
                            case 91:
                                return OVRModule.ENABLE_UNKNOWN_SOURCES;
                            case 92:
                                return new FBConnectConfiguration(r16);
                            case 93:
                                return EndpointModule.A01();
                            case 94:
                                return LoginComponents._UL__ULSEP_com_oculus_auth_components_LoginComponents_ULSEP_FACTORY_METHOD(r16);
                            case 95:
                                return com.oculus.http.core.ApiModule.A00();
                            case 96:
                                return OVRModule.IS_LIVESTREAMING_ENABLED_GK;
                            case 97:
                                return new FBConnectDumperPlugin(r16);
                            case 98:
                                if (com.oculus.mediaupload.api.ApiModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_mediaupload_api_FacebookGraphRestAdapter_ULSEP_INSTANCE == null) {
                                    synchronized (com.oculus.mediaupload.api.ApiModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_mediaupload_api_FacebookGraphRestAdapter_ULSEP_LOCK) {
                                        AnonymousClass0Pi A0031 = AnonymousClass0Pi.A00(com.oculus.mediaupload.api.ApiModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_mediaupload_api_FacebookGraphRestAdapter_ULSEP_INSTANCE, r16);
                                        if (A0031 != null) {
                                            try {
                                                AbstractC06640p5 applicationInjector6 = r16.getApplicationInjector();
                                                String A04 = EndpointModule.A04(applicationInjector6);
                                                RestAdapter.LogLevel A08 = com.oculus.http.core.ApiModule.A08(applicationInjector6);
                                                ApiResponseConverter A0032 = ApiResponseConverter.A00(applicationInjector6);
                                                LoggingErrorHandler A0033 = LoggingErrorHandler.A00(applicationInjector6);
                                                RestAdapter.Builder builder = new RestAdapter.Builder();
                                                builder.setEndpoint(A04);
                                                builder.setErrorHandler(A0033);
                                                builder.setClient(new AnonymousClass0UJ((AnonymousClass0N1) A00(473, applicationInjector6)));
                                                builder.setConverter(A0032);
                                                builder.setLogLevel(A08);
                                                com.oculus.mediaupload.api.ApiModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_mediaupload_api_FacebookGraphRestAdapter_ULSEP_INSTANCE = builder.build();
                                            } finally {
                                                A0031.A01();
                                            }
                                        }
                                    }
                                }
                                return com.oculus.mediaupload.api.ApiModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_mediaupload_api_FacebookGraphRestAdapter_ULSEP_INSTANCE;
                            case 99:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_trex_ULUNDERSCORE_spatialpersistence_ULUNDERSCORE_killsw_ULSEP_FACTORY_METHOD(r16);
                            case 100:
                                return LoginDeviceAuthTokenSubscriberModule._UL__ULSEP_com_oculus_auth_device_DeviceAuthTokenSubscriber_ULSEP_FACTORY_METHOD(r16);
                            case 101:
                                return OVRModule.LIVESTREAMING_ENABLE_ALL_APPS_GK;
                            case FacebookRequestErrorClassification.EC_INVALID_SESSION /*{ENCODED_INT: 102}*/:
                                return FBConnectHelper._UL__ULSEP_com_oculus_horizon_fbconnect_FBConnectHelper_ULSEP_FACTORY_METHOD(r16);
                            case 103:
                                if (MobileConfigInit._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInit_ULSEP_INSTANCE == null) {
                                    synchronized (MobileConfigInit.class) {
                                        AnonymousClass0Pi A0034 = AnonymousClass0Pi.A00(MobileConfigInit._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInit_ULSEP_INSTANCE, r16);
                                        if (A0034 != null) {
                                            try {
                                                AbstractC06640p5 applicationInjector7 = r16.getApplicationInjector();
                                                MobileConfigInit._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInit_ULSEP_INSTANCE = new MobileConfigInit(applicationInjector7, new C003008y(294, applicationInjector7), new C003008y(193, applicationInjector7), new C01010Iv(529, applicationInjector7), new C01020Iw(399, applicationInjector7), CredentialsModule._UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_credentials_Credentials_ULGT__ULSEP_ACCESS_METHOD(applicationInjector7), LocaleModule.A01(applicationInjector7), new C003008y(428, applicationInjector7));
                                            } finally {
                                                A0034.A01();
                                            }
                                        }
                                    }
                                }
                                return MobileConfigInit._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInit_ULSEP_INSTANCE;
                            case 104:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_systemux_ULUNDERSCORE_notifications_ULUNDERSCORE_enable_ULUNDERSCORE_dnd_ULUNDERSCORE_count_ULSEP_FACTORY_METHOD(r16);
                            case 105:
                                return new VRLifecycleManager(r16, C003108z.A00(r16), new C01010Iv(8, r16));
                            case 106:
                                return new IAPCheckoutFlowResultBuilderProvider(r16);
                            case 107:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_chromecast_ULUNDERSCORE_101_ULUNDERSCORE_error_ULUNDERSCORE_keep_ULUNDERSCORE_connected_ULSEP_FACTORY_METHOD(r16);
                            case MinidumpReader.MODULE_FULL_SIZE /*{ENCODED_INT: 108}*/:
                                return new BuildConflictDataTaskProvider(r16);
                            case 109:
                                return new InstalledVRApplicationsResultBuilderProvider(r16);
                            case 110:
                                return new AppSharingUtils(r16);
                            case 111:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_chromecast_ULUNDERSCORE_init_ULUNDERSCORE_nsd_ULUNDERSCORE_on_ULUNDERSCORE_discovery_ULSEP_FACTORY_METHOD(r16);
                            case 112:
                                return AntiPiracyPushHelper.A00(r16);
                            case 114:
                                return OVRModule.IS_SYSTEM_UTILITIES_EXTRA_COMMANDS_ENABLED_GK;
                            case 115:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_batterystats_ULUNDERSCORE_bad_ULUNDERSCORE_sleep_ULSEP_FACTORY_METHOD(r16);
                            case 116:
                                return new SocialMethods(r16, com.oculus.http.core.ApiModule.A0C(r16));
                            case 117:
                                return new TrustedAppVerifier(r16);
                            case 118:
                                return OVRModule.ENABLE_HOMEBUTTON_EATTRIGGER_SPOTFIX;
                            case 119:
                                return new FbAuthHelper(r16);
                            case 120:
                                return new ErrorReporterLoginHandler(r16);
                            case 121:
                                return OVRModule.IS_SYSTEM_UTILITIES_ENABLED_GK;
                            case 122:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_hand_ULUNDERSCORE_tracking_ULUNDERSCORE_ga_ULSEP_FACTORY_METHOD(r16);
                            case 123:
                                return OVRModule.QUEST_PLAYSPACE_SCAN;
                            case 124:
                                return OVRLibraryModule.A02(r16);
                            case 125:
                                return new OVRLibraryPushHandler(r16);
                            case 126:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_battery_ULUNDERSCORE_drain_ULUNDERSCORE_service_ULUNDERSCORE_enabled_ULSEP_FACTORY_METHOD(r16);
                            case Hpack.PREFIX_7_BITS /*{ENCODED_INT: 127}*/:
                                return new RemoteWipeInit(r16);
                        }
                    } else if (i2 == 4) {
                        switch ((i >> 0) & Hpack.PREFIX_7_BITS) {
                            case 0:
                                if (ApplicationForegroundTracker._UL__ULSEP_com_oculus_horizon_foreground_ApplicationForegroundTracker_ULSEP_INSTANCE == null) {
                                    synchronized (ApplicationForegroundTracker.class) {
                                        AnonymousClass0Pi A0035 = AnonymousClass0Pi.A00(ApplicationForegroundTracker._UL__ULSEP_com_oculus_horizon_foreground_ApplicationForegroundTracker_ULSEP_INSTANCE, r16);
                                        if (A0035 != null) {
                                            try {
                                                ApplicationForegroundTracker._UL__ULSEP_com_oculus_horizon_foreground_ApplicationForegroundTracker_ULSEP_INSTANCE = new ApplicationForegroundTracker(r16.getApplicationInjector());
                                            } finally {
                                                A0035.A01();
                                            }
                                        }
                                    }
                                }
                                return ApplicationForegroundTracker._UL__ULSEP_com_oculus_horizon_foreground_ApplicationForegroundTracker_ULSEP_INSTANCE;
                            case 1:
                                return new CallerUtils(r16);
                            case 2:
                                return ExternalPlatformLocal._UL__ULSEP_com_oculus_horizon_service_ExternalPlatformLocal_ULSEP_FACTORY_METHOD(r16);
                            case 3:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_guardian_ULUNDERSCORE_mr_ULUNDERSCORE_desk_ULUNDERSCORE_gk_ULSEP_FACTORY_METHOD(r16);
                            case 4:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_systemux_ULUNDERSCORE_notifications_ULUNDERSCORE_enable_ULUNDERSCORE_soft_ULUNDERSCORE_follow_ULSEP_FACTORY_METHOD(r16);
                            case 5:
                                return ConfigModule._UL__ULSEP_com_oculus_config_gatekeeper_DynamicGatekeeperRegistry_ULSEP_FACTORY_METHOD(r16);
                            case 6:
                                return new StandaloneApplicationLike(r16);
                            case 7:
                                return new ScreenshotManager(r16);
                            case 8:
                                return OVRModule.ENABLE_MR_DESK_CREATION;
                            case 9:
                                return OVRModule.ENABLE_HFB_WAKE_WORD;
                            case 10:
                                return AnonymousClass094.A00();
                            case 12:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_assistant_ULUNDERSCORE_on_ULUNDERSCORE_oculus_ULSEP_FACTORY_METHOD(r16);
                            case 13:
                                if (FileCapture._UL__ULSEP_com_oculus_horizon_service_ULUNDERSCORE_media_FileCapture_ULSEP_INSTANCE == null) {
                                    synchronized (FileCapture.class) {
                                        AnonymousClass0Pi A0036 = AnonymousClass0Pi.A00(FileCapture._UL__ULSEP_com_oculus_horizon_service_ULUNDERSCORE_media_FileCapture_ULSEP_INSTANCE, r16);
                                        if (A0036 != null) {
                                            try {
                                                FileCapture._UL__ULSEP_com_oculus_horizon_service_ULUNDERSCORE_media_FileCapture_ULSEP_INSTANCE = new FileCapture(r16.getApplicationInjector());
                                            } finally {
                                                A0036.A01();
                                            }
                                        }
                                    }
                                }
                                return FileCapture._UL__ULSEP_com_oculus_horizon_service_ULUNDERSCORE_media_FileCapture_ULSEP_INSTANCE;
                            case 14:
                                return DUCModule.ENABLE_CACHE_GATING;
                            case 15:
                                return new CloudStorageLogger(r16);
                            case 16:
                                return new GetFileDownloadRequestsProvider(r16);
                            case 17:
                                if (com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_android_content_pm_PackageInfo_ULSEP_INSTANCE == null) {
                                    synchronized (com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_android_content_pm_PackageInfo_ULSEP_LOCK) {
                                        AnonymousClass0Pi A0037 = AnonymousClass0Pi.A00(com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_android_content_pm_PackageInfo_ULSEP_INSTANCE, r16);
                                        if (A0037 != null) {
                                            try {
                                                com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_android_content_pm_PackageInfo_ULSEP_INSTANCE = com.oculus.mobileconfig.init.MobileConfigInitModule.A00(C003108z.A02(r16.getApplicationInjector()));
                                            } finally {
                                                A0037.A01();
                                            }
                                        }
                                    }
                                }
                                return com.oculus.mobileconfig.init.MobileConfigInitModule._UL__ULSEP_android_content_pm_PackageInfo_ULSEP_INSTANCE;
                            case 18:
                                return ExecutorsModule.A01(r16);
                            case 19:
                                return C003809k.A05(r16);
                            case 20:
                                return OVRModule.ENABLE_WIFI_TELEMETRY;
                            case 21:
                                return new DropboxAPIInterceptor();
                            case 22:
                                return OVRModule.ENABLE_CHROMECAST_NATIVE_RECEIVER;
                            case 23:
                                return new GoogleAPIMethods((RestAdapter.Builder) A00(229, r16));
                            case 24:
                                return new WebRTCCapture(r16);
                            case 25:
                                return new ApkUpdateExtrasTable();
                            case 26:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_chromecast_ULUNDERSCORE_h264_ULUNDERSCORE_override_ULSEP_FACTORY_METHOD(r16);
                            case 27:
                                return new DefaultAppsGraphQLQuery();
                            case 28:
                                return OVRModule.ENABLE_HANDS_OPT_IN_MIGRATION;
                            case 29:
                                return new AnonymousClass0Qp(r16, AnonymousClass112.A09);
                            case 30:
                                return ConfigUpdaterLoginHandler._UL__ULSEP_com_oculus_config_updater_ConfigUpdaterLoginHandler_ULSEP_FACTORY_METHOD(r16);
                            case 31:
                                return new OculusTestSettingsDefaultImpl();
                            case 32:
                                return EndpointModule.A02();
                            case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteById /*{ENCODED_INT: 33}*/:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_sa_ULUNDERSCORE_transcribe_ULUNDERSCORE_enabled_ULSEP_FACTORY_METHOD(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteByName /*{ENCODED_INT: 34}*/:
                                return com.oculus.http.core.ApiModule.A02(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusById /*{ENCODED_INT: 35}*/:
                                return new MeManager(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusByName /*{ENCODED_INT: 36}*/:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_vrshell_ULUNDERSCORE_enable_ULUNDERSCORE_system_ULUNDERSCORE_utilities_ULSEP_FACTORY_METHOD(r16);
                            case 37:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_pointer_ULUNDERSCORE_pose_ULUNDERSCORE_filter_ULUNDERSCORE_tuning_ULSEP_FACTORY_METHOD(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_languagePackGetCurrent /*{ENCODED_INT: 38}*/:
                                if (SurfaceBroadcast._UL__ULSEP_com_oculus_horizon_capture_SurfaceBroadcast_ULSEP_INSTANCE == null) {
                                    synchronized (SurfaceBroadcast.class) {
                                        AnonymousClass0Pi A0038 = AnonymousClass0Pi.A00(SurfaceBroadcast._UL__ULSEP_com_oculus_horizon_capture_SurfaceBroadcast_ULSEP_INSTANCE, r16);
                                        if (A0038 != null) {
                                            try {
                                                r16.getApplicationInjector();
                                                SurfaceBroadcast._UL__ULSEP_com_oculus_horizon_capture_SurfaceBroadcast_ULSEP_INSTANCE = new SurfaceBroadcast();
                                            } finally {
                                                A0038.A01();
                                            }
                                        }
                                    }
                                }
                                return SurfaceBroadcast._UL__ULSEP_com_oculus_horizon_capture_SurfaceBroadcast_ULSEP_INSTANCE;
                            case OVRServiceInterface.Stub.TRANSACTION_languagePackSetCurrent /*{ENCODED_INT: 39}*/:
                                return DUCModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_duc_ULUNDERSCORE_local_ULUNDERSCORE_cache_ULUNDERSCORE_gating_ULUNDERSCORE_mobile_ULSEP_FACTORY_METHOD(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_getCloudStorage2UserDirectoryPath /*{ENCODED_INT: 40}*/:
                                return C003809k.A00(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_launchOtherApp /*{ENCODED_INT: 41}*/:
                                return new FileDownloadTaskProvider(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_setRichPresence /*{ENCODED_INT: 42}*/:
                                return OVRModule.ASSISTANT_ON_OCULUS;
                            case OVRServiceInterface.Stub.TRANSACTION_registerProcessToken /*{ENCODED_INT: 43}*/:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_chromecast_ULUNDERSCORE_remove_ULUNDERSCORE_ping_ULSEP_FACTORY_METHOD(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_getViewerPurchasesDurableCacheJSON /*{ENCODED_INT: 44}*/:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_settings_ULUNDERSCORE_hand_ULUNDERSCORE_tracking_ULSEP_FACTORY_METHOD(r16);
                            case OVRServiceInterface.Stub.TRANSACTION_getCurrentMapUuid /*{ENCODED_INT: 45}*/:
                                return new ApkUpdateSchemaPart((ApkUpdateTable) A00(283, r16), (ApkUpdateExtrasTable) A00(537, r16));
                            case OVRServiceInterface.Stub.TRANSACTION_requestMap /*{ENCODED_INT: 47}*/:
                                return OVRModule.ENABLE_HAND_TRACKING_FREQUENCY_INTERNAL;
                            case OVRServiceInterface.Stub.TRANSACTION_getDeviceScopedAccessToken /*{ENCODED_INT: 48}*/:
                                if (HeadlessHorizonModule._UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_INSTANCE == null) {
                                    synchronized (AppInfo.class) {
                                        AnonymousClass0Pi A0039 = AnonymousClass0Pi.A00(HeadlessHorizonModule._UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_INSTANCE, r16);
                                        if (A0039 != null) {
                                            try {
                                                r16.getApplicationInjector();
                                                HeadlessHorizonModule._UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_INSTANCE = new AppInfo();
                                            } finally {
                                                A0039.A01();
                                            }
                                        }
                                    }
                                }
                                return HeadlessHorizonModule._UL__ULSEP_com_oculus_base_app_AppInfo_ULSEP_INSTANCE;
                            case 49:
                                return new FacebookAuthManager(r16);
                            case GraphRequest.MAXIMUM_BATCH_SIZE /*{ENCODED_INT: 50}*/:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_media_ULUNDERSCORE_shared_ULUNDERSCORE_mic_ULSEP_FACTORY_METHOD(r16);
                            case 51:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_abuse_ULUNDERSCORE_prevention_ULUNDERSCORE_overlays_ULSEP_FACTORY_METHOD(r16);
                            case 52:
                                if (DurableIAPDatabaseSupplier._UL__ULSEP_com_oculus_durableiap_DurableIAPDatabaseSupplier_ULSEP_INSTANCE == null) {
                                    synchronized (DurableIAPDatabaseSupplier.class) {
                                        AnonymousClass0Pi A0040 = AnonymousClass0Pi.A00(DurableIAPDatabaseSupplier._UL__ULSEP_com_oculus_durableiap_DurableIAPDatabaseSupplier_ULSEP_INSTANCE, r16);
                                        if (A0040 != null) {
                                            try {
                                                AbstractC06640p5 applicationInjector8 = r16.getApplicationInjector();
                                                DurableIAPDatabaseSupplier._UL__ULSEP_com_oculus_durableiap_DurableIAPDatabaseSupplier_ULSEP_INSTANCE = new DurableIAPDatabaseSupplier(C003108z.A02(applicationInjector8), InterfacesModule.A00(applicationInjector8), (DurableIAPSchemaPart) A00(7, applicationInjector8));
                                            } finally {
                                                A0040.A01();
                                            }
                                        }
                                    }
                                }
                                return DurableIAPDatabaseSupplier._UL__ULSEP_com_oculus_durableiap_DurableIAPDatabaseSupplier_ULSEP_INSTANCE;
                            case 53:
                                return TrustedUserModule.IS_TRUSTED_USER_GK;
                            case 54:
                                return AnonymousClass094.A01(r16);
                            case 55:
                                return new InfoUtils(r16);
                            case 56:
                                return new AnonymousClass0Qp(r16, AnonymousClass112.A0C);
                            case 57:
                                return OVRLibraryModule.A01(r16);
                            case 58:
                                return OVRModule.ENABLE_CHROMECAST_REMOVE_PING;
                            case 59:
                                return new DownloaderContract(r16);
                            case CastHTTPServerForWeb.WWW_ANSWER_TIMEOUT /*{ENCODED_INT: 60}*/:
                                return PasswordEncryptionModule._UL__ULSEP_libraries_passwordencryption_PasswordEncryptionController_ULSEP_FACTORY_METHOD(r16);
                            case 61:
                                return OVRModule.HAND_TRACKING_GA;
                            case 62:
                                if (OculusLogger._UL__ULSEP_com_oculus_horizon_logging_OculusLogger_ULSEP_INSTANCE == null) {
                                    synchronized (OculusLogger.class) {
                                        AnonymousClass0Pi A0041 = AnonymousClass0Pi.A00(OculusLogger._UL__ULSEP_com_oculus_horizon_logging_OculusLogger_ULSEP_INSTANCE, r16);
                                        if (A0041 != null) {
                                            try {
                                                OculusLogger._UL__ULSEP_com_oculus_horizon_logging_OculusLogger_ULSEP_INSTANCE = new OculusLogger(r16.getApplicationInjector());
                                            } finally {
                                                A0041.A01();
                                            }
                                        }
                                    }
                                }
                                return OculusLogger._UL__ULSEP_com_oculus_horizon_logging_OculusLogger_ULSEP_INSTANCE;
                            case Hpack.PREFIX_6_BITS /*{ENCODED_INT: 63}*/:
                                return new UploadConflictDetectorProvider(r16);
                            case 64:
                                return OVRModule.ENABLE_BATTERY_DRAIN_SERVICE;
                            case 65:
                                return DefaultClientModule.A00(r16);
                            case 66:
                                return OVRModule.ENABLE_SPATIAL_ANCHOR;
                            case 67:
                                return OVRModule.MOBILE_SPACEWARP;
                            case 68:
                                return new FacebookMediaUploaderServiceManager(r16);
                            case 69:
                                return new EntitlementCheckResultBuilderProvider(r16);
                            case 70:
                                return OVRModule.ENABLE_VISION_BUGREPORTS;
                            case 71:
                                return ThreadUtils.A00();
                            case FBConnectContentProvider.DEFAULT_PROFILE_PICTURE_SIZE /*{ENCODED_INT: 72}*/:
                                return AnonymousClass1Ck.A00();
                            case 73:
                                return OVRModule.IS_SA_TRANSCRIBE_ENABLED_GK;
                            case 74:
                                return OVRModule.ENABLE_BAD_DISCHARGE_STATS;
                            case 75:
                                return OVRModule.DEVICECONFIG_TEST_73;
                            case 76:
                                return OVRModule.SETTINGS_HAND_TRACKING;
                            case 77:
                                if (HeadlessHorizonModule._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_INSTANCE == null) {
                                    synchronized (MobileConfigInitOptions.class) {
                                        AnonymousClass0Pi A0042 = AnonymousClass0Pi.A00(HeadlessHorizonModule._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_INSTANCE, r16);
                                        if (A0042 != null) {
                                            try {
                                                r16.getApplicationInjector();
                                                HeadlessHorizonModule._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_INSTANCE = new MobileConfigInitOptions(AnonymousClass0Rb.Oculus);
                                            } finally {
                                                A0042.A01();
                                            }
                                        }
                                    }
                                }
                                return HeadlessHorizonModule._UL__ULSEP_com_oculus_mobileconfig_init_MobileConfigInitOptions_ULSEP_INSTANCE;
                            case 78:
                                return new MobileConfigUpdater(r16);
                            case 79:
                                return OVRModule.MOBILE_POINTER_POSE;
                            case NotificationCompat$WearableExtender.DEFAULT_GRAVITY /*{ENCODED_INT: 80}*/:
                                return OVRModule.ENABLE_SAFETY_SIGNAL_COLLECTION;
                            case 81:
                                return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_vrshell_ULUNDERSCORE_focus_ULUNDERSCORE_awareness_ULUNDERSCORE_force_ULUNDERSCORE_enable_ULSEP_FACTORY_METHOD(r16);
                            case 82:
                                return new FBConnectLogoutHandler(r16);
                            case 83:
                                return OVRModule.ENABLE_NOTIFICATION_DND_AGGREGATION;
                        }
                    }
                    return A00(162, r16);
                }
                switch ((i >> 0) & Hpack.PREFIX_7_BITS) {
                    case 0:
                        return OVRModule.ENABLE_INTRUSION_DETECTION_HEADLESS;
                    case 1:
                        return new RemoteWipeMethods(com.oculus.http.core.ApiModule.A0C(r16));
                    case 2:
                        return new DownloaderInit(r16);
                    case 3:
                        return OVRModule.OCULUS_TREX_RUNTIMESERVICE_KILLSW;
                    case 4:
                        return OVRModule.ENABLE_SWAP_SYSTEM_BTN_HANDEDNESS;
                    case 5:
                        return OVRModule.ENABLE_GUARDIAN_INTERNAL_ANCHOR;
                    case 6:
                        return new ApkUpdateInfoProvider(r16);
                    case 7:
                        return new OVRProfile(r16);
                    case 8:
                        return ConfigUpdaterJobScheduler._UL__ULSEP_com_oculus_config_updater_ConfigUpdaterJobScheduler_ULSEP_FACTORY_METHOD(r16);
                    case 9:
                        return new FbnsPushDumperPlugin(r16);
                    case 10:
                        return OVRModule.ENABLE_DOUBLETAP_PASSTHROUGH;
                    case 11:
                        return C003309b.A04(r16);
                    case 12:
                        return new BugReporterMethods(r16, com.oculus.http.core.ApiModule.A0C(r16));
                    case 13:
                        return ServiceFutures.A00(r16);
                    case 14:
                        return new DownloadWildcardsTaskProvider(r16);
                    case 15:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_chromecast_ULUNDERSCORE_increase_ULUNDERSCORE_ping_ULUNDERSCORE_failure_ULUNDERSCORE_tolerance_ULSEP_FACTORY_METHOD(r16);
                    case 16:
                        return DebugMode.A01(r16);
                    case 17:
                        return OVRModule.ENABLE_PHONE_NOTIFICATIONS;
                    case 18:
                        return new ResolveConflictTaskProvider(r16);
                    case 19:
                        return new CaptureAnalytics(r16);
                    case 20:
                        return ApiModule._UL__ULSEP_okhttp3_OkHttpClient_ULSEP_com_oculus_auth_api_FacebookLoginHttpClient_ULSEP_FACTORY_METHOD(r16);
                    case 21:
                        return EndpointModule.A00();
                    case 22:
                        return new FBConnectInit(r16);
                    case 23:
                        return OVRModule.ENABLE_CONTROLLER_LED_CONTROL;
                    case 24:
                        return com.oculus.http.core.ApiModule.A09(r16);
                    case 25:
                        return OVRModule.ENABLE_APP_SAFETY_BINARY_CHECK;
                    case 26:
                        return OVRModule.IS_SYSTEM_UTILITIES_ANYTIMEUI_ENABLED_GK;
                    case 27:
                        return new ApkUpdateTable();
                    case 28:
                        return OVRModule.ENABLE_VRSHELL_IAP_IN_OVERLAY_DISABLE;
                    case 30:
                        return OVRModule.ENABLE_TOUR_GUIDE;
                    case 31:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_osupdater_ULUNDERSCORE_enable_ULUNDERSCORE_nonpersistent_ULSEP_FACTORY_METHOD(r16);
                    case 32:
                        return OVRModule.ENABLE_GUARDIAN_ON_SCREEN_CAPTURE;
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteById /*{ENCODED_INT: 33}*/:
                        return OVRModule.ENABLE_VR_BUGREPORTER;
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteByName /*{ENCODED_INT: 34}*/:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_osupdater_ULUNDERSCORE_enable_ULUNDERSCORE_traffic_ULUNDERSCORE_tracing_ULSEP_FACTORY_METHOD(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusById /*{ENCODED_INT: 35}*/:
                        return new MobileConfigConfiguration(r16, (MobileConfigInitOptions) A00(589, r16));
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusByName /*{ENCODED_INT: 36}*/:
                        return A00(518, r16);
                    case 37:
                        if (LinkedAccountsSQLiteHelper._UL__ULSEP_com_oculus_horizon_linkedaccounts_database_LinkedAccountsSQLiteHelper_ULSEP_INSTANCE == null) {
                            synchronized (LinkedAccountsSQLiteHelper.class) {
                                AnonymousClass0Pi A0043 = AnonymousClass0Pi.A00(LinkedAccountsSQLiteHelper._UL__ULSEP_com_oculus_horizon_linkedaccounts_database_LinkedAccountsSQLiteHelper_ULSEP_INSTANCE, r16);
                                if (A0043 != null) {
                                    try {
                                        AbstractC06640p5 applicationInjector9 = r16.getApplicationInjector();
                                        LinkedAccountsSQLiteHelper._UL__ULSEP_com_oculus_horizon_linkedaccounts_database_LinkedAccountsSQLiteHelper_ULSEP_INSTANCE = new LinkedAccountsSQLiteHelper(applicationInjector9, C003108z.A00(applicationInjector9));
                                    } finally {
                                        A0043.A01();
                                    }
                                }
                            }
                        }
                        return LinkedAccountsSQLiteHelper._UL__ULSEP_com_oculus_horizon_linkedaccounts_database_LinkedAccountsSQLiteHelper_ULSEP_INSTANCE;
                    case OVRServiceInterface.Stub.TRANSACTION_languagePackGetCurrent /*{ENCODED_INT: 38}*/:
                        return C003108z.A01(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_languagePackSetCurrent /*{ENCODED_INT: 39}*/:
                        return new DeviceScopedAccessTokenResultBuilderProvider(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_getCloudStorage2UserDirectoryPath /*{ENCODED_INT: 40}*/:
                        return new UnlockulusHelper();
                    case OVRServiceInterface.Stub.TRANSACTION_launchOtherApp /*{ENCODED_INT: 41}*/:
                        C003108z.A04();
                        break;
                    case OVRServiceInterface.Stub.TRANSACTION_setRichPresence /*{ENCODED_INT: 42}*/:
                        return new AnonymousClass0Qp(r16, AnonymousClass112.A06);
                    case OVRServiceInterface.Stub.TRANSACTION_registerProcessToken /*{ENCODED_INT: 43}*/:
                        return HttpCoreLogger.A01(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_getViewerPurchasesDurableCacheJSON /*{ENCODED_INT: 44}*/:
                        return new SsoManager(r16, (RestAdapter) A00(3, r16));
                    case OVRServiceInterface.Stub.TRANSACTION_getCurrentMapUuid /*{ENCODED_INT: 45}*/:
                        return AntiPiracySettingInitListener.A00(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_shareMap /*{ENCODED_INT: 46}*/:
                        return OVRModule.IS_OSUPDATER_NONPERSISTENT_ENABLED_GK;
                    case OVRServiceInterface.Stub.TRANSACTION_requestMap /*{ENCODED_INT: 47}*/:
                        if (AssetBroadcastDispatch._UL__ULSEP_com_oculus_appmanager_installer_broadcast_AssetBroadcastDispatch_ULSEP_INSTANCE == null) {
                            synchronized (AssetBroadcastDispatch.class) {
                                AnonymousClass0Pi A0044 = AnonymousClass0Pi.A00(AssetBroadcastDispatch._UL__ULSEP_com_oculus_appmanager_installer_broadcast_AssetBroadcastDispatch_ULSEP_INSTANCE, r16);
                                if (A0044 != null) {
                                    try {
                                        AssetBroadcastDispatch._UL__ULSEP_com_oculus_appmanager_installer_broadcast_AssetBroadcastDispatch_ULSEP_INSTANCE = new AssetBroadcastDispatch(r16.getApplicationInjector());
                                    } finally {
                                        A0044.A01();
                                    }
                                }
                            }
                        }
                        return AssetBroadcastDispatch._UL__ULSEP_com_oculus_appmanager_installer_broadcast_AssetBroadcastDispatch_ULSEP_INSTANCE;
                    case OVRServiceInterface.Stub.TRANSACTION_getDeviceScopedAccessToken /*{ENCODED_INT: 48}*/:
                        return new PlatformPushHandler(r16);
                    case 49:
                        return new OVRMediaServiceDumperPlugin(r16);
                    case GraphRequest.MAXIMUM_BATCH_SIZE /*{ENCODED_INT: 50}*/:
                        return A00(454, r16);
                    case 51:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_enable_ULUNDERSCORE_small_ULUNDERSCORE_finger_ULUNDERSCORE_opening_ULUNDERSCORE_pinch_ULSEP_FACTORY_METHOD(r16);
                    case 52:
                        return new LogoutHandlersRunner(r16);
                    case 53:
                        return new VrCastServiceConnection(r16);
                    case 54:
                        if (HorizonCredentialsManager._UL__ULSEP_com_oculus_horizon_auth_shared_ULUNDERSCORE_datastore_HorizonCredentialsManager_ULSEP_INSTANCE == null) {
                            synchronized (HorizonCredentialsManager.class) {
                                AnonymousClass0Pi A0045 = AnonymousClass0Pi.A00(HorizonCredentialsManager._UL__ULSEP_com_oculus_horizon_auth_shared_ULUNDERSCORE_datastore_HorizonCredentialsManager_ULSEP_INSTANCE, r16);
                                if (A0045 != null) {
                                    try {
                                        HorizonCredentialsManager._UL__ULSEP_com_oculus_horizon_auth_shared_ULUNDERSCORE_datastore_HorizonCredentialsManager_ULSEP_INSTANCE = new HorizonCredentialsManager(r16.getApplicationInjector());
                                    } finally {
                                        A0045.A01();
                                    }
                                }
                            }
                        }
                        return HorizonCredentialsManager._UL__ULSEP_com_oculus_horizon_auth_shared_ULUNDERSCORE_datastore_HorizonCredentialsManager_ULSEP_INSTANCE;
                    case 55:
                        return ConfigUpdaterLogoutHandler._UL__ULSEP_com_oculus_config_updater_ConfigUpdaterLogoutHandler_ULSEP_FACTORY_METHOD(r16);
                    case 56:
                        return new ConfigUpdaterInit(r16);
                    case 57:
                        return new AppScopedAccessTokenResultBuilderProvider(r16);
                    case 58:
                        return new AnonymousClass0Qp(r16, AnonymousClass112.A00);
                    case 59:
                        return new SetRichPresenceResultBuilderProvider(r16);
                    case CastHTTPServerForWeb.WWW_ANSWER_TIMEOUT /*{ENCODED_INT: 60}*/:
                        return OVRModule.ENABLE_CHROMECASTING;
                    case 61:
                        return new MediaUploaderNotifications();
                    case 62:
                        return new AnonymousClass0Qp(r16, AnonymousClass112.A0B);
                    case Hpack.PREFIX_6_BITS /*{ENCODED_INT: 63}*/:
                        if (DownloadExtras._UL__ULSEP_com_oculus_downloader_extras_DownloadExtras_ULSEP_INSTANCE == null) {
                            synchronized (DownloadExtras.class) {
                                AnonymousClass0Pi A0046 = AnonymousClass0Pi.A00(DownloadExtras._UL__ULSEP_com_oculus_downloader_extras_DownloadExtras_ULSEP_INSTANCE, r16);
                                if (A0046 != null) {
                                    try {
                                        DownloadExtras._UL__ULSEP_com_oculus_downloader_extras_DownloadExtras_ULSEP_INSTANCE = new DownloadExtras(r16.getApplicationInjector());
                                    } finally {
                                        A0046.A01();
                                    }
                                }
                            }
                        }
                        return DownloadExtras._UL__ULSEP_com_oculus_downloader_extras_DownloadExtras_ULSEP_INSTANCE;
                    case 64:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_homebutton_ULUNDERSCORE_freezeinput_ULUNDERSCORE_apichk_ULSEP_FACTORY_METHOD(r16);
                    case 65:
                        return A00(51, r16);
                    case 66:
                        return TrustedUserModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_is_ULUNDERSCORE_trusted_ULUNDERSCORE_user_ULSEP_FACTORY_METHOD(r16);
                    case 67:
                        if (ServiceMediaModule._UL__ULSEP_com_oculus_horizon_abuse_ULUNDERSCORE_prevention_interfaces_AbuseCaptureProvider_ULSEP_INSTANCE == null) {
                            synchronized (AbuseCaptureProvider.class) {
                                AnonymousClass0Pi A0047 = AnonymousClass0Pi.A00(ServiceMediaModule._UL__ULSEP_com_oculus_horizon_abuse_ULUNDERSCORE_prevention_interfaces_AbuseCaptureProvider_ULSEP_INSTANCE, r16);
                                if (A0047 != null) {
                                    try {
                                        ServiceMediaModule._UL__ULSEP_com_oculus_horizon_abuse_ULUNDERSCORE_prevention_interfaces_AbuseCaptureProvider_ULSEP_INSTANCE = (FileCapture) A00(525, r16.getApplicationInjector());
                                    } finally {
                                        A0047.A01();
                                    }
                                }
                            }
                        }
                        return ServiceMediaModule._UL__ULSEP_com_oculus_horizon_abuse_ULUNDERSCORE_prevention_interfaces_AbuseCaptureProvider_ULSEP_INSTANCE;
                    case 68:
                        return ConfigModule._UL__ULSEP_com_oculus_config_gatekeeper_GatekeeperRegistry_ULSEP_FACTORY_METHOD(r16);
                    case 69:
                        if (VRStateManager._UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_INSTANCE == null) {
                            synchronized (VRStateManager.class) {
                                AnonymousClass0Pi A0048 = AnonymousClass0Pi.A00(VRStateManager._UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_INSTANCE, r16);
                                if (A0048 != null) {
                                    try {
                                        r16.getApplicationInjector();
                                        VRStateManager._UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_INSTANCE = new VRStateManager();
                                    } finally {
                                        A0048.A01();
                                    }
                                }
                            }
                        }
                        return VRStateManager._UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_INSTANCE;
                    case 70:
                        if (FbQuicklogPerformanceLoggerModule._UL__ULSEP_com_oculus_perflogs_OculusPerformanceLogger_ULSEP_INSTANCE == null) {
                            synchronized (OculusPerformanceLogger.class) {
                                AnonymousClass0Pi A0049 = AnonymousClass0Pi.A00(FbQuicklogPerformanceLoggerModule._UL__ULSEP_com_oculus_perflogs_OculusPerformanceLogger_ULSEP_INSTANCE, r16);
                                if (A0049 != null) {
                                    try {
                                        FbQuicklogPerformanceLoggerModule._UL__ULSEP_com_oculus_perflogs_OculusPerformanceLogger_ULSEP_INSTANCE = (FbQuicklogPerformanceLogger) A00(175, r16.getApplicationInjector());
                                    } finally {
                                        A0049.A01();
                                    }
                                }
                            }
                        }
                        return FbQuicklogPerformanceLoggerModule._UL__ULSEP_com_oculus_perflogs_OculusPerformanceLogger_ULSEP_INSTANCE;
                    case 71:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_trex_ULUNDERSCORE_superres_ULUNDERSCORE_killsw_ULSEP_FACTORY_METHOD(r16);
                    case FBConnectContentProvider.DEFAULT_PROFILE_PICTURE_SIZE /*{ENCODED_INT: 72}*/:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_guardian_ULUNDERSCORE_spatial_ULUNDERSCORE_anchor_ULSEP_FACTORY_METHOD(r16);
                    case 73:
                        return LoginHandlersRunner._UL__ULSEP_com_oculus_auth_receiver_LoginHandlersRunner_ULSEP_FACTORY_METHOD(r16);
                    case 74:
                        if (OculusTestSettingsModule._UL__ULSEP_com_oculus_oculustestsettings_OculusTestSettings_ULSEP_INSTANCE == null) {
                            synchronized (OculusTestSettings.class) {
                                AnonymousClass0Pi A0050 = AnonymousClass0Pi.A00(OculusTestSettingsModule._UL__ULSEP_com_oculus_oculustestsettings_OculusTestSettings_ULSEP_INSTANCE, r16);
                                if (A0050 != null) {
                                    try {
                                        OculusTestSettingsModule._UL__ULSEP_com_oculus_oculustestsettings_OculusTestSettings_ULSEP_INSTANCE = (OculusTestSettingsDefaultImpl) A00(543, r16.getApplicationInjector());
                                    } finally {
                                        A0050.A01();
                                    }
                                }
                            }
                        }
                        return OculusTestSettingsModule._UL__ULSEP_com_oculus_oculustestsettings_OculusTestSettings_ULSEP_INSTANCE;
                    case 75:
                        return new ScreenCapture(r16);
                    case 76:
                        return new TvPushHandler(r16);
                    case 77:
                        return ExecutorsModule.A04();
                    case 78:
                        return C003809k.A06();
                    case 79:
                        if (SocialNotificationManager._UL__ULSEP_com_oculus_headlesshorizon_notifications_receivers_SocialNotificationManager_ULSEP_INSTANCE == null) {
                            synchronized (SocialNotificationManager.class) {
                                AnonymousClass0Pi A0051 = AnonymousClass0Pi.A00(SocialNotificationManager._UL__ULSEP_com_oculus_headlesshorizon_notifications_receivers_SocialNotificationManager_ULSEP_INSTANCE, r16);
                                if (A0051 != null) {
                                    try {
                                        SocialNotificationManager._UL__ULSEP_com_oculus_headlesshorizon_notifications_receivers_SocialNotificationManager_ULSEP_INSTANCE = new SocialNotificationManager(r16.getApplicationInjector());
                                    } finally {
                                        A0051.A01();
                                    }
                                }
                            }
                        }
                        return SocialNotificationManager._UL__ULSEP_com_oculus_headlesshorizon_notifications_receivers_SocialNotificationManager_ULSEP_INSTANCE;
                    case NotificationCompat$WearableExtender.DEFAULT_GRAVITY /*{ENCODED_INT: 80}*/:
                        return ApkUpdateDatabaseSupplier.A01(r16);
                    case 81:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_tour_ULUNDERSCORE_guide_ULSEP_FACTORY_METHOD(r16);
                    case 82:
                        return OVRModule.ENABLE_MULTI_USER;
                    case 83:
                        SharedPreferences sharedPreferences = (SharedPreferences) A00(34, r16);
                        String A022 = AnonymousClass0I1.A02("debug.oculus.graphtier");
                        if (!TextUtils.isEmpty(A022)) {
                            str = AnonymousClass006.A07("https://graph.", A022, ".oculus.com");
                        } else {
                            str = EndpointModule.ENDPOINT_OCULUS;
                        }
                        return sharedPreferences.getString(HorizonEndpointModule.KEY_CUSTOM_API_ENDPOINT, str);
                    case 84:
                        return OVRModule.ENABLE_VRSHELL_FOCUS_AWARENESS_FORCE_ENABLE;
                    case ScreenshotManager.COMPRESSION_QUALITY /*{ENCODED_INT: 85}*/:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_link_ULUNDERSCORE_no_ULUNDERSCORE_modal_ULSEP_FACTORY_METHOD(r16);
                    case 86:
                        return new AnonymousClass0Qp(r16, AnonymousClass112.A07);
                    case 87:
                        return HttpModule.A03();
                    case 88:
                        if (OculusDownloadProgressTracker._UL__ULSEP_com_oculus_appmanager_downloader_progress_OculusDownloadProgressTracker_ULSEP_INSTANCE == null) {
                            synchronized (OculusDownloadProgressTracker.class) {
                                AnonymousClass0Pi A0052 = AnonymousClass0Pi.A00(OculusDownloadProgressTracker._UL__ULSEP_com_oculus_appmanager_downloader_progress_OculusDownloadProgressTracker_ULSEP_INSTANCE, r16);
                                if (A0052 != null) {
                                    try {
                                        OculusDownloadProgressTracker._UL__ULSEP_com_oculus_appmanager_downloader_progress_OculusDownloadProgressTracker_ULSEP_INSTANCE = new OculusDownloadProgressTracker(r16.getApplicationInjector());
                                    } finally {
                                        A0052.A01();
                                    }
                                }
                            }
                        }
                        return OculusDownloadProgressTracker._UL__ULSEP_com_oculus_appmanager_downloader_progress_OculusDownloadProgressTracker_ULSEP_INSTANCE;
                    case 89:
                        return new MediaUploaderSyncServiceInit(r16);
                    case 90:
                        return HttpModule.A06(r16);
                    case 91:
                        return new HorizonDsatHelper(r16);
                    case 92:
                        return com.oculus.deviceconfigservice.MobileConfigInitModule.A00((AnonymousClass1ao) A00(432, r16), C003108z.A00(r16));
                    case 93:
                        return new AuthManager(r16);
                    case 94:
                        return OVRModule.ENABLE_SMALL_FINGER_OPENING_PINCH_THRESHOLD;
                    case 95:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_horizon_ULUNDERSCORE_chromecasting_ULSEP_FACTORY_METHOD(r16);
                    case 96:
                        return new VrCastServicePackageVerifier(r16);
                    case 97:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_enable_ULUNDERSCORE_flail_ULUNDERSCORE_lockout_ULSEP_FACTORY_METHOD(r16);
                    case 98:
                        return Clock.A00();
                    case 99:
                        return NoOpDeviceAuthTokenSubscriber._UL__ULSEP_com_oculus_auth_device_noop_ULUNDERSCORE_subscriber_NoOpDeviceAuthTokenSubscriber_ULSEP_FACTORY_METHOD(r16);
                    case 100:
                        C003108z.A05();
                        break;
                    case 101:
                        if (AnonymousClass121.A01 == null) {
                            synchronized (C09311at.class) {
                                AnonymousClass0Pi A0053 = AnonymousClass0Pi.A00(AnonymousClass121.A01, r16);
                                if (A0053 != null) {
                                    try {
                                        r16.getApplicationInjector();
                                        AnonymousClass121.A01 = new C09311at();
                                    } finally {
                                        A0053.A01();
                                    }
                                }
                            }
                        }
                        return AnonymousClass121.A01;
                    case FacebookRequestErrorClassification.EC_INVALID_SESSION /*{ENCODED_INT: 102}*/:
                        return OVRModule.MOBILE_BREAKPAD;
                    case 103:
                        return PasswordEncryptionLogger._UL__ULSEP_com_oculus_auth_service_passwordencryption_PasswordEncryptionLogger_ULSEP_FACTORY_METHOD(r16);
                    case 104:
                        return new FriendListContentProviderLogger(r16);
                    case 105:
                        return new NotificationsLogger(r16);
                    case 106:
                        return new FbnsPushProcessor(r16);
                    case 107:
                        return AccessTokenUtils._UL__ULSEP_com_oculus_auth_util_AccessTokenUtils_ULSEP_FACTORY_METHOD(r16);
                    case MinidumpReader.MODULE_FULL_SIZE /*{ENCODED_INT: 108}*/:
                        return ProfileProviderTrustedApps._UL__ULSEP_com_oculus_horizon_provider_ProfileProviderTrustedApps_ULSEP_FACTORY_METHOD(r16);
                    case 109:
                        if (DropboxAPIModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_horizon_accountlinking_dropbox_annotation_DropboxRestAdapter_ULSEP_INSTANCE == null) {
                            synchronized (DropboxAPIModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_horizon_accountlinking_dropbox_annotation_DropboxRestAdapter_ULSEP_LOCK) {
                                AnonymousClass0Pi A0054 = AnonymousClass0Pi.A00(DropboxAPIModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_horizon_accountlinking_dropbox_annotation_DropboxRestAdapter_ULSEP_INSTANCE, r16);
                                if (A0054 != null) {
                                    try {
                                        AbstractC06640p5 applicationInjector10 = r16.getApplicationInjector();
                                        DropboxAPIModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_horizon_accountlinking_dropbox_annotation_DropboxRestAdapter_ULSEP_INSTANCE = DropboxAPIModule.A00(HttpModule.A05(applicationInjector10), com.oculus.http.core.ApiModule.A06(applicationInjector10), com.oculus.http.core.ApiModule.A08(applicationInjector10), (UserAgentInterceptor) A00(187, applicationInjector10), (DropboxAPIInterceptor) A00(533, applicationInjector10), (DropboxAuthorizationInterceptor) A00(132, applicationInjector10));
                                    } finally {
                                        A0054.A01();
                                    }
                                }
                            }
                        }
                        return DropboxAPIModule._UL__ULSEP_retrofit_RestAdapter_ULSEP_com_oculus_horizon_accountlinking_dropbox_annotation_DropboxRestAdapter_ULSEP_INSTANCE;
                    case 110:
                        return OVRModule.ENABLE_MIRACAST;
                    case 111:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_homebutton_ULUNDERSCORE_freezeinput_ULSEP_FACTORY_METHOD(r16);
                    case 112:
                        return new FacebookShareMethods(r16, (RestAdapter) A00(482, r16));
                    case 113:
                        return ConfigModule._UL__ULSEP_android_content_SharedPreferences_ULSEP_com_oculus_config_annotations_GatekeeperSharedPrefs_ULSEP_FACTORY_METHOD(r16);
                    case 114:
                        return OVRModule.ENABLE_HOMEBUTTON_FREEZEINPUT;
                    case 115:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_intrusion_ULUNDERSCORE_detection_ULSEP_FACTORY_METHOD(r16);
                    case 116:
                        return new ReachabilityChecksMethods(com.oculus.http.core.ApiModule.A0C(r16));
                    case 117:
                        return C003309b.A01(r16);
                    case 118:
                        return OVRModule.ENABLE_INTRUSION_DETECTION;
                    case 119:
                        return SocketConfigModule.A00();
                    case 120:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_guardian_ULUNDERSCORE_nonsensitive_ULUNDERSCORE_telemetry_ULSEP_FACTORY_METHOD(r16);
                    case 121:
                        return new MediaUploadDumperPlugin(r16);
                    case 122:
                        return new SecondaryUserEnroller(r16);
                    case 123:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_enable_ULUNDERSCORE_hand_ULUNDERSCORE_tracking_ULUNDERSCORE_frequency_ULUNDERSCORE_inter_ULSEP_FACTORY_METHOD(r16);
                    case 124:
                        if (ManagedMode._UL__ULSEP_com_oculus_managed_ManagedMode_ULSEP_INSTANCE == null) {
                            synchronized (ManagedMode.class) {
                                AnonymousClass0Pi A0055 = AnonymousClass0Pi.A00(ManagedMode._UL__ULSEP_com_oculus_managed_ManagedMode_ULSEP_INSTANCE, r16);
                                if (A0055 != null) {
                                    try {
                                        ManagedMode._UL__ULSEP_com_oculus_managed_ManagedMode_ULSEP_INSTANCE = new ManagedMode(r16.getApplicationInjector());
                                    } finally {
                                        A0055.A01();
                                    }
                                }
                            }
                        }
                        return ManagedMode._UL__ULSEP_com_oculus_managed_ManagedMode_ULSEP_INSTANCE;
                    case 125:
                        return PlatformContext._UL__ULSEP_com_oculus_horizon_platform_PlatformContext_ULSEP_FACTORY_METHOD(r16);
                    case 126:
                        return new OculusPasswordEncryptionKeyStore(r16);
                    case Hpack.PREFIX_7_BITS /*{ENCODED_INT: 127}*/:
                        return new CompanionBinder(r16);
                }
                return new RemoteWipeManager(r16);
            } else {
                switch ((i >> 0) & Hpack.PREFIX_7_BITS) {
                    case 0:
                        return new UpdateAndRemoveFilesProvider(r16);
                    case 1:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_vrshell_ULUNDERSCORE_focus_ULUNDERSCORE_awareness_ULUNDERSCORE_push_ULUNDERSCORE_rollout_ULSEP_FACTORY_METHOD(r16);
                    case 2:
                        return FBConnectModule._UL__ULSEP_android_content_SharedPreferences_ULSEP_com_oculus_horizon_fbconnect_FBConnectSharedPrefs_ULSEP_FACTORY_METHOD(r16);
                    case 3:
                        return ConfigUpdaterMethods._UL__ULSEP_com_oculus_config_updater_ConfigUpdaterMethods_ULSEP_FACTORY_METHOD(r16);
                    case 4:
                        return new DropboxAuthorizationInterceptor(r16);
                    case 5:
                        return new DownloadMetadataToFileTaskProvider(r16);
                    case 6:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_home_ULUNDERSCORE_shortpress_ULUNDERSCORE_logging_ULSEP_FACTORY_METHOD(r16);
                    case 7:
                        return new AnonymousClass1ZV(r16);
                    case 8:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_trex_ULUNDERSCORE_runtimeclient_ULUNDERSCORE_killsw_ULSEP_FACTORY_METHOD(r16);
                    case 9:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_vrshell_ULUNDERSCORE_sysicons_ULUNDERSCORE_hands_ULSEP_FACTORY_METHOD(r16);
                    case 10:
                        return new GoogleAuthorizationInterceptor(r16);
                    case 11:
                        return AppInitModule.A00(r16);
                    case 12:
                        return new SignatureCheckProvider(r16);
                    case 13:
                        return new BackendUpdater(r16);
                    case 14:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_enable_ULUNDERSCORE_p2p_ULUNDERSCORE_dtx_ULSEP_FACTORY_METHOD(r16);
                    case 15:
                        if (PerfLogsHelper._UL__ULSEP_com_oculus_perflogs_impl_fbquicklog_PerfLogsHelper_ULSEP_INSTANCE == null) {
                            synchronized (PerfLogsHelper.class) {
                                AnonymousClass0Pi A0056 = AnonymousClass0Pi.A00(PerfLogsHelper._UL__ULSEP_com_oculus_perflogs_impl_fbquicklog_PerfLogsHelper_ULSEP_INSTANCE, r16);
                                if (A0056 != null) {
                                    try {
                                        PerfLogsHelper._UL__ULSEP_com_oculus_perflogs_impl_fbquicklog_PerfLogsHelper_ULSEP_INSTANCE = new PerfLogsHelper(r16.getApplicationInjector());
                                    } finally {
                                        A0056.A01();
                                    }
                                }
                            }
                        }
                        return PerfLogsHelper._UL__ULSEP_com_oculus_perflogs_impl_fbquicklog_PerfLogsHelper_ULSEP_INSTANCE;
                    case 16:
                        return new OculusXAnalyticsProvider(r16);
                    case 17:
                        return new CaptureDelegateFactory(r16);
                    case 18:
                        return new CastHTTPServerManagerProvider(r16);
                    case 19:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_vrshell_ULUNDERSCORE_enable_ULUNDERSCORE_system_ULUNDERSCORE_utilities_ULUNDERSCORE_extra_ULUNDERSCORE_cmds_ULSEP_FACTORY_METHOD(r16);
                    case 20:
                        return new PresenceActivityLifecycleCallbacks(r16);
                    case 21:
                        return new OVRMediaServiceNotification(r16);
                    case 22:
                        return ConfigController._UL__ULSEP_com_oculus_config_ConfigController_ULSEP_FACTORY_METHOD(r16);
                    case 23:
                        if (InstallerAnalytics._UL__ULSEP_com_oculus_appmanager_installer_analytics_InstallerAnalytics_ULSEP_INSTANCE == null) {
                            synchronized (InstallerAnalytics.class) {
                                AnonymousClass0Pi A0057 = AnonymousClass0Pi.A00(InstallerAnalytics._UL__ULSEP_com_oculus_appmanager_installer_analytics_InstallerAnalytics_ULSEP_INSTANCE, r16);
                                if (A0057 != null) {
                                    try {
                                        InstallerAnalytics._UL__ULSEP_com_oculus_appmanager_installer_analytics_InstallerAnalytics_ULSEP_INSTANCE = new InstallerAnalytics(r16.getApplicationInjector());
                                    } finally {
                                        A0057.A01();
                                    }
                                }
                            }
                        }
                        return InstallerAnalytics._UL__ULSEP_com_oculus_appmanager_installer_analytics_InstallerAnalytics_ULSEP_INSTANCE;
                    case 24:
                        if (UploaderModule._UL__ULSEP_com_facebook_fbuploader_FbUploaderImpl_ULSEP_INSTANCE == null) {
                            synchronized (AnonymousClass1Q8.class) {
                                AnonymousClass0Pi A0058 = AnonymousClass0Pi.A00(UploaderModule._UL__ULSEP_com_facebook_fbuploader_FbUploaderImpl_ULSEP_INSTANCE, r16);
                                if (A0058 != null) {
                                    try {
                                        UploaderModule._UL__ULSEP_com_facebook_fbuploader_FbUploaderImpl_ULSEP_INSTANCE = new AnonymousClass1Q8((OculusHttpRequestExecutor) A00(79, r16.getApplicationInjector()));
                                    } finally {
                                        A0058.A01();
                                    }
                                }
                            }
                        }
                        return UploaderModule._UL__ULSEP_com_facebook_fbuploader_FbUploaderImpl_ULSEP_INSTANCE;
                    case 25:
                        return new AnonymousClass0Qp(r16, AnonymousClass112.A08);
                    case 26:
                        return new MediaUploaderServiceManager(r16);
                    case 27:
                        return FBConnectMethods._UL__ULSEP_com_oculus_horizon_fbconnect_FBConnectMethods_ULSEP_FACTORY_METHOD(r16);
                    case 28:
                        return new TaskDelayFactory();
                    case 29:
                        return ConfigUpdater._UL__ULSEP_com_oculus_config_updater_ConfigUpdater_ULSEP_FACTORY_METHOD(r16);
                    case 30:
                        return new OculusContentProviderLogger(r16);
                    case 31:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_enable_ULUNDERSCORE_guardian_ULUNDERSCORE_on_ULUNDERSCORE_screen_ULUNDERSCORE_capture_ULSEP_FACTORY_METHOD(r16);
                    case 32:
                        if (PlatformPluginModule._UL__ULSEP_com_oculus_horizon_platformplugin_PlatformPluginManager_ULSEP_INSTANCE == null) {
                            synchronized (PlatformPluginManager.class) {
                                AnonymousClass0Pi A0059 = AnonymousClass0Pi.A00(PlatformPluginModule._UL__ULSEP_com_oculus_horizon_platformplugin_PlatformPluginManager_ULSEP_INSTANCE, r16);
                                if (A0059 != null) {
                                    try {
                                        AbstractC06640p5 applicationInjector11 = r16.getApplicationInjector();
                                        PlatformPluginModule._UL__ULSEP_com_oculus_horizon_platformplugin_PlatformPluginManager_ULSEP_INSTANCE = new PlatformPluginManager(C003108z.A00(applicationInjector11), (VRStateManager) A00(325, applicationInjector11), (UserProfileHelper) A00(68, applicationInjector11), (MediaSessionLifecycleManager) A00(99, applicationInjector11), (OculusLogger) A00(574, applicationInjector11), DeviceUtils.A00(applicationInjector11), (SocialMethods) A00(500, applicationInjector11), (NotificationBuilder) A00(14, applicationInjector11), (AbstractC06600ny) A00(399, applicationInjector11), (ManagedMode) A00(380, applicationInjector11), (DeeplinkIntentUtils) A00(66, applicationInjector11), (PartyEventFactory) A00(434, applicationInjector11));
                                    } finally {
                                        A0059.A01();
                                    }
                                }
                            }
                        }
                        return PlatformPluginModule._UL__ULSEP_com_oculus_horizon_platformplugin_PlatformPluginManager_ULSEP_INSTANCE;
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteById /*{ENCODED_INT: 33}*/:
                        return OVRModule.ENABLE_VR_KEYBOARD;
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileDeleteByName /*{ENCODED_INT: 34}*/:
                        if (GkSessionlessModule.A04 == null) {
                            synchronized (GkSessionlessModule.A01) {
                                AnonymousClass0Pi A0060 = AnonymousClass0Pi.A00(GkSessionlessModule.A04, r16);
                                if (A0060 != null) {
                                    try {
                                        AbstractC06640p5 applicationInjector12 = r16.getApplicationInjector();
                                        Context A023 = C003108z.A02(applicationInjector12);
                                        AnonymousClass12I r4 = (AnonymousClass12I) A00(247, applicationInjector12);
                                        AnonymousClass11r r32 = (AnonymousClass11r) A00(50, applicationInjector12);
                                        Context applicationContext = A023.getApplicationContext();
                                        if (r4 != null) {
                                            GkSessionlessModule.A04 = new AnonymousClass12L(r4, new C09691oo(r4, applicationContext.getDir("sessionless_gatekeepers", 0)), r32);
                                        } else {
                                            throw new IllegalStateException();
                                        }
                                    } finally {
                                        A0060.A01();
                                    }
                                }
                            }
                        }
                        return GkSessionlessModule.A04;
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusById /*{ENCODED_INT: 35}*/:
                        return OVRModule.ENABLE_MRSERVICE_INSIGHTSDK;
                    case OVRServiceInterface.Stub.TRANSACTION_assetFileStatusByName /*{ENCODED_INT: 36}*/:
                        return GraphQLQuery.A00();
                    case 37:
                        return DeviceUtils.A01(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_languagePackGetCurrent /*{ENCODED_INT: 38}*/:
                        return new HorizonCallerPackageVerifier(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_languagePackSetCurrent /*{ENCODED_INT: 39}*/:
                        return OVRModule.OCULUS_TREX_RUNTIMECLIENT_KILLSW;
                    case OVRServiceInterface.Stub.TRANSACTION_getCloudStorage2UserDirectoryPath /*{ENCODED_INT: 40}*/:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mrservice_ULUNDERSCORE_insightsdk_ULSEP_FACTORY_METHOD(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_launchOtherApp /*{ENCODED_INT: 41}*/:
                        return new DurableIAPMethods(com.oculus.http.core.ApiModule.A0C(r16));
                    case OVRServiceInterface.Stub.TRANSACTION_setRichPresence /*{ENCODED_INT: 42}*/:
                        return new DurableIAPJobScheduler(r16, C003108z.A00(r16));
                    case OVRServiceInterface.Stub.TRANSACTION_registerProcessToken /*{ENCODED_INT: 43}*/:
                        return OculusConstants.HORIZON_USER_AGENT_APP_NAME;
                    case OVRServiceInterface.Stub.TRANSACTION_getViewerPurchasesDurableCacheJSON /*{ENCODED_INT: 44}*/:
                        return new OculusIntentLogger(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_getCurrentMapUuid /*{ENCODED_INT: 45}*/:
                        return new LatestAvailableAppInformationResultBuilderProvider(r16);
                    case OVRServiceInterface.Stub.TRANSACTION_shareMap /*{ENCODED_INT: 46}*/:
                        return OVRModule.ENABLE_DEVICECONFIG_TEST;
                    case OVRServiceInterface.Stub.TRANSACTION_requestMap /*{ENCODED_INT: 47}*/:
                        if (FbQuicklogPerformanceLogger._UL__ULSEP_com_oculus_perflogs_impl_fbquicklog_FbQuicklogPerformanceLogger_ULSEP_INSTANCE == null) {
                            synchronized (FbQuicklogPerformanceLogger.class) {
                                AnonymousClass0Pi A0061 = AnonymousClass0Pi.A00(FbQuicklogPerformanceLogger._UL__ULSEP_com_oculus_perflogs_impl_fbquicklog_FbQuicklogPerformanceLogger_ULSEP_INSTANCE, r16);
                                if (A0061 != null) {
                                    try {
                                        FbQuicklogPerformanceLogger._UL__ULSEP_com_oculus_perflogs_impl_fbquicklog_FbQuicklogPerformanceLogger_ULSEP_INSTANCE = new FbQuicklogPerformanceLogger((PerfLogsHelper) A00(143, r16.getApplicationInjector()));
                                    } finally {
                                        A0061.A01();
                                    }
                                }
                            }
                        }
                        return FbQuicklogPerformanceLogger._UL__ULSEP_com_oculus_perflogs_impl_fbquicklog_FbQuicklogPerformanceLogger_ULSEP_INSTANCE;
                    case OVRServiceInterface.Stub.TRANSACTION_getDeviceScopedAccessToken /*{ENCODED_INT: 48}*/:
                        return new DefaultAppsSetupListener(r16);
                    case 49:
                        return OVRModule.USE_VERTS_PARTY_VOIP_GK;
                    case GraphRequest.MAXIMUM_BATCH_SIZE /*{ENCODED_INT: 50}*/:
                        return OVRModule.ENABLE_BUGREPORTER_V2;
                    case 51:
                        return OVRModule.ENABLE_CONFIGURABLE_MTP_DIALOG;
                    case 52:
                        return FBAuthMethods._UL__ULSEP_com_oculus_auth_api_FBAuthMethods_ULSEP_FACTORY_METHOD(r16);
                    case 53:
                        return new VRUtils(C003108z.A02(r16));
                    case 54:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_trex_ULUNDERSCORE_runtimeservice_ULUNDERSCORE_killsw_ULSEP_FACTORY_METHOD(r16);
                    case 55:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_intrusion_ULUNDERSCORE_detection_ULUNDERSCORE_headless_ULSEP_FACTORY_METHOD(r16);
                    case 56:
                        return new UploadSyncTaskProvider(r16);
                    case 57:
                        return new GetCloudStorage2UserDirectoryPathResultBuilderProvider(r16);
                    case 58:
                        return AuthModule._UL__ULSEP_com_facebook_secure_trustedapp_TrustedApp_ULSEP_com_oculus_auth_service_ForAuthModule_ULSEP_FACTORY_METHOD(r16);
                    case 59:
                        return UserAgentInterceptor.A00(r16);
                    case CastHTTPServerForWeb.WWW_ANSWER_TIMEOUT /*{ENCODED_INT: 60}*/:
                        return DsatHelper._UL__ULSEP_com_oculus_auth_components_DsatHelper_ULSEP_FACTORY_METHOD(r16);
                    case 61:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_osupdater_ULUNDERSCORE_enable_ULUNDERSCORE_test_ULUNDERSCORE_mode_ULSEP_FACTORY_METHOD(r16);
                    case 62:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_configurable_ULUNDERSCORE_mtp_ULUNDERSCORE_dialog_ULSEP_FACTORY_METHOD(r16);
                    case Hpack.PREFIX_6_BITS /*{ENCODED_INT: 63}*/:
                        return new WipeTelemetry(r16);
                    case 64:
                        if (ForegroundAppChecker._UL__ULSEP_com_oculus_horizon_service_ULUNDERSCORE_media_ForegroundAppChecker_ULSEP_INSTANCE == null) {
                            synchronized (ForegroundAppChecker.class) {
                                AnonymousClass0Pi A0062 = AnonymousClass0Pi.A00(ForegroundAppChecker._UL__ULSEP_com_oculus_horizon_service_ULUNDERSCORE_media_ForegroundAppChecker_ULSEP_INSTANCE, r16);
                                if (A0062 != null) {
                                    try {
                                        ForegroundAppChecker._UL__ULSEP_com_oculus_horizon_service_ULUNDERSCORE_media_ForegroundAppChecker_ULSEP_INSTANCE = new ForegroundAppChecker(r16.getApplicationInjector());
                                    } finally {
                                        A0062.A01();
                                    }
                                }
                            }
                        }
                        return ForegroundAppChecker._UL__ULSEP_com_oculus_horizon_service_ULUNDERSCORE_media_ForegroundAppChecker_ULSEP_INSTANCE;
                    case 65:
                        return A00(144, r16);
                    case 66:
                        return OVRModule.IS_OSUPDATER_TRAFFIC_TRACING_ENABLED_GK;
                    case 67:
                        Context A024 = C003108z.A02(r16);
                        return new AnonymousClass20E(A024, A024.getPackageManager());
                    case 68:
                        return new DurableIAPResultBuilderProvider(r16);
                    case 69:
                        return new MediaUploaderMetadataHelper(r16);
                    case 70:
                        return LocaleModule.A00(r16);
                    case 71:
                        if (HorizonCredentialsModule._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_INSTANCE == null) {
                            synchronized (CredentialsManager.class) {
                                AnonymousClass0Pi A0063 = AnonymousClass0Pi.A00(HorizonCredentialsModule._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_INSTANCE, r16);
                                if (A0063 != null) {
                                    try {
                                        HorizonCredentialsModule._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_INSTANCE = (HorizonCredentialsManager) A00(310, r16.getApplicationInjector());
                                    } finally {
                                        A0063.A01();
                                    }
                                }
                            }
                        }
                        return HorizonCredentialsModule._UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_INSTANCE;
                    case FBConnectContentProvider.DEFAULT_PROFILE_PICTURE_SIZE /*{ENCODED_INT: 72}*/:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_vrshell_ULUNDERSCORE_enable_ULUNDERSCORE_system_ULUNDERSCORE_utilities_ULUNDERSCORE_anytimeui_ULSEP_FACTORY_METHOD(r16);
                    case 73:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_enable_ULUNDERSCORE_controller_ULUNDERSCORE_led_ULUNDERSCORE_control_ULSEP_FACTORY_METHOD(r16);
                    case 74:
                        return ExternalPlatformNetwork._UL__ULSEP_com_oculus_horizon_service_ExternalPlatformNetwork_ULSEP_FACTORY_METHOD(r16);
                    case 75:
                        return new AbuseAVCapture(r16);
                    case 76:
                        return StorageLoggingUtils.A00(r16);
                    case 77:
                        return TrustedUserModule.IS_NON_EMPLOYEE_BUG_REPORT;
                    case 78:
                        return new AppInitializer(r16);
                    case 79:
                        return OVRModule.ENABLE_GUARDIAN_NONSENSITIVE_TELEMETRY;
                    case NotificationCompat$WearableExtender.DEFAULT_GRAVITY /*{ENCODED_INT: 80}*/:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_new_ULUNDERSCORE_notifications_ULUNDERSCORE_sound_ULSEP_FACTORY_METHOD(r16);
                    case 81:
                        if (OkTigonService._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_INSTANCE == null) {
                            synchronized (OkTigonService.class) {
                                AnonymousClass0Pi A0064 = AnonymousClass0Pi.A00(OkTigonService._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_INSTANCE, r16);
                                if (A0064 != null) {
                                    try {
                                        AbstractC06640p5 applicationInjector13 = r16.getApplicationInjector();
                                        OkTigonService._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_INSTANCE = new OkTigonService((AnonymousClass0N1) A00(577, applicationInjector13), (String) A00(433, applicationInjector13));
                                    } finally {
                                        A0064.A01();
                                    }
                                }
                            }
                        }
                        return OkTigonService._UL__ULSEP_com_facebook_tigon_oktigon_OkTigonService_ULSEP_INSTANCE;
                    case 82:
                        return OVRAuthModule.A00(r16);
                    case 83:
                        return AppScopedTokenHelper._UL__ULSEP_com_oculus_auth_components_AppScopedTokenHelper_ULSEP_FACTORY_METHOD(r16);
                    case 84:
                        return new ServiceLogger(r16);
                    case ScreenshotManager.COMPRESSION_QUALITY /*{ENCODED_INT: 85}*/:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_trex_ULUNDERSCORE_fitnesstracker_ULUNDERSCORE_killsw_ULSEP_FACTORY_METHOD(r16);
                    case 86:
                        return com.oculus.http.core.ApiModule.A07(r16);
                    case 87:
                        return OVRModule.ENABLE_VRSHELL_FOCUS_AWARENESS_PUSH_ROLLOUT;
                    case 88:
                        return new FBLoginComponents(r16);
                    case 89:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_mobile_ULUNDERSCORE_enable_ULUNDERSCORE_phone_ULUNDERSCORE_notifications_ULSEP_FACTORY_METHOD(r16);
                    case 90:
                        return C003108z.A00(r16).getSharedPreferences(HorizonCredentialsModule.SHARED_PREFS, 0);
                    case 91:
                        return new InstantReplayHelper(r16);
                    case 92:
                        return new AnonymousClass0Qp(r16, AnonymousClass112.A01);
                    case 93:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_quest_ULUNDERSCORE_passthrough_ULUNDERSCORE_background_ULUNDERSCORE_quickboot_ULSEP_FACTORY_METHOD(r16);
                    case 94:
                        return OVRModule.ENABLE_WIFI_SLEEP;
                    case 95:
                        return new UserManagerUpdaterServiceStarter(r16);
                    case 96:
                        return new UserHandleInternal();
                    case 97:
                        return AndroidModule.A00();
                    case 98:
                        return new DeeplinkDumperPlugin(r16);
                    case 99:
                        return new AnonymousClass1aV(C003108z.A00(r16));
                    case 100:
                        return new ConfigUpdaterLogger(r16);
                    case 101:
                        if (GoogleAPIModule._UL__ULSEP_retrofit_RestAdapter_Builder_ULSEP_com_oculus_horizon_accountlinking_google_annotation_GoogleRestAdapterBuilder_ULSEP_INSTANCE == null) {
                            synchronized (GoogleAPIModule._UL__ULSEP_retrofit_RestAdapter_Builder_ULSEP_com_oculus_horizon_accountlinking_google_annotation_GoogleRestAdapterBuilder_ULSEP_LOCK) {
                                AnonymousClass0Pi A0065 = AnonymousClass0Pi.A00(GoogleAPIModule._UL__ULSEP_retrofit_RestAdapter_Builder_ULSEP_com_oculus_horizon_accountlinking_google_annotation_GoogleRestAdapterBuilder_ULSEP_INSTANCE, r16);
                                if (A0065 != null) {
                                    try {
                                        AbstractC06640p5 applicationInjector14 = r16.getApplicationInjector();
                                        GoogleAPIModule._UL__ULSEP_retrofit_RestAdapter_Builder_ULSEP_com_oculus_horizon_accountlinking_google_annotation_GoogleRestAdapterBuilder_ULSEP_INSTANCE = GoogleAPIModule.A00(HttpModule.A05(applicationInjector14), com.oculus.http.core.ApiModule.A06(applicationInjector14), com.oculus.http.core.ApiModule.A08(applicationInjector14), (UserAgentInterceptor) A00(187, applicationInjector14), ApiResponseConverter.A00(applicationInjector14), (GoogleAuthorizationInterceptor) A00(138, applicationInjector14));
                                    } finally {
                                        A0065.A01();
                                    }
                                }
                            }
                        }
                        return GoogleAPIModule._UL__ULSEP_retrofit_RestAdapter_Builder_ULSEP_com_oculus_horizon_accountlinking_google_annotation_GoogleRestAdapterBuilder_ULSEP_INSTANCE;
                    case FacebookRequestErrorClassification.EC_INVALID_SESSION /*{ENCODED_INT: 102}*/:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_vrbugreporter_ULUNDERSCORE_enabled_ULSEP_FACTORY_METHOD(r16);
                    case 103:
                        return CallerInfoProviderImpl.A01(r16);
                    case 104:
                        return new VrCastManager(r16);
                    case 105:
                        return new DUCHelper.GkWrapper(r16);
                    case 106:
                        return new MobileConfigLoginHandler(r16);
                    case 107:
                        return OVRModule.ENABLE_LINK_NO_MODAL;
                    case MinidumpReader.MODULE_FULL_SIZE /*{ENCODED_INT: 108}*/:
                        return OVRModule.ASSISTANT_OCULUS_USE_MESSAGE_BUS;
                    case 109:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_assistant_ULUNDERSCORE_oculus_ULUNDERSCORE_use_ULUNDERSCORE_message_ULUNDERSCORE_bus_ULSEP_FACTORY_METHOD(r16);
                    case 110:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oc_ULUNDERSCORE_app_ULUNDERSCORE_safety_ULUNDERSCORE_binary_ULUNDERSCORE_check_ULSEP_FACTORY_METHOD(r16);
                    case 111:
                        return new DUCHelper(r16);
                    case 112:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_quest_ULUNDERSCORE_passthrough_ULUNDERSCORE_ondemand_ULSEP_FACTORY_METHOD(r16);
                    case 113:
                        return new VideoUploaderMethods(com.oculus.http.core.ApiModule.A0C(r16), ThreadUtils.A01(r16));
                    case 114:
                        return UtilsModule.A00(r16);
                    case 115:
                        return OVRModule._UL__ULSEP_java_lang_Boolean_ULSEP_com_google_inject_name_Named_ULUNDERSCORE_oculus_ULUNDERSCORE_vrshell_ULUNDERSCORE_iap_ULUNDERSCORE_in_ULUNDERSCORE_overlay_ULUNDERSCORE_disable_ULSEP_FACTORY_METHOD(r16);
                    case 116:
                        return OVRModule.ENABLE_LINK_VRSHELL_MODAL;
                    case 117:
                        return new FBConnectLoginHandler(r16);
                    case 118:
                        return ConfigUpdaterModule.provideGatekeeperRefreshInterval();
                    case 119:
                        if (GkSessionlessModule.A03 == null) {
                            synchronized (GkSessionlessModule.A00) {
                                AnonymousClass0Pi A0066 = AnonymousClass0Pi.A00(GkSessionlessModule.A03, r16);
                                if (A0066 != null) {
                                    try {
                                        r16.getApplicationInjector();
                                        GkSessionlessModule.A03 = new AnonymousClass12I();
                                    } finally {
                                        A0066.A01();
                                    }
                                }
                            }
                        }
                        return GkSessionlessModule.A03;
                    case 120:
                        return new CastAnalytics(r16);
                    case 121:
                        return DeviceAuthTokenStore._UL__ULSEP_com_oculus_auth_device_DeviceAuthTokenStore_ULSEP_FACTORY_METHOD(r16);
                    case 122:
                        return ConfigUpdaterDumperPlugin._UL__ULSEP_com_oculus_config_updater_ConfigUpdaterDumperPlugin_ULSEP_FACTORY_METHOD(r16);
                    case 123:
                        return new AuthTrustedAppVerifier(r16);
                    case 124:
                        return new RemoteLaunchLogger(r16);
                    case 125:
                        return OVRModule.ENABLE_HOMEBUTTON_FREEZEINPUT_API_CHECK;
                    case 126:
                        return ApiResponseConverter.A01(r16);
                    case Hpack.PREFIX_7_BITS /*{ENCODED_INT: 127}*/:
                        return OVRModule.OCULUS_TREX_SUPERRES_KILLSW;
                }
            }
            throw new RuntimeException("Redex: Unreachable code after no-return invoke");
        }
        throw new IllegalArgumentException("Invalid Static DI binding id");
    }
}
