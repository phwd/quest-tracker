package com.oculus.alpenglow.logging;

import X.AbstractC02990bJ;
import X.AnonymousClass0Lh;
import X.AnonymousClass0Qe;
import X.AnonymousClass0R7;
import android.os.Build;
import android.text.TextUtils;
import com.facebook.inject.ApplicationScoped;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.oculus.os.AnalyticsEvent;
import com.oculus.os.SettingsManager;
import com.oculus.os.UnifiedTelemetryLogger;

@Dependencies({"_UL__ULSEP_com_oculus_os_SettingsManager_ULSEP_BINDING_ID"})
@ApplicationScoped
public class LoggerImpl {
    public static volatile LoggerImpl _UL__ULSEP_com_oculus_alpenglow_logging_LoggerImpl_ULSEP_INSTANCE;
    public AnonymousClass0R7 _UL_mInjectionContext;
    public final UnifiedTelemetryLogger mUnifiedTelemetryLogger = UnifiedTelemetryLogger.getInstance();

    @AutoGeneratedFactoryMethod
    public static final LoggerImpl A00(AbstractC02990bJ r4) {
        if (_UL__ULSEP_com_oculus_alpenglow_logging_LoggerImpl_ULSEP_INSTANCE == null) {
            synchronized (LoggerImpl.class) {
                AnonymousClass0Qe A00 = AnonymousClass0Qe.A00(_UL__ULSEP_com_oculus_alpenglow_logging_LoggerImpl_ULSEP_INSTANCE, r4);
                if (A00 != null) {
                    try {
                        _UL__ULSEP_com_oculus_alpenglow_logging_LoggerImpl_ULSEP_INSTANCE = new LoggerImpl(r4.getApplicationInjector());
                    } finally {
                        A00.A01();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_alpenglow_logging_LoggerImpl_ULSEP_INSTANCE;
    }

    public final void A01(AnalyticsEvent analyticsEvent, boolean z) {
        analyticsEvent.setExtra(LoggerConstants.DEVICE_SERIAL, Build.SERIAL);
        String string = ((SettingsManager) AnonymousClass0Lh.A03(0, 105, this._UL_mInjectionContext)).getString("device_ent_id", (String) null);
        if (!TextUtils.isEmpty(string)) {
            analyticsEvent.setExtra(LoggerConstants.DEVICE_ID, string);
        }
        this.mUnifiedTelemetryLogger.reportEvent(analyticsEvent, z);
    }

    @Inject
    public LoggerImpl(AbstractC02990bJ r3) {
        this._UL_mInjectionContext = new AnonymousClass0R7(1, r3);
    }
}
