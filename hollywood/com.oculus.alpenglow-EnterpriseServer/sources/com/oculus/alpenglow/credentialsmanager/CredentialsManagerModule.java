package com.oculus.alpenglow.credentialsmanager;

import X.AbstractC01750Lk;
import X.AbstractC02990bJ;
import X.AnonymousClass0Qe;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.InjectorModule;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.oculus.auth.credentials.CredentialsManager;
import com.oculus.auth.device.DeviceAuthTokenSubscriber;

@InjectorModule
public class CredentialsManagerModule extends AbstractC01750Lk {
    public static volatile CredentialsManager _UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_INSTANCE;
    public static volatile DeviceAuthTokenSubscriber _UL__ULSEP_com_oculus_auth_device_DeviceAuthTokenSubscriber_ULSEP_INSTANCE;

    @AutoGeneratedBinder
    public static class AutoGeneratedBindingsForCredentialsManagerModule {
    }

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_com_oculus_alpenglow_credentialsmanager_EnterpriseServerCredentialsManager_ULSEP_BINDING_ID = 13;
        public static final int _UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_BINDING_ID = 52;
        public static final int _UL__ULSEP_com_oculus_auth_device_DeviceAuthTokenSubscriber_ULSEP_BINDING_ID = 29;
    }

    @AutoGeneratedFactoryMethod
    public static final CredentialsManager A00(AbstractC02990bJ r3) {
        if (_UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_INSTANCE == null) {
            synchronized (CredentialsManager.class) {
                AnonymousClass0Qe A00 = AnonymousClass0Qe.A00(_UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_INSTANCE, r3);
                if (A00 != null) {
                    try {
                        _UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_INSTANCE = EnterpriseServerCredentialsManager.A00(r3.getApplicationInjector());
                    } finally {
                        A00.A01();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_auth_credentials_CredentialsManager_ULSEP_INSTANCE;
    }

    @AutoGeneratedFactoryMethod
    public static final DeviceAuthTokenSubscriber A01(AbstractC02990bJ r3) {
        if (_UL__ULSEP_com_oculus_auth_device_DeviceAuthTokenSubscriber_ULSEP_INSTANCE == null) {
            synchronized (DeviceAuthTokenSubscriber.class) {
                AnonymousClass0Qe A00 = AnonymousClass0Qe.A00(_UL__ULSEP_com_oculus_auth_device_DeviceAuthTokenSubscriber_ULSEP_INSTANCE, r3);
                if (A00 != null) {
                    try {
                        _UL__ULSEP_com_oculus_auth_device_DeviceAuthTokenSubscriber_ULSEP_INSTANCE = EnterpriseServerCredentialsManager.A00(r3.getApplicationInjector());
                    } finally {
                        A00.A01();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_auth_device_DeviceAuthTokenSubscriber_ULSEP_INSTANCE;
    }
}
