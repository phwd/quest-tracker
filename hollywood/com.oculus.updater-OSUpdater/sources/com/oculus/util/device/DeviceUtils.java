package com.oculus.util.device;

import android.annotation.TargetApi;
import android.content.Context;
import android.os.Build;
import android.os.Environment;
import android.provider.Settings;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.UnsafeContextInjection;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.facebook.ultralight.UL;
import com.google.common.base.Strings;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.UnmodifiableIterator;
import com.oculus.common.build.BuildConfig;
import javax.inject.Inject;

@Dependencies
@TargetApi(UL.id._UL__ULSEP_java_lang_String_ULSEP_com_oculus_http_core_annotations_FacebookGraphEndpoint_ULSEP_BINDING_ID)
public class DeviceUtils {
    private static final ImmutableSet<String> ALL_MODELS = ImmutableSet.builder().add((Object[]) new String[]{"SM-N910", "SM-N916", "SC-05G", "SC-04G", "SCV31", "404SC", "SM-G920", "SM-G925"}).build();
    private static final String EXTERNAL_STORAGE_FILE_PATH = Environment.getExternalStorageDirectory().getPath();
    private static final ImmutableSet<String> JAPAN_MODELS = ImmutableSet.builder().add((Object[]) new String[]{"SC-05G", "SC-04G", "SCV31", "404SC"}).build();
    private static final String MODEL_DEBUG_FILE_PATH = (EXTERNAL_STORAGE_FILE_PATH + "/oculus_model.test");
    private static final ImmutableSet<String> NOTE4_MODELS = ImmutableSet.builder().add((Object[]) new String[]{"SM-N910", "SM-N916"}).build();
    private static final String TAG = "DeviceUtils";
    private static String mFakeModel;
    @UnsafeContextInjection
    @Inject
    @Eager
    private final Context mContext;

    @AutoGeneratedFactoryMethod
    public static final DeviceUtils _UL__ULSEP_com_oculus_util_device_DeviceUtils_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new DeviceUtils(injectorLike);
    }

    @Inject
    public DeviceUtils(InjectorLike injectorLike) {
        this.mContext = BundledAndroidModule._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_UnsafeContextInjection_ULSEP_ACCESS_METHOD(injectorLike);
    }

    public boolean isStandAloneDevice() {
        return this.mContext.getPackageManager().hasSystemFeature("oculus.hardware.standalone_vr");
    }

    public static String getDeviceId(Context context) {
        String string = Settings.Secure.getString(context.getContentResolver(), "android_id");
        if (string == null) {
            string = BuildConfig.PROVIDER_SUFFIX;
        }
        return Strings.padStart(string, 16, '0');
    }

    public static String getBuildModel() {
        if (Strings.isNullOrEmpty(mFakeModel)) {
            mFakeModel = initializeFakeModel();
        }
        return "fake_placeholder".equals(mFakeModel) ? Build.MODEL : mFakeModel;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:21:0x0039, code lost:
        if (r2 != null) goto L_0x002a;
     */
    /* JADX WARNING: Removed duplicated region for block: B:15:0x0034 A[SYNTHETIC, Splitter:B:15:0x0034] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private static java.lang.String initializeFakeModel() {
        /*
            java.io.File r0 = new java.io.File
            java.lang.String r1 = com.oculus.util.device.DeviceUtils.MODEL_DEBUG_FILE_PATH
            r0.<init>(r1)
            boolean r1 = r0.exists()
            if (r1 == 0) goto L_0x0047
            boolean r1 = r0.isDirectory()
            if (r1 != 0) goto L_0x0047
            r1 = 0
            java.io.FileInputStream r2 = new java.io.FileInputStream     // Catch:{ IOException -> 0x0038, all -> 0x0030 }
            r2.<init>(r0)     // Catch:{ IOException -> 0x0038, all -> 0x0030 }
            java.io.BufferedReader r0 = new java.io.BufferedReader     // Catch:{ IOException -> 0x0039, all -> 0x002e }
            java.io.InputStreamReader r3 = new java.io.InputStreamReader     // Catch:{ IOException -> 0x0039, all -> 0x002e }
            r3.<init>(r2)     // Catch:{ IOException -> 0x0039, all -> 0x002e }
            r0.<init>(r3)     // Catch:{ IOException -> 0x0039, all -> 0x002e }
            java.lang.String r1 = r0.readLine()     // Catch:{ IOException -> 0x0039, all -> 0x002e }
            r0.close()     // Catch:{ IOException -> 0x0039, all -> 0x002e }
        L_0x002a:
            r2.close()     // Catch:{ IOException -> 0x003c }
            goto L_0x003c
        L_0x002e:
            r0 = move-exception
            goto L_0x0032
        L_0x0030:
            r0 = move-exception
            r2 = r1
        L_0x0032:
            if (r2 == 0) goto L_0x0037
            r2.close()     // Catch:{ IOException -> 0x0037 }
        L_0x0037:
            throw r0
        L_0x0038:
            r2 = r1
        L_0x0039:
            if (r2 == 0) goto L_0x003c
            goto L_0x002a
        L_0x003c:
            if (r1 == 0) goto L_0x0047
            com.google.common.collect.ImmutableSet<java.lang.String> r0 = com.oculus.util.device.DeviceUtils.ALL_MODELS
            boolean r0 = isOneOfTheModels(r0, r1)
            if (r0 == 0) goto L_0x0047
            return r1
        L_0x0047:
            java.lang.String r0 = "fake_placeholder"
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: com.oculus.util.device.DeviceUtils.initializeFakeModel():java.lang.String");
    }

    public static boolean isOneOfTheModels(ImmutableSet<String> immutableSet, String str) {
        UnmodifiableIterator<String> it = immutableSet.iterator();
        while (it.hasNext()) {
            if (str.contains(it.next())) {
                return true;
            }
        }
        return false;
    }
}
