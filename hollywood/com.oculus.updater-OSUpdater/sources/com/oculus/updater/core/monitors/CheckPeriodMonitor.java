package com.oculus.updater.core.monitors;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.SystemClock;
import com.facebook.debug.log.BLog;
import com.facebook.inject.ApplicationScopeClassInit;
import com.facebook.inject.ApplicationScoped;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.ForAppContext;
import com.facebook.inject.InjectorLike;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.updater.core.monitors.MonitorsModule;
import javax.annotation.Nullable;

@Dependencies
@ApplicationScoped
public class CheckPeriodMonitor {
    private static final String TAG = "CheckPeriodMonitor";
    private static volatile CheckPeriodMonitor _UL__ULSEP_com_oculus_updater_core_monitors_CheckPeriodMonitor_ULSEP_INSTANCE;
    private final AlarmManager mAlarm;
    private final PendingIntent mCheckTriggerIntent;
    @Nullable
    private CheckPeriodListener mListener;

    public interface CheckPeriodListener {
        void onCheckPeriodElapsed();
    }

    @AutoGeneratedAccessMethod
    public static final CheckPeriodMonitor _UL__ULSEP_com_oculus_updater_core_monitors_CheckPeriodMonitor_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (CheckPeriodMonitor) UL.factorymap.get(MonitorsModule.UL_id._UL__ULSEP_com_oculus_updater_core_monitors_CheckPeriodMonitor_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final CheckPeriodMonitor _UL__ULSEP_com_oculus_updater_core_monitors_CheckPeriodMonitor_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        if (_UL__ULSEP_com_oculus_updater_core_monitors_CheckPeriodMonitor_ULSEP_INSTANCE == null) {
            synchronized (CheckPeriodMonitor.class) {
                ApplicationScopeClassInit start = ApplicationScopeClassInit.start(_UL__ULSEP_com_oculus_updater_core_monitors_CheckPeriodMonitor_ULSEP_INSTANCE, injectorLike);
                if (start != null) {
                    try {
                        _UL__ULSEP_com_oculus_updater_core_monitors_CheckPeriodMonitor_ULSEP_INSTANCE = new CheckPeriodMonitor(BundledAndroidModule._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_ACCESS_METHOD(injectorLike.getApplicationInjector()));
                    } finally {
                        start.finish();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_updater_core_monitors_CheckPeriodMonitor_ULSEP_INSTANCE;
    }

    @Inject
    public CheckPeriodMonitor(@ForAppContext Context context) {
        BLog.d(TAG, "CheckPeriodMonitor constructor");
        this.mAlarm = (AlarmManager) context.getSystemService("alarm");
        Intent intent = new Intent("CheckPeriodAlarm");
        intent.setComponent(new ComponentName(context, "com.oculus.updater.core.os.OSUpdateService"));
        this.mCheckTriggerIntent = PendingIntent.getService(context, 0, intent, 0);
    }

    public void setCheckPeriodAlarm(long j, long j2, CheckPeriodListener checkPeriodListener) {
        BLog.d(TAG, "requestCheckPeriod duration=%d window=%d", Long.valueOf(j), Long.valueOf(j2));
        this.mListener = checkPeriodListener;
        this.mAlarm.setWindow(2, SystemClock.elapsedRealtime() + (j * 1000), j2 * 1000, this.mCheckTriggerIntent);
    }

    public void cancelRequest() {
        BLog.d(TAG, "cancelRequest");
        this.mListener = null;
        this.mAlarm.cancel(this.mCheckTriggerIntent);
    }

    public void onAlarm() {
        CheckPeriodListener checkPeriodListener = this.mListener;
        if (checkPeriodListener != null) {
            checkPeriodListener.onCheckPeriodElapsed();
        }
    }
}
