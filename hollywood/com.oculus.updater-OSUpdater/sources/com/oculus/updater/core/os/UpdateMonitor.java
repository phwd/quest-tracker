package com.oculus.updater.core.os;

import android.content.Context;
import android.os.RemoteException;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.oculus.os.OsUpdateMonitor;

@Dependencies
public class UpdateMonitor {
    private InjectionContext _UL_mInjectionContext;
    private final OsUpdateMonitor mOsUpdateMonitor = new OsUpdateMonitor((Context) FbInjector.lazyInstance(0, BundledAndroidModule.UL_id._UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID, this._UL_mInjectionContext));

    @AutoGeneratedFactoryMethod
    public static final UpdateMonitor _UL__ULSEP_com_oculus_updater_core_os_UpdateMonitor_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new UpdateMonitor(injectorLike);
    }

    @Inject
    public UpdateMonitor(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(1, injectorLike);
    }

    public void applyPayload(String str, long j, long j2, String[] strArr) {
        try {
            this.mOsUpdateMonitor.applyPayload(str, j, j2, strArr);
        } catch (RemoteException e) {
            throw new RuntimeException(e);
        }
    }

    public int getUpdateEngineState() {
        try {
            return this.mOsUpdateMonitor.getUpdateEngineState();
        } catch (RemoteException e) {
            throw new RuntimeException(e);
        }
    }

    public int getUpdateEngineErrorCode() {
        try {
            return this.mOsUpdateMonitor.getUpdateEngineErrorCode();
        } catch (RemoteException e) {
            throw new RuntimeException(e);
        }
    }
}
