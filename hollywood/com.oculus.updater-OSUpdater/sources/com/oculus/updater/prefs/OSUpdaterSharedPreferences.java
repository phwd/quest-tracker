package com.oculus.updater.prefs;

import android.content.SharedPreferences;
import com.facebook.debug.log.BLog;
import com.facebook.inject.FbInjector;
import com.facebook.inject.InjectionContext;
import com.facebook.inject.InjectorLike;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.facebook.ultralight.Inject;
import com.facebook.ultralight.UL;
import com.oculus.time.Clock;
import com.oculus.time.TimeModule;
import com.oculus.updater.prefs.PrefsModule;
import javax.annotation.Nullable;

@Dependencies
public class OSUpdaterSharedPreferences {
    private static final String TAG = "OSUpdaterSharedPreferences";
    private InjectionContext _UL_mInjectionContext;
    @Inject
    @DeviceProtectedPrefs
    @Eager
    private final SharedPreferences mDeviceProtectedPreferences;

    @AutoGeneratedAccessMethod
    public static final OSUpdaterSharedPreferences _UL__ULSEP_com_oculus_updater_prefs_OSUpdaterSharedPreferences_ULSEP_ACCESS_METHOD(InjectorLike injectorLike) {
        return (OSUpdaterSharedPreferences) UL.factorymap.get(PrefsModule.UL_id._UL__ULSEP_com_oculus_updater_prefs_OSUpdaterSharedPreferences_ULSEP_BINDING_ID, injectorLike);
    }

    @AutoGeneratedFactoryMethod
    public static final OSUpdaterSharedPreferences _UL__ULSEP_com_oculus_updater_prefs_OSUpdaterSharedPreferences_ULSEP_FACTORY_METHOD(InjectorLike injectorLike) {
        return new OSUpdaterSharedPreferences(injectorLike);
    }

    @Inject
    public OSUpdaterSharedPreferences(InjectorLike injectorLike) {
        this._UL_mInjectionContext = new InjectionContext(1, injectorLike);
        this.mDeviceProtectedPreferences = PrefsModule._UL__ULSEP_android_content_SharedPreferences_ULSEP_com_oculus_updater_prefs_DeviceProtectedPrefs_ULSEP_ACCESS_METHOD(injectorLike);
    }

    public SharedPreferences.Editor putString(String str, String str2) {
        return this.mDeviceProtectedPreferences.edit().putString(str, str2);
    }

    public SharedPreferences.Editor putInt(String str, int i) {
        return this.mDeviceProtectedPreferences.edit().putInt(str, i);
    }

    public SharedPreferences.Editor putLong(String str, long j) {
        return this.mDeviceProtectedPreferences.edit().putLong(str, j);
    }

    public SharedPreferences.Editor putFloat(String str, float f) {
        return this.mDeviceProtectedPreferences.edit().putFloat(str, f);
    }

    public SharedPreferences.Editor putBoolean(String str, boolean z) {
        return this.mDeviceProtectedPreferences.edit().putBoolean(str, z);
    }

    public String getString(String str, @Nullable String str2) {
        return this.mDeviceProtectedPreferences.getString(str, str2);
    }

    public int getInt(String str, int i) {
        return this.mDeviceProtectedPreferences.getInt(str, i);
    }

    public long getLong(String str, long j) {
        return this.mDeviceProtectedPreferences.getLong(str, j);
    }

    public float getFloat(String str, float f) {
        return this.mDeviceProtectedPreferences.getFloat(str, f);
    }

    public boolean getBoolean(String str, boolean z) {
        return this.mDeviceProtectedPreferences.getBoolean(str, z);
    }

    public SharedPreferences.Editor remove(String str) {
        return this.mDeviceProtectedPreferences.edit().remove(str);
    }

    public int getCount(String str) {
        BLog.d(TAG, "getCount: key = %s", str);
        return getInt(str, 0);
    }

    public int incrementCount(String str) {
        BLog.d(TAG, "incrementCount: key = %s", str);
        int count = getCount(str) + 1;
        BLog.d(TAG, "incrementCount: new value = %d", Integer.valueOf(count));
        putInt(str, count).commit();
        return count;
    }

    public void resetCount(String str) {
        BLog.d(TAG, "resetCount: key = %s", str);
        putInt(str, 0).commit();
    }

    public long getBuildVersion(String str) {
        BLog.d(TAG, "getBuildVersion: key = %s", str);
        return getLong(str, -1);
    }

    public void setCurrentTime(String str) {
        BLog.d(TAG, "setCurrentTime: key = %s", str);
        putLong(str, ((Clock) FbInjector.lazyInstance(0, TimeModule.UL_id._UL__ULSEP_com_oculus_time_Clock_ULSEP_BINDING_ID, this._UL_mInjectionContext)).now()).commit();
    }

    public TimeUpdate updateTime(String str) {
        BLog.d(TAG, "updateTime: key = %s", str);
        long now = ((Clock) FbInjector.lazyInstance(0, TimeModule.UL_id._UL__ULSEP_com_oculus_time_Clock_ULSEP_BINDING_ID, this._UL_mInjectionContext)).now();
        TimeUpdate timeUpdate = new TimeUpdate();
        timeUpdate.oldTime = getLong(str, now);
        putLong(str, now).commit();
        timeUpdate.newTime = now;
        timeUpdate.diff = Math.max(0L, timeUpdate.newTime - timeUpdate.oldTime);
        BLog.d(TAG, "updateTime: update = %s", timeUpdate.toString());
        return timeUpdate;
    }

    public static class TimeUpdate {
        public long diff;
        public long newTime;
        public long oldTime;

        public String toString() {
            return "TimeUpdate{oldTime=" + this.oldTime + ", newTime=" + this.newTime + ", diff=" + this.diff + '}';
        }
    }
}
