package com.oculus.security.basecomponent;

import X.AbstractC03010kk;
import X.AbstractC03180ld;
import X.AnonymousClass0Hr;
import X.AnonymousClass0RE;
import X.AnonymousClass0VC;
import X.AnonymousClass0VF;
import X.AnonymousClass0k7;
import X.AnonymousClass0kG;
import X.AnonymousClass0lg;
import X.AnonymousClass1TK;
import X.C02620jQ;
import android.content.Context;
import android.content.Intent;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.oculus.logging.utils.Event;
import com.oculus.logging.utils.EventManager;
import com.oculus.security.basecomponent.MC;
import javax.annotation.Nullable;
import javax.inject.Provider;
import org.json.JSONException;
import org.json.JSONObject;

@Dependencies({"_UL__ULSEP_com_facebook_mobileconfig_factory_MobileConfig_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_logging_utils_EventManager_ULSEP_BINDING_ID", "_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID"})
public class OculusIntentLogger extends AbstractC03010kk {
    public static final String EVENT_NAME = "oculus_security_horizon_intent_logging";
    public static final String KEY_CALLER_IDENTITY = "caller_identity";
    public static final String KEY_ENDPOINT_NAME = "endpoint_name";
    public static final String KEY_INTENT = "intent";
    public static final String KEY_STATUS = "status";
    public static final String KEY_SUB_ENDPOINT_NAME = "sub_endpoint_name";
    public AnonymousClass0RE _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final AbstractC03180ld _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_security_basecomponent_OculusIntentLogger_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r1) {
        return AnonymousClass0Hr.A00(24, r1);
    }

    @AutoGeneratedAccessMethod
    public static final OculusIntentLogger _UL__ULSEP_com_oculus_security_basecomponent_OculusIntentLogger_ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return (OculusIntentLogger) AnonymousClass1TK.A00(24, r2, null);
    }

    @AutoGeneratedFactoryMethod
    public static final OculusIntentLogger _UL__ULSEP_com_oculus_security_basecomponent_OculusIntentLogger_ULSEP_FACTORY_METHOD(AnonymousClass0lg r1, Object obj) {
        return new OculusIntentLogger(r1);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_security_basecomponent_OculusIntentLogger_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r1) {
        return AnonymousClass0VC.A00(24, r1);
    }

    @Override // X.AbstractC03010kk
    public void logIntent(String str, @Nullable String str2, @Nullable String str3, @Nullable Intent intent) {
        String obj;
        String str4;
        AnonymousClass0RE r6 = this._UL_mInjectionContext;
        if (((MC.oculus_security_intent_logging.horizon_enabled >> 61) & 1) == 1) {
            Event createEvent = ((EventManager) AnonymousClass0VF.A03(1, 92, r6)).createEvent(EVENT_NAME);
            createEvent.addExtra("endpoint_name", str);
            if (str2 != null) {
                createEvent.addExtra(KEY_SUB_ENDPOINT_NAME, str2);
            }
            if (str3 != null) {
                createEvent.addExtra("status", str3);
            }
            if (intent == null) {
                createEvent.logAndRelease();
                return;
            }
            AnonymousClass0k7 A00 = AnonymousClass0kG.A00((Context) AnonymousClass0VF.A03(2, 3, this._UL_mInjectionContext), intent, false, null);
            if (A00 == null) {
                obj = "null";
            } else {
                obj = A00.toString();
            }
            createEvent.addExtra("caller_identity", obj);
            try {
                JSONObject jSONObject = C02620jQ.A00(intent).A01;
                if (jSONObject == null) {
                    str4 = "";
                } else {
                    str4 = jSONObject.toString();
                }
                createEvent.addExtra(KEY_INTENT, str4).logAndRelease();
            } catch (JSONException e) {
                createEvent.addExtra(KEY_INTENT, e.toString()).logAndRelease();
            }
        }
    }

    @Inject
    public OculusIntentLogger(AnonymousClass0lg r3) {
        this._UL_mInjectionContext = new AnonymousClass0RE(3, r3);
    }
}
