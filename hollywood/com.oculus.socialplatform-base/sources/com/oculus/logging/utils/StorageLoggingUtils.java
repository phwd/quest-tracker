package com.oculus.logging.utils;

import X.AbstractC03180ld;
import X.AnonymousClass0Hr;
import X.AnonymousClass0RE;
import X.AnonymousClass0VC;
import X.AnonymousClass0VF;
import X.AnonymousClass0lg;
import X.AnonymousClass1TK;
import android.annotation.TargetApi;
import android.content.Context;
import android.os.Environment;
import android.os.StatFs;
import android.text.TextUtils;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import java.io.File;
import javax.annotation.Nullable;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_UnsafeContextInjection_ULSEP_BINDING_ID"})
public class StorageLoggingUtils {
    public static final Integer BYTES_PER_MEGABYTE = 1048576;
    public static final String FREE_SPACE_INTERNAL = "free_space_internal";
    public static final String FREE_SPACE_SD = "free_space_sd";
    public static final String TAG = "StorageLoggingUtils";
    public AnonymousClass0RE _UL_mInjectionContext;

    @AutoGeneratedAccessMethod
    public static final AbstractC03180ld _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_logging_utils_StorageLoggingUtils_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r1) {
        return AnonymousClass0Hr.A00(60, r1);
    }

    @AutoGeneratedAccessMethod
    public static final StorageLoggingUtils _UL__ULSEP_com_oculus_logging_utils_StorageLoggingUtils_ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return (StorageLoggingUtils) AnonymousClass1TK.A00(60, r2, null);
    }

    @AutoGeneratedFactoryMethod
    public static final StorageLoggingUtils _UL__ULSEP_com_oculus_logging_utils_StorageLoggingUtils_ULSEP_FACTORY_METHOD(AnonymousClass0lg r1, Object obj) {
        return new StorageLoggingUtils(r1);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_logging_utils_StorageLoggingUtils_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r1) {
        return AnonymousClass0VC.A00(60, r1);
    }

    @Nullable
    public Long getInternalFreeSpace() {
        return getFreeSpace(((Context) AnonymousClass0VF.A03(0, 73, this._UL_mInjectionContext)).getFilesDir().getAbsolutePath());
    }

    @Inject
    public StorageLoggingUtils(AnonymousClass0lg r3) {
        this._UL_mInjectionContext = new AnonymousClass0RE(1, r3);
    }

    @Nullable
    @TargetApi(18)
    public static Long getFreeSpace(String str) {
        if (!TextUtils.isEmpty(str)) {
            File file = new File(str);
            if (file.exists() && file.canRead()) {
                try {
                    StatFs statFs = new StatFs(str);
                    return Long.valueOf((statFs.getAvailableBlocksLong() * statFs.getBlockSizeLong()) / ((long) BYTES_PER_MEGABYTE.intValue()));
                } catch (RuntimeException unused) {
                    return null;
                }
            }
        }
        return null;
    }

    @Nullable
    public Long getSDFreeSpace() {
        return getFreeSpace(Environment.getExternalStorageDirectory().getAbsolutePath());
    }
}
