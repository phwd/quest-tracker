package com.oculus.horizon.vr;

import X.AbstractC03180ld;
import X.AnonymousClass0Qj;
import X.AnonymousClass0VB;
import X.AnonymousClass0lg;
import X.AnonymousClass1TK;
import com.facebook.inject.ApplicationScoped;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import java.util.concurrent.atomic.AtomicLong;
import javax.inject.Provider;

@Dependencies({})
@ApplicationScoped
public class VRStateManager {
    public static volatile VRStateManager _UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_INSTANCE;
    public boolean mIsDocked;
    public final AtomicLong mLastUndockTime = new AtomicLong(0);

    @AutoGeneratedAccessMethod
    public static final AbstractC03180ld _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_horizon_vr_VRStateManager_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return new AnonymousClass0VB(35, r2);
    }

    @AutoGeneratedAccessMethod
    public static final VRStateManager _UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return (VRStateManager) AnonymousClass1TK.A00(35, r2, null);
    }

    @AutoGeneratedFactoryMethod
    public static final VRStateManager _UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_FACTORY_METHOD(AnonymousClass0lg r3, Object obj) {
        if (_UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_INSTANCE == null) {
            synchronized (VRStateManager.class) {
                AnonymousClass0Qj A00 = AnonymousClass0Qj.A00(_UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_INSTANCE, r3);
                if (A00 != null) {
                    try {
                        r3.getApplicationInjector();
                        _UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_INSTANCE = new VRStateManager();
                    } finally {
                        A00.A01();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_horizon_vr_VRStateManager_ULSEP_INSTANCE;
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_horizon_vr_VRStateManager_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return new AnonymousClass0VB(35, r2);
    }

    public long getLastUndockTime() {
        return this.mLastUndockTime.get();
    }

    public boolean isDocked() {
        return this.mIsDocked;
    }

    public void setIsDocked(boolean z) {
        this.mIsDocked = z;
        if (!z) {
            this.mLastUndockTime.set(System.currentTimeMillis());
        }
    }
}
