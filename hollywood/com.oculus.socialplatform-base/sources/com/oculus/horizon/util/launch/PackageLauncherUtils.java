package com.oculus.horizon.util.launch;

import X.AbstractC03180ld;
import X.AnonymousClass006;
import X.AnonymousClass0Hi;
import X.AnonymousClass0IP;
import X.AnonymousClass0MD;
import X.AnonymousClass0Qj;
import X.AnonymousClass0RE;
import X.AnonymousClass0VB;
import X.AnonymousClass0lg;
import X.AnonymousClass1SM;
import X.AnonymousClass1SN;
import X.AnonymousClass1TK;
import X.C00580Hj;
import X.C02860jx;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import com.facebook.inject.ApplicationScoped;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.oculus.horizon.logging.OculusLogger;
import com.oculus.horizon.profile.UserProfileHelper;
import com.oculus.ipc.client.CallerIdentityHandshakeClient;
import com.oculus.library.model.App;
import com.oculus.libraryapi.OVRLibrary;
import com.oculus.libraryapi.OVRLibraryModule;
import javax.annotation.Nullable;
import javax.inject.Inject;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_libraryapi_OVRLibrary_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_horizon_logging_OculusLogger_ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_horizon_profile_UserProfileHelper_ULSEP_BINDING_ID", "_UL__ULSEP_android_content_pm_PackageManager_ULSEP_BINDING_ID", "_UL__ULSEP_android_content_Context_ULSEP_com_facebook_inject_ForAppContext_ULSEP_BINDING_ID"})
@ApplicationScoped
public class PackageLauncherUtils {
    public static final String ACTION_APP_LAUNCH = "app_launch";
    public static final String EXTRA_LAUNCH_PACKAGE_ON_START = "extra_launch_package_on_start";
    public static final String SHELL_META_LAUNCHER_CAPABILITY = "com.oculus.vrshell.central_launcher";
    public static final Class<?> TAG = PackageLauncherUtils.class;
    public static volatile PackageLauncherUtils _UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_INSTANCE;
    public AnonymousClass0RE _UL_mInjectionContext;
    @Inject
    @Eager
    public final OVRLibrary mLibrary;
    @Inject
    @Eager
    public final OculusLogger mOculusLogger;
    @Inject
    @Eager
    public final PackageManager mPackageManager;
    @Inject
    @Eager
    public final UserProfileHelper mUserProfileHelper;

    @AutoGeneratedAccessMethod
    public static final AbstractC03180ld _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_horizon_util_launch_PackageLauncherUtils_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return new AnonymousClass0VB(115, r2);
    }

    @AutoGeneratedAccessMethod
    public static final PackageLauncherUtils _UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return (PackageLauncherUtils) AnonymousClass1TK.A00(115, r2, null);
    }

    @AutoGeneratedFactoryMethod
    public static final PackageLauncherUtils _UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_FACTORY_METHOD(AnonymousClass0lg r4, Object obj) {
        if (_UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_INSTANCE == null) {
            synchronized (PackageLauncherUtils.class) {
                AnonymousClass0Qj A00 = AnonymousClass0Qj.A00(_UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_INSTANCE, r4);
                if (A00 != null) {
                    try {
                        _UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_INSTANCE = new PackageLauncherUtils(r4.getApplicationInjector());
                    } finally {
                        A00.A01();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_INSTANCE;
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_horizon_util_launch_PackageLauncherUtils_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return new AnonymousClass0VB(115, r2);
    }

    @Nullable
    private Intent buildShellAppLaunchIntent(String str) {
        Intent launchIntentForPackage = this.mPackageManager.getLaunchIntentForPackage("com.oculus.vrshell");
        if (launchIntentForPackage == null) {
            if (AnonymousClass0MD.A01.A64(6)) {
                AnonymousClass0MD.A01.A2h(PackageLauncherUtils.class.getSimpleName(), "Attempt to launch through Shell failed, unable to resolve launch intent!");
            }
            return null;
        }
        try {
            ApplicationInfo applicationInfo = this.mPackageManager.getApplicationInfo("com.oculus.vrshell", 0);
            Bundle bundle = new Bundle();
            CallerIdentityHandshakeClient.addToBundle(bundle, applicationInfo.uid);
            launchIntentForPackage.setAction(ACTION_APP_LAUNCH);
            launchIntentForPackage.setData(Uri.parse(AnonymousClass006.A07("apk://", str)));
            launchIntentForPackage.putExtras(bundle);
            return launchIntentForPackage;
        } catch (PackageManager.NameNotFoundException e) {
            AnonymousClass0MD.A01(PackageLauncherUtils.class, "Attempt to launch through Shell failed, package not found!", e);
            return null;
        }
    }

    public Intent getHomeLaunchIntent() {
        return buildShellAppLaunchIntent("com.oculus.vrshell.home");
    }

    public Intent getUriIntent(Uri uri, @Nullable String str) {
        Intent intent = new Intent("android.intent.action.VIEW", uri);
        if (str != null) {
            intent.setPackage(str);
        }
        if (this.mPackageManager.queryIntentActivities(intent, 65536).isEmpty()) {
            return null;
        }
        return intent;
    }

    public void logUsage(String str, String str2, boolean z) {
        this.mOculusLogger.reportLaunchSuccess(str);
        App app = this.mLibrary.getApp(str);
        if (app != null) {
            OVRLibrary oVRLibrary = this.mLibrary;
            App.Editor editor = new App.Editor(app.packageName);
            editor.withRecentActivityMs(System.currentTimeMillis());
            oVRLibrary.save(editor);
        }
    }

    @Inject
    public PackageLauncherUtils(AnonymousClass0lg r3) {
        this._UL_mInjectionContext = new AnonymousClass0RE(1, r3);
        this.mLibrary = OVRLibraryModule._UL__ULSEP_com_oculus_libraryapi_OVRLibrary_ULSEP_ACCESS_METHOD(r3);
        this.mOculusLogger = OculusLogger._UL__ULSEP_com_oculus_horizon_logging_OculusLogger_ULSEP_ACCESS_METHOD(r3);
        this.mUserProfileHelper = UserProfileHelper._UL__ULSEP_com_oculus_horizon_profile_UserProfileHelper_ULSEP_ACCESS_METHOD(r3);
        this.mPackageManager = AnonymousClass0IP.A03(r3);
    }

    public static AnonymousClass1SN A00() {
        AnonymousClass1SN r1;
        AnonymousClass1SM A00 = AnonymousClass1SM.A00();
        synchronized (A00) {
            r1 = A00.A00;
            if (r1 == null) {
                C00580Hj r3 = A00.A03;
                if (r3 == null) {
                    r3 = new C00580Hj(AnonymousClass1SM.A0D, AnonymousClass1SM.A0C, AnonymousClass1SM.A0E);
                    A00.A03 = r3;
                }
                r1 = new AnonymousClass1SN(r3, A00.A08);
                A00.A00 = r1;
            }
        }
        return r1;
    }

    public boolean secureLaunchActivity(Intent intent, Context context) {
        AnonymousClass1SN r1;
        intent.getPackage();
        if (C02860jx.A00.contains(intent.getPackage())) {
            return A00().A01(intent, context);
        }
        AnonymousClass1SM A00 = AnonymousClass1SM.A00();
        synchronized (A00) {
            r1 = A00.A02;
            if (r1 == null) {
                AnonymousClass0Hi r3 = A00.A05;
                if (r3 == null) {
                    r3 = new AnonymousClass0Hi(AnonymousClass1SM.A0D, AnonymousClass1SM.A0C, AnonymousClass1SM.A0E);
                    A00.A05 = r3;
                }
                r1 = new AnonymousClass1SN(r3, A00.A08);
                A00.A02 = r1;
            }
        }
        return r1.A01(intent, context);
    }

    public boolean secureSendBroadcast(Intent intent, Context context) {
        intent.getPackage();
        if (intent.getPackage() == null) {
            return false;
        }
        if (C02860jx.A00.contains(intent.getPackage())) {
            return A00().A02(intent, context);
        }
        return false;
    }

    public void startActivityAndLogUsage(Context context, Intent intent, String str, String str2, boolean z) {
        logUsage(str, str2, z);
        secureLaunchActivity(intent, context);
    }

    @Nullable
    public Intent getLaunchIntent(String str) {
        return getLaunchIntent(str, false);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:16:0x0046, code lost:
        if (r1.getInt(com.oculus.horizon.util.launch.PackageLauncherUtils.SHELL_META_LAUNCHER_CAPABILITY, 0) <= 0) goto L_0x0048;
     */
    @javax.annotation.Nullable
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public android.content.Intent getLaunchIntent(java.lang.String r5, boolean r6) {
        /*
        // Method dump skipped, instructions count: 126
        */
        throw new UnsupportedOperationException("Method not decompiled: com.oculus.horizon.util.launch.PackageLauncherUtils.getLaunchIntent(java.lang.String, boolean):android.content.Intent");
    }
}
