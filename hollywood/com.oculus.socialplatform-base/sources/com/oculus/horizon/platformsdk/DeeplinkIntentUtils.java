package com.oculus.horizon.platformsdk;

import X.AbstractC03180ld;
import X.AnonymousClass0MD;
import X.AnonymousClass0Qj;
import X.AnonymousClass0RE;
import X.AnonymousClass0VB;
import X.AnonymousClass0VF;
import X.AnonymousClass0lg;
import X.AnonymousClass1TK;
import android.content.Context;
import android.content.Intent;
import com.facebook.inject.ApplicationScoped;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.oculus.common.vrshell.Constants;
import com.oculus.horizon.util.launch.PackageLauncherUtils;
import java.util.Iterator;
import javax.annotation.Nullable;
import javax.inject.Provider;
import org.json.JSONException;
import org.json.JSONObject;

@Dependencies({"_UL__ULSEP_com_oculus_horizon_util_launch_PackageLauncherUtils_ULSEP_BINDING_ID"})
@ApplicationScoped
public class DeeplinkIntentUtils {
    public static final String HOME_LINK_PDP = "/item/";
    public static final String INTENT_KEY_COMMAND = "intent_cmd";
    public static final String INTENT_KEY_DEEPLINK_MESSAGE = "deeplink_message";
    public static final String INTENT_KEY_LAUNCH_SOURCE = "launch_source";
    public static final String INTENT_KEY_LAUNCH_SOURCE_OTHER_APP = "OTHER_APP";
    public static final String INTENT_KEY_PACKAGE = "intent_pkg";
    public static final String INTENT_KEY_SOCIAL_LAUNCH = "ovr_social_launch";
    public static final String INTENT_KEY_TYPE = "type";
    public static final String INTENT_KEY_TYPE_DEEPLINK = "DEEPLINK";
    public static final String PARAM_APP_ID = "target_app_id";
    public static final String PARAM_DEEPLINK_MESSAGE = "deeplink_message";
    public static final String PARAM_DEEPLINK_OPTIONS = "deeplink_options";
    public static final String PARAM_INTENT_DATA = "intent_data";
    public static final String PARAM_URI = "uri";
    public static final String TAG = "DeeplinkIntentUtils";
    public static final String URL_QUERY_INTENT_CMD = "intent_cmd=";
    public static volatile DeeplinkIntentUtils _UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_INSTANCE;
    public AnonymousClass0RE _UL_mInjectionContext;

    @Nullable
    public Intent getLaunchIntentForSystemActionRedirect(Context context, String str) {
        if (str != null && !str.isEmpty()) {
            try {
                Intent intent = new Intent();
                intent.setPackage("com.oculus.vrshell");
                intent.setAction(Constants.ACTION_LAUNCH);
                JSONObject jSONObject = new JSONObject(str);
                Iterator<String> keys = jSONObject.keys();
                while (keys.hasNext()) {
                    String next = keys.next();
                    String optString = jSONObject.optString(next);
                    if (optString != null) {
                        intent.putExtra(next, optString);
                    }
                }
                return intent;
            } catch (JSONException unused) {
            }
        }
        return null;
    }

    @Nullable
    public Intent getLaunchIntentFromDeeplinkExtras(Context context, String str, @Nullable String str2, boolean z) {
        String str3;
        if (str2 != null) {
            try {
                if (!str2.isEmpty()) {
                    str3 = getIntentCmdWithDetails(new JSONObject(str2));
                    return getLaunchIntentWithDeeplinkCommand(context, str, str3, z);
                }
            } catch (JSONException e) {
                AnonymousClass0MD.A07(TAG, "Failed to parse arguments", e);
                return null;
            }
        }
        str3 = getIntentCmd(null);
        return getLaunchIntentWithDeeplinkCommand(context, str, str3, z);
    }

    @AutoGeneratedAccessMethod
    public static final AbstractC03180ld _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return new AnonymousClass0VB(68, r2);
    }

    @AutoGeneratedAccessMethod
    public static final DeeplinkIntentUtils _UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return (DeeplinkIntentUtils) AnonymousClass1TK.A00(68, r2, null);
    }

    @AutoGeneratedFactoryMethod
    public static final DeeplinkIntentUtils _UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_FACTORY_METHOD(AnonymousClass0lg r4, Object obj) {
        if (_UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_INSTANCE == null) {
            synchronized (DeeplinkIntentUtils.class) {
                AnonymousClass0Qj A00 = AnonymousClass0Qj.A00(_UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_INSTANCE, r4);
                if (A00 != null) {
                    try {
                        _UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_INSTANCE = new DeeplinkIntentUtils(r4.getApplicationInjector());
                    } finally {
                        A00.A01();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULSEP_INSTANCE;
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_horizon_platformsdk_DeeplinkIntentUtils_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return new AnonymousClass0VB(68, r2);
    }

    public static String getIntentCmd(@Nullable String str) throws JSONException {
        JSONObject jSONObject = new JSONObject();
        jSONObject.put("type", INTENT_KEY_TYPE_DEEPLINK);
        jSONObject.put(INTENT_KEY_LAUNCH_SOURCE, INTENT_KEY_LAUNCH_SOURCE_OTHER_APP);
        if (str == null) {
            str = "";
        }
        jSONObject.put("deeplink_message", str);
        return getIntentCmdWithDetails(jSONObject);
    }

    public static String getIntentCmdWithDetails(JSONObject jSONObject) throws JSONException {
        JSONObject jSONObject2 = new JSONObject();
        jSONObject2.put(INTENT_KEY_SOCIAL_LAUNCH, jSONObject);
        return jSONObject2.toString();
    }

    @Nullable
    public Intent getLaunchIntentWithDeeplinkCommand(Context context, String str, @Nullable String str2, boolean z) {
        Intent launchIntent = ((PackageLauncherUtils) AnonymousClass0VF.A03(0, 115, this._UL_mInjectionContext)).getLaunchIntent(str, z);
        if (launchIntent == null) {
            AnonymousClass0MD.A09(TAG, "Could not get launch intent for %s", str);
            return null;
        }
        launchIntent.putExtra("intent_cmd", str2);
        launchIntent.putExtra("uri", str2);
        return launchIntent;
    }

    public boolean secureLaunchActivity(Intent intent, Context context) {
        return ((PackageLauncherUtils) AnonymousClass0VF.A03(0, 115, this._UL_mInjectionContext)).secureLaunchActivity(intent, context);
    }

    public boolean secureSendBroadcast(Intent intent, Context context) {
        return ((PackageLauncherUtils) AnonymousClass0VF.A03(0, 115, this._UL_mInjectionContext)).secureSendBroadcast(intent, context);
    }

    @Inject
    public DeeplinkIntentUtils(AnonymousClass0lg r3) {
        this._UL_mInjectionContext = new AnonymousClass0RE(1, r3);
    }

    @Nullable
    public Intent getLaunchIntent(Context context, String str, @Nullable String str2) {
        return getLaunchIntent(context, str, str2, false);
    }

    @Nullable
    public Intent getLaunchIntent(Context context, String str, @Nullable String str2, boolean z) {
        try {
            return getLaunchIntentWithDeeplinkCommand(context, str, getIntentCmd(str2), z);
        } catch (JSONException e) {
            AnonymousClass0MD.A07(TAG, "Failed to parse arguments", e);
            return null;
        }
    }
}
