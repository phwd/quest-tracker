package com.oculus.auth.receiver;

import X.AbstractC03180ld;
import X.AnonymousClass0Hr;
import X.AnonymousClass0VC;
import X.AnonymousClass0lg;
import X.AnonymousClass1TK;
import android.os.SystemClock;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.facebook.ultralight.Inject;
import com.oculus.auth.handler.LogoutHandler;
import java.util.Set;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_handler_LogoutHandler_ULGT__ULSEP_BINDING_ID"})
public class LogoutHandlersRunner {
    public static final String TAG = "LogoutHandlersRunner";
    @Inject
    @Eager
    public final AbstractC03180ld<Set<LogoutHandler>> mLogoutHandlersLazy;

    @AutoGeneratedAccessMethod
    public static final AbstractC03180ld _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_auth_receiver_LogoutHandlersRunner_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r1) {
        return AnonymousClass0Hr.A00(2060, r1);
    }

    @AutoGeneratedAccessMethod
    public static final LogoutHandlersRunner _UL__ULSEP_com_oculus_auth_receiver_LogoutHandlersRunner_ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return (LogoutHandlersRunner) AnonymousClass1TK.A00(2060, r2, null);
    }

    @AutoGeneratedFactoryMethod
    public static final LogoutHandlersRunner _UL__ULSEP_com_oculus_auth_receiver_LogoutHandlersRunner_ULSEP_FACTORY_METHOD(AnonymousClass0lg r1, Object obj) {
        return new LogoutHandlersRunner(r1);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_auth_receiver_LogoutHandlersRunner_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r1) {
        return AnonymousClass0VC.A00(2060, r1);
    }

    public void runLogoutHandlers() {
        Set<LogoutHandler> set = this.mLogoutHandlersLazy.get();
        SystemClock.uptimeMillis();
        set.size();
        for (LogoutHandler logoutHandler : set) {
            logoutHandler.beforeLogout();
        }
        SystemClock.uptimeMillis();
    }

    @Inject
    public LogoutHandlersRunner(AnonymousClass0lg r2) {
        this.mLogoutHandlersLazy = AnonymousClass0Hr.A00(111, r2);
    }
}
