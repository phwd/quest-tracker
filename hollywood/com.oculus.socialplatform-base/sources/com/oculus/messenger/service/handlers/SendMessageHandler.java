package com.oculus.messenger.service.handlers;

import X.AbstractC03180ld;
import X.AnonymousClass0Hr;
import X.AnonymousClass0RE;
import X.AnonymousClass0VC;
import X.AnonymousClass0VF;
import X.AnonymousClass0lg;
import X.AnonymousClass1TK;
import android.os.Bundle;
import android.os.Message;
import android.os.Messenger;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.google.common.collect.ImmutableList;
import com.oculus.messenger.manager.MessengerManagerJNI;
import java.util.Set;
import javax.inject.Provider;

@Dependencies({"_UL__ULSEP_com_oculus_messenger_service_handlers_HandlerUtil_ULSEP_BINDING_ID"})
public final class SendMessageHandler {
    public static final String TAG = "SendMessageHandler";
    public AnonymousClass0RE _UL_mInjectionContext;

    public static class ParamKeys {
        public static final String MESSAGE = "message";
        public static final String THREAD_KEY = "thread_key";
    }

    @AutoGeneratedAccessMethod
    public static final AbstractC03180ld _UL__ULSEP_com_facebook_inject_Lazy_ULLT_com_oculus_messenger_service_handlers_SendMessageHandler_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r1) {
        return AnonymousClass0Hr.A00(2, r1);
    }

    @AutoGeneratedAccessMethod
    public static final SendMessageHandler _UL__ULSEP_com_oculus_messenger_service_handlers_SendMessageHandler_ULSEP_ACCESS_METHOD(AnonymousClass0lg r2) {
        return (SendMessageHandler) AnonymousClass1TK.A00(2, r2, null);
    }

    @AutoGeneratedAccessMethod
    public static final Provider _UL__ULSEP_javax_inject_Provider_ULLT_com_oculus_messenger_service_handlers_SendMessageHandler_ULGT__ULSEP_ACCESS_METHOD(AnonymousClass0lg r1) {
        return AnonymousClass0VC.A00(2, r1);
    }

    @AutoGeneratedFactoryMethod
    public static final SendMessageHandler _UL__ULSEP_com_oculus_messenger_service_handlers_SendMessageHandler_ULSEP_FACTORY_METHOD(AnonymousClass0lg r1, Object obj) {
        return new SendMessageHandler(r1);
    }

    public void handle(Set<Messenger> set, MessengerManagerJNI messengerManagerJNI, Message message) {
        if (((HandlerUtil) AnonymousClass0VF.A03(0, 14, this._UL_mInjectionContext)).isMessageValid(set, message, ImmutableList.A07("thread_key", "message"))) {
            Bundle data = message.getData();
            ((HandlerUtil) AnonymousClass0VF.A03(0, 14, this._UL_mInjectionContext)).sendGenericReply(set, message, messengerManagerJNI.sendMessage(data.getLong("thread_key"), data.getString("message", "")));
        }
    }

    @Inject
    public SendMessageHandler(AnonymousClass0lg r3) {
        this._UL_mInjectionContext = new AnonymousClass0RE(1, r3);
    }
}
