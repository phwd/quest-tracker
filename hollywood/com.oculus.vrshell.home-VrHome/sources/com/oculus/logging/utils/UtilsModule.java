package com.oculus.logging.utils;

import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import javax.inject.Provider;

public class UtilsModule extends AbstractLibraryModule {

    public static final class UL_id {
        public static final int $ul_$xXXcom_oculus_logging_utils_EventManager$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_logging_utils_EventManager$xXXBINDING_ID : UL.id.dynamicId(Key.get(EventManager.class)));
        public static final int $ul_$xXXcom_oculus_logging_utils_EventManagerImpl$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_logging_utils_EventManagerImpl$xXXBINDING_ID : UL.id.dynamicId(Key.get(EventManagerImpl.class)));
        public static final int $ul_$xXXcom_oculus_logging_utils_StorageLoggingUtils$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_logging_utils_StorageLoggingUtils$xXXBINDING_ID : UL.id.dynamicId(Key.get(StorageLoggingUtils.class)));
    }

    static class AutoGeneratedBindingsForUtilsModule {
        AutoGeneratedBindingsForUtilsModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.bindDefault(EventManager.class).toProvider(new EventManagerMethodAutoProvider());
                binder.bind(EventManagerImpl.class).toProvider(new EventManagerImplAutoProvider());
                binder.bind(StorageLoggingUtils.class).toProvider(new StorageLoggingUtilsAutoProvider());
            }
        }
    }

    public static final Lazy $ul_$xXXcom_facebook_inject_Lazy$x3Ccom_oculus_logging_utils_EventManager$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightLazy.get(UL_id.$ul_$xXXcom_oculus_logging_utils_EventManager$xXXBINDING_ID, $ul_injector);
    }

    public static final EventManager $ul_$xXXcom_oculus_logging_utils_EventManager$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return (EventManager) UL.factorymap.get(UL_id.$ul_$xXXcom_oculus_logging_utils_EventManager$xXXBINDING_ID, $ul_injector);
    }

    public static final EventManager $ul_$xXXcom_oculus_logging_utils_EventManager$xXXFACTORY_METHOD(InjectorLike $ul_injector) {
        return provideEventManager(EventManagerImpl.$ul_$xXXcom_oculus_logging_utils_EventManagerImpl$xXXACCESS_METHOD($ul_injector));
    }

    public static final Provider $ul_$xXXjavax_inject_Provider$x3Ccom_oculus_logging_utils_EventManager$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightProvider.get(UL_id.$ul_$xXXcom_oculus_logging_utils_EventManager$xXXBINDING_ID, $ul_injector);
    }

    static EventManager provideEventManager(EventManagerImpl eventManagerImpl) {
        return eventManagerImpl;
    }
}
