package com.oculus.ossdk.inject;

import android.content.Context;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.ForAppContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.os.Controllers;
import com.oculus.os.DeviceAuth;
import com.oculus.os.SettingsManager;
import javax.inject.Provider;

public class OsSdkModule extends AbstractLibraryModule {

    public static final class UL_id {
        public static final int $ul_$xXXcom_oculus_os_Controllers$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_os_Controllers$xXXBINDING_ID : UL.id.dynamicId(Key.get(Controllers.class)));
        public static final int $ul_$xXXcom_oculus_os_DeviceAuth$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_os_DeviceAuth$xXXBINDING_ID : UL.id.dynamicId(Key.get(DeviceAuth.class)));
        public static final int $ul_$xXXcom_oculus_os_SettingsManager$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_os_SettingsManager$xXXBINDING_ID : UL.id.dynamicId(Key.get(SettingsManager.class)));
    }

    public static final Provider $ul_$xXXjavax_inject_Provider$x3Ccom_oculus_os_DeviceAuth$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightProvider.get(UL_id.$ul_$xXXcom_oculus_os_DeviceAuth$xXXBINDING_ID, $ul_injector);
    }

    public static final Provider $ul_$xXXjavax_inject_Provider$x3Ccom_oculus_os_SettingsManager$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightProvider.get(UL_id.$ul_$xXXcom_oculus_os_SettingsManager$xXXBINDING_ID, $ul_injector);
    }

    static class AutoGeneratedBindingsForOsSdkModule {
        AutoGeneratedBindingsForOsSdkModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.bind(Controllers.class).toProvider(new ControllersMethodAutoProvider());
                binder.bind(DeviceAuth.class).toProvider(new DeviceAuthMethodAutoProvider());
                binder.bind(SettingsManager.class).toProvider(new SettingsManagerMethodAutoProvider());
            }
        }
    }

    public static final Lazy $ul_$xXXcom_facebook_inject_Lazy$x3Ccom_oculus_os_Controllers$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightLazy.get(UL_id.$ul_$xXXcom_oculus_os_Controllers$xXXBINDING_ID, $ul_injector);
    }

    public static final Lazy $ul_$xXXcom_facebook_inject_Lazy$x3Ccom_oculus_os_DeviceAuth$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightLazy.get(UL_id.$ul_$xXXcom_oculus_os_DeviceAuth$xXXBINDING_ID, $ul_injector);
    }

    public static final Lazy $ul_$xXXcom_facebook_inject_Lazy$x3Ccom_oculus_os_SettingsManager$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightLazy.get(UL_id.$ul_$xXXcom_oculus_os_SettingsManager$xXXBINDING_ID, $ul_injector);
    }

    public static final Controllers $ul_$xXXcom_oculus_os_Controllers$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return (Controllers) UL.factorymap.get(UL_id.$ul_$xXXcom_oculus_os_Controllers$xXXBINDING_ID, $ul_injector);
    }

    public static final Controllers $ul_$xXXcom_oculus_os_Controllers$xXXFACTORY_METHOD(InjectorLike $ul_injector) {
        return provideControllers();
    }

    public static final DeviceAuth $ul_$xXXcom_oculus_os_DeviceAuth$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return (DeviceAuth) UL.factorymap.get(UL_id.$ul_$xXXcom_oculus_os_DeviceAuth$xXXBINDING_ID, $ul_injector);
    }

    public static final DeviceAuth $ul_$xXXcom_oculus_os_DeviceAuth$xXXFACTORY_METHOD(InjectorLike $ul_injector) {
        return provideDeviceAuth(BundledAndroidModule.$ul_$xXXandroid_content_Context$xXXcom_facebook_inject_ForAppContext$xXXACCESS_METHOD($ul_injector));
    }

    public static final SettingsManager $ul_$xXXcom_oculus_os_SettingsManager$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return (SettingsManager) UL.factorymap.get(UL_id.$ul_$xXXcom_oculus_os_SettingsManager$xXXBINDING_ID, $ul_injector);
    }

    public static final SettingsManager $ul_$xXXcom_oculus_os_SettingsManager$xXXFACTORY_METHOD(InjectorLike $ul_injector) {
        return provideSettingsManager(BundledAndroidModule.$ul_$xXXandroid_content_Context$xXXcom_facebook_inject_ForAppContext$xXXACCESS_METHOD($ul_injector));
    }

    public static final Provider $ul_$xXXjavax_inject_Provider$x3Ccom_oculus_os_Controllers$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightProvider.get(UL_id.$ul_$xXXcom_oculus_os_Controllers$xXXBINDING_ID, $ul_injector);
    }

    static SettingsManager provideSettingsManager(@ForAppContext Context context) {
        return new SettingsManager(context);
    }

    static Controllers provideControllers() {
        return new Controllers(null);
    }

    static DeviceAuth provideDeviceAuth(@ForAppContext Context context) {
        return new DeviceAuth(context);
    }
}
