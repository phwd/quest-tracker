package com.oculus.authapi.inject;

import android.content.Context;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.ApplicationScopeClassInit;
import com.facebook.inject.ApplicationScoped;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.ForAppContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.inject.UltralightSingletonProvider;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import com.oculus.authapi.AuthServiceClient;
import com.oculus.authapi.OVRAuth;
import javax.inject.Provider;

public class OVRAuthModule extends AbstractLibraryModule {
    private static volatile OVRAuth $ul_$xXXcom_oculus_authapi_OVRAuth$xXXINSTANCE;

    public static final class UL_id {
        public static final int $ul_$xXXcom_oculus_authapi_AuthServiceClient$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_authapi_AuthServiceClient$xXXBINDING_ID : UL.id.dynamicId(Key.get(AuthServiceClient.class)));
        public static final int $ul_$xXXcom_oculus_authapi_OVRAuth$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_authapi_OVRAuth$xXXBINDING_ID : UL.id.dynamicId(Key.get(OVRAuth.class)));
        public static final int $ul_$xXXcom_oculus_authapi_inject_AuthServiceClientAuxiliaryProvider$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_authapi_inject_AuthServiceClientAuxiliaryProvider$xXXBINDING_ID : UL.id.dynamicId(Key.get(AuthServiceClientAuxiliaryProvider.class)));
        public static final int $ul_$xXXcom_oculus_authapi_inject_CallerInfoProviderImpl$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXcom_oculus_authapi_inject_CallerInfoProviderImpl$xXXBINDING_ID : UL.id.dynamicId(Key.get(CallerInfoProviderImpl.class)));
    }

    public static final Lazy $ul_$xXXcom_facebook_inject_Lazy$x3Ccom_oculus_authapi_OVRAuth$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightSingletonProvider.get(UL_id.$ul_$xXXcom_oculus_authapi_OVRAuth$xXXBINDING_ID, $ul_injector);
    }

    public static final Provider $ul_$xXXjavax_inject_Provider$x3Ccom_oculus_authapi_AuthServiceClient$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightProvider.get(UL_id.$ul_$xXXcom_oculus_authapi_AuthServiceClient$xXXBINDING_ID, $ul_injector);
    }

    public static final Provider $ul_$xXXjavax_inject_Provider$x3Ccom_oculus_authapi_OVRAuth$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightSingletonProvider.get(UL_id.$ul_$xXXcom_oculus_authapi_OVRAuth$xXXBINDING_ID, $ul_injector);
    }

    static class AutoGeneratedBindingsForOVRAuthModule {
        AutoGeneratedBindingsForOVRAuthModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.bind(AuthServiceClient.class).toProvider(new AuthServiceClientMethodAutoProvider());
                binder.bind(OVRAuth.class).toProvider(new OVRAuthMethodAutoProvider()).in(ApplicationScoped.class);
                binder.bind(AuthServiceClientAuxiliaryProvider.class).toProvider(new AuthServiceClientAuxiliaryProviderAutoProvider());
                binder.bind(CallerInfoProviderImpl.class).toProvider(new CallerInfoProviderImplAutoProvider());
            }
        }
    }

    public static final Lazy $ul_$xXXcom_facebook_inject_Lazy$x3Ccom_oculus_authapi_AuthServiceClient$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightLazy.get(UL_id.$ul_$xXXcom_oculus_authapi_AuthServiceClient$xXXBINDING_ID, $ul_injector);
    }

    public static final AuthServiceClient $ul_$xXXcom_oculus_authapi_AuthServiceClient$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return (AuthServiceClient) UL.factorymap.get(UL_id.$ul_$xXXcom_oculus_authapi_AuthServiceClient$xXXBINDING_ID, $ul_injector);
    }

    public static final AuthServiceClient $ul_$xXXcom_oculus_authapi_AuthServiceClient$xXXFACTORY_METHOD(InjectorLike $ul_injector) {
        return provideAuthServiceClient(BundledAndroidModule.$ul_$xXXandroid_content_Context$xXXcom_facebook_inject_ForAppContext$xXXACCESS_METHOD($ul_injector));
    }

    public static final OVRAuth $ul_$xXXcom_oculus_authapi_OVRAuth$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return (OVRAuth) UL.factorymap.get(UL_id.$ul_$xXXcom_oculus_authapi_OVRAuth$xXXBINDING_ID, $ul_injector);
    }

    public static final OVRAuth $ul_$xXXcom_oculus_authapi_OVRAuth$xXXFACTORY_METHOD(InjectorLike $ul_injector) {
        if ($ul_$xXXcom_oculus_authapi_OVRAuth$xXXINSTANCE == null) {
            synchronized (OVRAuth.class) {
                ApplicationScopeClassInit state = ApplicationScopeClassInit.start($ul_$xXXcom_oculus_authapi_OVRAuth$xXXINSTANCE, $ul_injector);
                if (state != null) {
                    try {
                        InjectorLike $ul_injector2 = $ul_injector.getApplicationInjector();
                        $ul_$xXXcom_oculus_authapi_OVRAuth$xXXINSTANCE = provideOVRAuth(BundledAndroidModule.$ul_$xXXandroid_content_Context$xXXcom_facebook_inject_ForAppContext$xXXACCESS_METHOD($ul_injector2), CallerInfoProviderImpl.$ul_$xXXcom_oculus_authapi_inject_CallerInfoProviderImpl$xXXACCESS_METHOD($ul_injector2));
                    } finally {
                        state.finish();
                    }
                }
            }
        }
        return $ul_$xXXcom_oculus_authapi_OVRAuth$xXXINSTANCE;
    }

    @ApplicationScoped
    static OVRAuth provideOVRAuth(@ForAppContext Context context, CallerInfoProviderImpl callerInfoProvider) {
        return new OVRAuth(context, callerInfoProvider);
    }

    static AuthServiceClient provideAuthServiceClient(@ForAppContext Context context) {
        return new AuthServiceClient(context);
    }
}
