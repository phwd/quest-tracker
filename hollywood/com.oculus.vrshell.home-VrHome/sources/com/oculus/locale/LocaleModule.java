package com.oculus.locale;

import android.content.Context;
import com.facebook.inject.AbstractLibraryModule;
import com.facebook.inject.Binder;
import com.facebook.inject.BundledAndroidModule;
import com.facebook.inject.ForAppContext;
import com.facebook.inject.InjectorLike;
import com.facebook.inject.Lazy;
import com.facebook.inject.UltralightLazy;
import com.facebook.inject.UltralightProvider;
import com.facebook.ultralight.UL;
import com.google.inject.Key;
import java.util.Locale;
import javax.inject.Provider;

public class LocaleModule extends AbstractLibraryModule {

    public static final class UL_id {
        public static final int $ul_$xXXjava_util_Locale$xXXBINDING_ID = (UL.USE_STATIC_DI ? UL.id.$ul_$xXXjava_util_Locale$xXXBINDING_ID : UL.id.dynamicId(Key.get(Locale.class)));
    }

    static class AutoGeneratedBindingsForLocaleModule {
        AutoGeneratedBindingsForLocaleModule() {
        }

        static void bind(Binder binder) {
            if (!UL.USE_STATIC_DI) {
                binder.require(BundledAndroidModule.class);
                binder.bind(Locale.class).toProvider(new LocaleMethodAutoProvider());
            }
        }
    }

    public static final Lazy $ul_$xXXcom_facebook_inject_Lazy$x3Cjava_util_Locale$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightLazy.get(UL_id.$ul_$xXXjava_util_Locale$xXXBINDING_ID, $ul_injector);
    }

    public static final Locale $ul_$xXXjava_util_Locale$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return (Locale) UL.factorymap.get(UL_id.$ul_$xXXjava_util_Locale$xXXBINDING_ID, $ul_injector);
    }

    public static final Locale $ul_$xXXjava_util_Locale$xXXFACTORY_METHOD(InjectorLike $ul_injector) {
        return provideLocale(BundledAndroidModule.$ul_$xXXandroid_content_Context$xXXcom_facebook_inject_ForAppContext$xXXACCESS_METHOD($ul_injector));
    }

    public static final Provider $ul_$xXXjavax_inject_Provider$x3Cjava_util_Locale$x3E$xXXACCESS_METHOD(InjectorLike $ul_injector) {
        return UltralightProvider.get(UL_id.$ul_$xXXjava_util_Locale$xXXBINDING_ID, $ul_injector);
    }

    static Locale provideLocale(@ForAppContext Context context) {
        Locale locale = context.getResources().getConfiguration().locale;
        if (locale == null) {
            return Locale.getDefault();
        }
        return locale;
    }
}
