package com.oculus.http.common;

import X.AbstractC0031Bc;
import X.AbstractC0054Ej;
import X.AnonymousClass06;
import X.C0116Qi;
import X.C0178Xd;
import X.C0179Xe;
import X.C0182Xh;
import X.C0183Xi;
import X.C0184Xj;
import X.C0185Xk;
import X.KO;
import X.Mi;
import X.Qj;
import X.Qm;
import X.WV;
import X.XH;
import X.XQ;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.InjectorModule;
import com.facebook.inject.ProviderMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.concurrent.TimeUnit;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.X509TrustManager;

@InjectorModule
public class HttpModule extends AbstractC0031Bc {
    public static final String TAG = "HttpModule";

    @AutoGeneratedBinder
    public static class AutoGeneratedBindingsForHttpModule {
    }

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_okhttp3_CertificatePinner_ULSEP_BINDING_ID = 4;
        public static final int _UL__ULSEP_okhttp3_ConnectionSpec_ULSEP_BINDING_ID = 67;
        public static final int _UL__ULSEP_okhttp3_OkHttpClient_ULSEP_BINDING_ID = 71;
    }

    @ProviderMethod
    public static C0183Xi A00(KO ko) {
        if (ko.A00 < System.currentTimeMillis() - 31536000000L) {
            return C0183Xi.A02;
        }
        C0185Xk xk = new C0185Xk();
        String[] strArr = Qj.A00;
        for (String str : strArr) {
            String[] strArr2 = Qm.A00;
            for (String str2 : strArr2) {
                String[] strArr3 = {AnonymousClass06.A03("sha256/", str)};
                if (str2 != null) {
                    String str3 = strArr3[0];
                    List<C0184Xj> list = xk.A00;
                    list.add(new C0184Xj(str2, str3));
                    String A03 = AnonymousClass06.A03("*.", str2);
                    String[] strArr4 = {AnonymousClass06.A03("sha256/", str)};
                    if (A03 != null) {
                        list.add(new C0184Xj(A03, strArr4[0]));
                    }
                }
                throw new NullPointerException("pattern == null");
            }
        }
        return new C0183Xi(new LinkedHashSet(xk.A00), null);
    }

    @ProviderMethod
    public static C0178Xd A01() {
        C0179Xe xe = new C0179Xe(C0178Xd.A06);
        xe.A03(XH.TLS_1_2);
        xe.A02(C0182Xh.A0b, C0182Xh.A0n, C0182Xh.A0G);
        return new C0178Xd(xe);
    }

    @ProviderMethod
    public static AbstractC0054Ej A02(C0183Xi xi, C0178Xd xd, KO ko) {
        String str;
        XQ xq = new XQ();
        long j = (long) 15000;
        TimeUnit timeUnit = TimeUnit.MILLISECONDS;
        xq.A0E = XQ.A00(j, timeUnit);
        xq.A0F = XQ.A00(j, timeUnit);
        xq.A0G = XQ.A00(0, timeUnit);
        if (xi != null) {
            xq.A0K = xi;
            xq.A0H = Collections.unmodifiableList(new ArrayList(Arrays.asList(xd)));
            C0116Qi qi = new C0116Qi(ko.A00);
            try {
                SSLContext instance = SSLContext.getInstance("TLS");
                X509TrustManager[] x509TrustManagerArr = qi.A00;
                instance.init(null, x509TrustManagerArr, null);
                SSLSocketFactory socketFactory = instance.getSocketFactory();
                X509TrustManager x509TrustManager = x509TrustManagerArr[0];
                if (socketFactory == null) {
                    str = "sslSocketFactory == null";
                } else if (x509TrustManager != null) {
                    xq.A0J = socketFactory;
                    xq.A0L = WV.A01.A01(x509TrustManager);
                    return new AbstractC0054Ej(xq);
                } else {
                    str = "trustManager == null";
                }
                throw new NullPointerException(str);
            } catch (KeyManagementException | NoSuchAlgorithmException e) {
                Mi.A02(TAG, "failed to setup ssl socket factory", e);
            }
        } else {
            throw new NullPointerException("certificatePinner == null");
        }
    }
}
