package com.android.os;

import com.android.os.AtomsProto;
import com.google.protobuf.AbstractMessageLite;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageLite;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.MessageLiteOrBuilder;
import com.google.protobuf.Parser;
import java.io.IOException;
import java.io.InputStream;
import java.util.Collections;
import java.util.List;

public final class StatsLog {

    public interface AlertTriggerDetailsOrBuilder extends MessageLiteOrBuilder {
        UidMapping.PackageInfoSnapshot getPackageInfo();

        EventMetricData getTriggerEvent();

        AlertTriggerDetails.MetricValue getTriggerMetric();

        AlertTriggerDetails.ValueCase getValueCase();

        boolean hasPackageInfo();

        boolean hasTriggerEvent();

        boolean hasTriggerMetric();
    }

    public interface ConfigMetricsReportListOrBuilder extends MessageLiteOrBuilder {
        ConfigMetricsReportList.ConfigKey getConfigKey();

        ConfigMetricsReport getReports(int i);

        int getReportsCount();

        List<ConfigMetricsReport> getReportsList();

        boolean hasConfigKey();
    }

    public interface ConfigMetricsReportOrBuilder extends MessageLiteOrBuilder {
        ConfigMetricsReport.Annotation getAnnotation(int i);

        int getAnnotationCount();

        List<ConfigMetricsReport.Annotation> getAnnotationList();

        long getCurrentReportElapsedNanos();

        long getCurrentReportWallClockNanos();

        ConfigMetricsReport.DumpReportReason getDumpReportReason();

        long getLastReportElapsedNanos();

        long getLastReportWallClockNanos();

        StatsLogReport getMetrics(int i);

        int getMetricsCount();

        List<StatsLogReport> getMetricsList();

        String getStrings(int i);

        ByteString getStringsBytes(int i);

        int getStringsCount();

        List<String> getStringsList();

        UidMapping getUidMap();

        boolean hasCurrentReportElapsedNanos();

        boolean hasCurrentReportWallClockNanos();

        boolean hasDumpReportReason();

        boolean hasLastReportElapsedNanos();

        boolean hasLastReportWallClockNanos();

        boolean hasUidMap();
    }

    public interface CountBucketInfoOrBuilder extends MessageLiteOrBuilder {
        long getBucketNum();

        long getCount();

        long getEndBucketElapsedMillis();

        long getEndBucketElapsedNanos();

        long getStartBucketElapsedMillis();

        long getStartBucketElapsedNanos();

        boolean hasBucketNum();

        boolean hasCount();

        boolean hasEndBucketElapsedMillis();

        boolean hasEndBucketElapsedNanos();

        boolean hasStartBucketElapsedMillis();

        boolean hasStartBucketElapsedNanos();
    }

    public interface CountMetricDataOrBuilder extends MessageLiteOrBuilder {
        CountBucketInfo getBucketInfo(int i);

        int getBucketInfoCount();

        List<CountBucketInfo> getBucketInfoList();

        DimensionsValue getDimensionLeafValuesInCondition(int i);

        int getDimensionLeafValuesInConditionCount();

        List<DimensionsValue> getDimensionLeafValuesInConditionList();

        DimensionsValue getDimensionLeafValuesInWhat(int i);

        int getDimensionLeafValuesInWhatCount();

        List<DimensionsValue> getDimensionLeafValuesInWhatList();

        DimensionsValue getDimensionsInCondition();

        DimensionsValue getDimensionsInWhat();

        boolean hasDimensionsInCondition();

        boolean hasDimensionsInWhat();
    }

    public interface DimensionsValueOrBuilder extends MessageLiteOrBuilder {
        int getField();

        boolean getValueBool();

        DimensionsValue.ValueCase getValueCase();

        float getValueFloat();

        int getValueInt();

        long getValueLong();

        String getValueStr();

        ByteString getValueStrBytes();

        long getValueStrHash();

        DimensionsValueTuple getValueTuple();

        boolean hasField();

        boolean hasValueBool();

        boolean hasValueFloat();

        boolean hasValueInt();

        boolean hasValueLong();

        boolean hasValueStr();

        boolean hasValueStrHash();

        boolean hasValueTuple();
    }

    public interface DimensionsValueTupleOrBuilder extends MessageLiteOrBuilder {
        DimensionsValue getDimensionsValue(int i);

        int getDimensionsValueCount();

        List<DimensionsValue> getDimensionsValueList();
    }

    public interface DurationBucketInfoOrBuilder extends MessageLiteOrBuilder {
        long getBucketNum();

        long getDurationNanos();

        long getEndBucketElapsedMillis();

        long getEndBucketElapsedNanos();

        long getStartBucketElapsedMillis();

        long getStartBucketElapsedNanos();

        boolean hasBucketNum();

        boolean hasDurationNanos();

        boolean hasEndBucketElapsedMillis();

        boolean hasEndBucketElapsedNanos();

        boolean hasStartBucketElapsedMillis();

        boolean hasStartBucketElapsedNanos();
    }

    public interface DurationMetricDataOrBuilder extends MessageLiteOrBuilder {
        DurationBucketInfo getBucketInfo(int i);

        int getBucketInfoCount();

        List<DurationBucketInfo> getBucketInfoList();

        DimensionsValue getDimensionLeafValuesInCondition(int i);

        int getDimensionLeafValuesInConditionCount();

        List<DimensionsValue> getDimensionLeafValuesInConditionList();

        DimensionsValue getDimensionLeafValuesInWhat(int i);

        int getDimensionLeafValuesInWhatCount();

        List<DimensionsValue> getDimensionLeafValuesInWhatList();

        DimensionsValue getDimensionsInCondition();

        DimensionsValue getDimensionsInWhat();

        boolean hasDimensionsInCondition();

        boolean hasDimensionsInWhat();
    }

    public interface EventMetricDataOrBuilder extends MessageLiteOrBuilder {
        AtomsProto.Atom getAtom();

        long getElapsedTimestampNanos();

        @Deprecated
        long getWallClockTimestampNanos();

        boolean hasAtom();

        boolean hasElapsedTimestampNanos();

        @Deprecated
        boolean hasWallClockTimestampNanos();
    }

    public interface GaugeBucketInfoOrBuilder extends MessageLiteOrBuilder {
        AtomsProto.Atom getAtom(int i);

        int getAtomCount();

        List<AtomsProto.Atom> getAtomList();

        long getBucketNum();

        long getElapsedTimestampNanos(int i);

        int getElapsedTimestampNanosCount();

        List<Long> getElapsedTimestampNanosList();

        long getEndBucketElapsedMillis();

        long getEndBucketElapsedNanos();

        long getStartBucketElapsedMillis();

        long getStartBucketElapsedNanos();

        @Deprecated
        long getWallClockTimestampNanos(int i);

        @Deprecated
        int getWallClockTimestampNanosCount();

        @Deprecated
        List<Long> getWallClockTimestampNanosList();

        boolean hasBucketNum();

        boolean hasEndBucketElapsedMillis();

        boolean hasEndBucketElapsedNanos();

        boolean hasStartBucketElapsedMillis();

        boolean hasStartBucketElapsedNanos();
    }

    public interface GaugeMetricDataOrBuilder extends MessageLiteOrBuilder {
        GaugeBucketInfo getBucketInfo(int i);

        int getBucketInfoCount();

        List<GaugeBucketInfo> getBucketInfoList();

        DimensionsValue getDimensionLeafValuesInCondition(int i);

        int getDimensionLeafValuesInConditionCount();

        List<DimensionsValue> getDimensionLeafValuesInConditionList();

        DimensionsValue getDimensionLeafValuesInWhat(int i);

        int getDimensionLeafValuesInWhatCount();

        List<DimensionsValue> getDimensionLeafValuesInWhatList();

        DimensionsValue getDimensionsInCondition();

        DimensionsValue getDimensionsInWhat();

        boolean hasDimensionsInCondition();

        boolean hasDimensionsInWhat();
    }

    public interface StatsLogReportOrBuilder extends MessageLiteOrBuilder {
        long getBucketSizeNanoSeconds();

        StatsLogReport.CountMetricDataWrapper getCountMetrics();

        StatsLogReport.DataCase getDataCase();

        DimensionsValue getDimensionsPathInCondition();

        DimensionsValue getDimensionsPathInWhat();

        StatsLogReport.DurationMetricDataWrapper getDurationMetrics();

        StatsLogReport.EventMetricDataWrapper getEventMetrics();

        StatsLogReport.GaugeMetricDataWrapper getGaugeMetrics();

        boolean getIsActive();

        long getMetricId();

        long getTimeBaseElapsedNanoSeconds();

        StatsLogReport.ValueMetricDataWrapper getValueMetrics();

        boolean hasBucketSizeNanoSeconds();

        boolean hasCountMetrics();

        boolean hasDimensionsPathInCondition();

        boolean hasDimensionsPathInWhat();

        boolean hasDurationMetrics();

        boolean hasEventMetrics();

        boolean hasGaugeMetrics();

        boolean hasIsActive();

        boolean hasMetricId();

        boolean hasTimeBaseElapsedNanoSeconds();

        boolean hasValueMetrics();
    }

    public interface StatsdStatsReportOrBuilder extends MessageLiteOrBuilder {
        StatsdStatsReport.ActivationBroadcastGuardrail getActivationGuardrailStats(int i);

        int getActivationGuardrailStatsCount();

        List<StatsdStatsReport.ActivationBroadcastGuardrail> getActivationGuardrailStatsList();

        StatsdStatsReport.AnomalyAlarmStats getAnomalyAlarmStats();

        StatsdStatsReport.AtomMetricStats getAtomMetricStats(int i);

        int getAtomMetricStatsCount();

        List<StatsdStatsReport.AtomMetricStats> getAtomMetricStatsList();

        StatsdStatsReport.AtomStats getAtomStats(int i);

        int getAtomStatsCount();

        List<StatsdStatsReport.AtomStats> getAtomStatsList();

        StatsdStatsReport.ConfigStats getConfigStats(int i);

        int getConfigStatsCount();

        List<StatsdStatsReport.ConfigStats> getConfigStatsList();

        StatsdStatsReport.LogLossStats getDetectedLogLoss(int i);

        int getDetectedLogLossCount();

        List<StatsdStatsReport.LogLossStats> getDetectedLogLossList();

        long getLogLossStats(int i);

        int getLogLossStatsCount();

        List<Long> getLogLossStatsList();

        StatsdStatsReport.LoggerErrorStats getLoggerErrorStats(int i);

        int getLoggerErrorStatsCount();

        List<StatsdStatsReport.LoggerErrorStats> getLoggerErrorStatsList();

        StatsdStatsReport.PeriodicAlarmStats getPeriodicAlarmStats();

        StatsdStatsReport.PulledAtomStats getPulledAtomStats(int i);

        int getPulledAtomStatsCount();

        List<StatsdStatsReport.PulledAtomStats> getPulledAtomStatsList();

        StatsdStatsReport.EventQueueOverflow getQueueOverflow();

        StatsdStatsReport.SkippedLogEventStats getSkippedLogEventStats(int i);

        int getSkippedLogEventStatsCount();

        List<StatsdStatsReport.SkippedLogEventStats> getSkippedLogEventStatsList();

        int getStatsBeginTimeSec();

        int getStatsEndTimeSec();

        int getSystemRestartSec(int i);

        int getSystemRestartSecCount();

        List<Integer> getSystemRestartSecList();

        StatsdStatsReport.UidMapStats getUidmapStats();

        boolean hasAnomalyAlarmStats();

        boolean hasPeriodicAlarmStats();

        boolean hasQueueOverflow();

        boolean hasStatsBeginTimeSec();

        boolean hasStatsEndTimeSec();

        boolean hasUidmapStats();
    }

    public interface UidMappingOrBuilder extends MessageLiteOrBuilder {
        UidMapping.Change getChanges(int i);

        int getChangesCount();

        List<UidMapping.Change> getChangesList();

        UidMapping.PackageInfoSnapshot getSnapshots(int i);

        int getSnapshotsCount();

        List<UidMapping.PackageInfoSnapshot> getSnapshotsList();
    }

    public interface ValueBucketInfoOrBuilder extends MessageLiteOrBuilder {
        long getBucketNum();

        long getConditionTrueNanos();

        long getEndBucketElapsedMillis();

        long getEndBucketElapsedNanos();

        ValueBucketInfo.SingleValueCase getSingleValueCase();

        long getStartBucketElapsedMillis();

        long getStartBucketElapsedNanos();

        @Deprecated
        long getValue();

        @Deprecated
        double getValueDouble();

        @Deprecated
        long getValueLong();

        ValueBucketInfo.Value getValues(int i);

        int getValuesCount();

        List<ValueBucketInfo.Value> getValuesList();

        boolean hasBucketNum();

        boolean hasConditionTrueNanos();

        boolean hasEndBucketElapsedMillis();

        boolean hasEndBucketElapsedNanos();

        boolean hasStartBucketElapsedMillis();

        boolean hasStartBucketElapsedNanos();

        @Deprecated
        boolean hasValue();

        @Deprecated
        boolean hasValueDouble();

        @Deprecated
        boolean hasValueLong();
    }

    public interface ValueMetricDataOrBuilder extends MessageLiteOrBuilder {
        ValueBucketInfo getBucketInfo(int i);

        int getBucketInfoCount();

        List<ValueBucketInfo> getBucketInfoList();

        DimensionsValue getDimensionLeafValuesInCondition(int i);

        int getDimensionLeafValuesInConditionCount();

        List<DimensionsValue> getDimensionLeafValuesInConditionList();

        DimensionsValue getDimensionLeafValuesInWhat(int i);

        int getDimensionLeafValuesInWhatCount();

        List<DimensionsValue> getDimensionLeafValuesInWhatList();

        DimensionsValue getDimensionsInCondition();

        DimensionsValue getDimensionsInWhat();

        boolean hasDimensionsInCondition();

        boolean hasDimensionsInWhat();
    }

    private StatsLog() {
    }

    public static void registerAllExtensions(ExtensionRegistryLite registry) {
    }

    public static final class DimensionsValue extends GeneratedMessageLite<DimensionsValue, Builder> implements DimensionsValueOrBuilder {
        private static final DimensionsValue DEFAULT_INSTANCE = new DimensionsValue();
        public static final int FIELD_FIELD_NUMBER = 1;
        private static volatile Parser<DimensionsValue> PARSER = null;
        public static final int VALUE_BOOL_FIELD_NUMBER = 5;
        public static final int VALUE_FLOAT_FIELD_NUMBER = 6;
        public static final int VALUE_INT_FIELD_NUMBER = 3;
        public static final int VALUE_LONG_FIELD_NUMBER = 4;
        public static final int VALUE_STR_FIELD_NUMBER = 2;
        public static final int VALUE_STR_HASH_FIELD_NUMBER = 8;
        public static final int VALUE_TUPLE_FIELD_NUMBER = 7;
        private int bitField0_;
        private int field_ = 0;
        private int valueCase_ = 0;
        private Object value_;

        private DimensionsValue() {
        }

        public enum ValueCase implements Internal.EnumLite {
            VALUE_STR(2),
            VALUE_INT(3),
            VALUE_LONG(4),
            VALUE_BOOL(5),
            VALUE_FLOAT(6),
            VALUE_TUPLE(7),
            VALUE_STR_HASH(8),
            VALUE_NOT_SET(0);
            
            private final int value;

            private ValueCase(int value2) {
                this.value = value2;
            }

            @Deprecated
            public static ValueCase valueOf(int value2) {
                return forNumber(value2);
            }

            public static ValueCase forNumber(int value2) {
                if (value2 == 0) {
                    return VALUE_NOT_SET;
                }
                switch (value2) {
                    case 2:
                        return VALUE_STR;
                    case 3:
                        return VALUE_INT;
                    case 4:
                        return VALUE_LONG;
                    case 5:
                        return VALUE_BOOL;
                    case 6:
                        return VALUE_FLOAT;
                    case 7:
                        return VALUE_TUPLE;
                    case 8:
                        return VALUE_STR_HASH;
                    default:
                        return null;
                }
            }

            @Override // com.google.protobuf.Internal.EnumLite
            public int getNumber() {
                return this.value;
            }
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public ValueCase getValueCase() {
            return ValueCase.forNumber(this.valueCase_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValue() {
            this.valueCase_ = 0;
            this.value_ = null;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public boolean hasField() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public int getField() {
            return this.field_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setField(int value) {
            this.bitField0_ |= 1;
            this.field_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearField() {
            this.bitField0_ &= -2;
            this.field_ = 0;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public boolean hasValueStr() {
            return this.valueCase_ == 2;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public String getValueStr() {
            if (this.valueCase_ == 2) {
                return (String) this.value_;
            }
            return "";
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public ByteString getValueStrBytes() {
            String ref = "";
            if (this.valueCase_ == 2) {
                ref = (String) this.value_;
            }
            return ByteString.copyFromUtf8(ref);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueStr(String value) {
            if (value != null) {
                this.valueCase_ = 2;
                this.value_ = value;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueStr() {
            if (this.valueCase_ == 2) {
                this.valueCase_ = 0;
                this.value_ = null;
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueStrBytes(ByteString value) {
            if (value != null) {
                this.valueCase_ = 2;
                this.value_ = value.toStringUtf8();
                return;
            }
            throw new NullPointerException();
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public boolean hasValueInt() {
            return this.valueCase_ == 3;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public int getValueInt() {
            if (this.valueCase_ == 3) {
                return ((Integer) this.value_).intValue();
            }
            return 0;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueInt(int value) {
            this.valueCase_ = 3;
            this.value_ = Integer.valueOf(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueInt() {
            if (this.valueCase_ == 3) {
                this.valueCase_ = 0;
                this.value_ = null;
            }
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public boolean hasValueLong() {
            return this.valueCase_ == 4;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public long getValueLong() {
            if (this.valueCase_ == 4) {
                return ((Long) this.value_).longValue();
            }
            return 0;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueLong(long value) {
            this.valueCase_ = 4;
            this.value_ = Long.valueOf(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueLong() {
            if (this.valueCase_ == 4) {
                this.valueCase_ = 0;
                this.value_ = null;
            }
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public boolean hasValueBool() {
            return this.valueCase_ == 5;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public boolean getValueBool() {
            if (this.valueCase_ == 5) {
                return ((Boolean) this.value_).booleanValue();
            }
            return false;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueBool(boolean value) {
            this.valueCase_ = 5;
            this.value_ = Boolean.valueOf(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueBool() {
            if (this.valueCase_ == 5) {
                this.valueCase_ = 0;
                this.value_ = null;
            }
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public boolean hasValueFloat() {
            return this.valueCase_ == 6;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public float getValueFloat() {
            if (this.valueCase_ == 6) {
                return ((Float) this.value_).floatValue();
            }
            return 0.0f;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueFloat(float value) {
            this.valueCase_ = 6;
            this.value_ = Float.valueOf(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueFloat() {
            if (this.valueCase_ == 6) {
                this.valueCase_ = 0;
                this.value_ = null;
            }
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public boolean hasValueTuple() {
            return this.valueCase_ == 7;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public DimensionsValueTuple getValueTuple() {
            if (this.valueCase_ == 7) {
                return (DimensionsValueTuple) this.value_;
            }
            return DimensionsValueTuple.getDefaultInstance();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueTuple(DimensionsValueTuple value) {
            if (value != null) {
                this.value_ = value;
                this.valueCase_ = 7;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueTuple(DimensionsValueTuple.Builder builderForValue) {
            this.value_ = builderForValue.build();
            this.valueCase_ = 7;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeValueTuple(DimensionsValueTuple value) {
            if (this.valueCase_ != 7 || this.value_ == DimensionsValueTuple.getDefaultInstance()) {
                this.value_ = value;
            } else {
                this.value_ = ((DimensionsValueTuple.Builder) DimensionsValueTuple.newBuilder((DimensionsValueTuple) this.value_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.valueCase_ = 7;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueTuple() {
            if (this.valueCase_ == 7) {
                this.valueCase_ = 0;
                this.value_ = null;
            }
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public boolean hasValueStrHash() {
            return this.valueCase_ == 8;
        }

        @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
        public long getValueStrHash() {
            if (this.valueCase_ == 8) {
                return ((Long) this.value_).longValue();
            }
            return 0;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueStrHash(long value) {
            this.valueCase_ = 8;
            this.value_ = Long.valueOf(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueStrHash() {
            if (this.valueCase_ == 8) {
                this.valueCase_ = 0;
                this.value_ = null;
            }
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeInt32(1, this.field_);
            }
            if (this.valueCase_ == 2) {
                output.writeString(2, getValueStr());
            }
            if (this.valueCase_ == 3) {
                output.writeInt32(3, ((Integer) this.value_).intValue());
            }
            if (this.valueCase_ == 4) {
                output.writeInt64(4, ((Long) this.value_).longValue());
            }
            if (this.valueCase_ == 5) {
                output.writeBool(5, ((Boolean) this.value_).booleanValue());
            }
            if (this.valueCase_ == 6) {
                output.writeFloat(6, ((Float) this.value_).floatValue());
            }
            if (this.valueCase_ == 7) {
                output.writeMessage(7, (DimensionsValueTuple) this.value_);
            }
            if (this.valueCase_ == 8) {
                output.writeUInt64(8, ((Long) this.value_).longValue());
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeInt32Size(1, this.field_);
            }
            if (this.valueCase_ == 2) {
                size2 += CodedOutputStream.computeStringSize(2, getValueStr());
            }
            if (this.valueCase_ == 3) {
                size2 += CodedOutputStream.computeInt32Size(3, ((Integer) this.value_).intValue());
            }
            if (this.valueCase_ == 4) {
                size2 += CodedOutputStream.computeInt64Size(4, ((Long) this.value_).longValue());
            }
            if (this.valueCase_ == 5) {
                size2 += CodedOutputStream.computeBoolSize(5, ((Boolean) this.value_).booleanValue());
            }
            if (this.valueCase_ == 6) {
                size2 += CodedOutputStream.computeFloatSize(6, ((Float) this.value_).floatValue());
            }
            if (this.valueCase_ == 7) {
                size2 += CodedOutputStream.computeMessageSize(7, (DimensionsValueTuple) this.value_);
            }
            if (this.valueCase_ == 8) {
                size2 += CodedOutputStream.computeUInt64Size(8, ((Long) this.value_).longValue());
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static DimensionsValue parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DimensionsValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static DimensionsValue parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DimensionsValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static DimensionsValue parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DimensionsValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static DimensionsValue parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DimensionsValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static DimensionsValue parseFrom(InputStream input) throws IOException {
            return (DimensionsValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static DimensionsValue parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DimensionsValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static DimensionsValue parseDelimitedFrom(InputStream input) throws IOException {
            return (DimensionsValue) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static DimensionsValue parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DimensionsValue) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static DimensionsValue parseFrom(CodedInputStream input) throws IOException {
            return (DimensionsValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static DimensionsValue parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DimensionsValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DimensionsValue prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<DimensionsValue, Builder> implements DimensionsValueOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(DimensionsValue.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public ValueCase getValueCase() {
                return ((DimensionsValue) this.instance).getValueCase();
            }

            public Builder clearValue() {
                copyOnWrite();
                ((DimensionsValue) this.instance).clearValue();
                return this;
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public boolean hasField() {
                return ((DimensionsValue) this.instance).hasField();
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public int getField() {
                return ((DimensionsValue) this.instance).getField();
            }

            public Builder setField(int value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setField(value);
                return this;
            }

            public Builder clearField() {
                copyOnWrite();
                ((DimensionsValue) this.instance).clearField();
                return this;
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public boolean hasValueStr() {
                return ((DimensionsValue) this.instance).hasValueStr();
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public String getValueStr() {
                return ((DimensionsValue) this.instance).getValueStr();
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public ByteString getValueStrBytes() {
                return ((DimensionsValue) this.instance).getValueStrBytes();
            }

            public Builder setValueStr(String value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setValueStr(value);
                return this;
            }

            public Builder clearValueStr() {
                copyOnWrite();
                ((DimensionsValue) this.instance).clearValueStr();
                return this;
            }

            public Builder setValueStrBytes(ByteString value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setValueStrBytes(value);
                return this;
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public boolean hasValueInt() {
                return ((DimensionsValue) this.instance).hasValueInt();
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public int getValueInt() {
                return ((DimensionsValue) this.instance).getValueInt();
            }

            public Builder setValueInt(int value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setValueInt(value);
                return this;
            }

            public Builder clearValueInt() {
                copyOnWrite();
                ((DimensionsValue) this.instance).clearValueInt();
                return this;
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public boolean hasValueLong() {
                return ((DimensionsValue) this.instance).hasValueLong();
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public long getValueLong() {
                return ((DimensionsValue) this.instance).getValueLong();
            }

            public Builder setValueLong(long value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setValueLong(value);
                return this;
            }

            public Builder clearValueLong() {
                copyOnWrite();
                ((DimensionsValue) this.instance).clearValueLong();
                return this;
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public boolean hasValueBool() {
                return ((DimensionsValue) this.instance).hasValueBool();
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public boolean getValueBool() {
                return ((DimensionsValue) this.instance).getValueBool();
            }

            public Builder setValueBool(boolean value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setValueBool(value);
                return this;
            }

            public Builder clearValueBool() {
                copyOnWrite();
                ((DimensionsValue) this.instance).clearValueBool();
                return this;
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public boolean hasValueFloat() {
                return ((DimensionsValue) this.instance).hasValueFloat();
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public float getValueFloat() {
                return ((DimensionsValue) this.instance).getValueFloat();
            }

            public Builder setValueFloat(float value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setValueFloat(value);
                return this;
            }

            public Builder clearValueFloat() {
                copyOnWrite();
                ((DimensionsValue) this.instance).clearValueFloat();
                return this;
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public boolean hasValueTuple() {
                return ((DimensionsValue) this.instance).hasValueTuple();
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public DimensionsValueTuple getValueTuple() {
                return ((DimensionsValue) this.instance).getValueTuple();
            }

            public Builder setValueTuple(DimensionsValueTuple value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setValueTuple((DimensionsValue) value);
                return this;
            }

            public Builder setValueTuple(DimensionsValueTuple.Builder builderForValue) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setValueTuple((DimensionsValue) builderForValue);
                return this;
            }

            public Builder mergeValueTuple(DimensionsValueTuple value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).mergeValueTuple(value);
                return this;
            }

            public Builder clearValueTuple() {
                copyOnWrite();
                ((DimensionsValue) this.instance).clearValueTuple();
                return this;
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public boolean hasValueStrHash() {
                return ((DimensionsValue) this.instance).hasValueStrHash();
            }

            @Override // com.android.os.StatsLog.DimensionsValueOrBuilder
            public long getValueStrHash() {
                return ((DimensionsValue) this.instance).getValueStrHash();
            }

            public Builder setValueStrHash(long value) {
                copyOnWrite();
                ((DimensionsValue) this.instance).setValueStrHash(value);
                return this;
            }

            public Builder clearValueStrHash() {
                copyOnWrite();
                ((DimensionsValue) this.instance).clearValueStrHash();
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new DimensionsValue();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    DimensionsValue other = (DimensionsValue) arg1;
                    this.field_ = visitor.visitInt(hasField(), this.field_, other.hasField(), other.field_);
                    boolean z = false;
                    switch (other.getValueCase()) {
                        case VALUE_STR:
                            if (this.valueCase_ == 2) {
                                z = true;
                            }
                            this.value_ = visitor.visitOneofString(z, this.value_, other.value_);
                            break;
                        case VALUE_INT:
                            if (this.valueCase_ == 3) {
                                z = true;
                            }
                            this.value_ = visitor.visitOneofInt(z, this.value_, other.value_);
                            break;
                        case VALUE_LONG:
                            if (this.valueCase_ == 4) {
                                z = true;
                            }
                            this.value_ = visitor.visitOneofLong(z, this.value_, other.value_);
                            break;
                        case VALUE_BOOL:
                            if (this.valueCase_ == 5) {
                                z = true;
                            }
                            this.value_ = visitor.visitOneofBoolean(z, this.value_, other.value_);
                            break;
                        case VALUE_FLOAT:
                            if (this.valueCase_ == 6) {
                                z = true;
                            }
                            this.value_ = visitor.visitOneofFloat(z, this.value_, other.value_);
                            break;
                        case VALUE_TUPLE:
                            if (this.valueCase_ == 7) {
                                z = true;
                            }
                            this.value_ = visitor.visitOneofMessage(z, this.value_, other.value_);
                            break;
                        case VALUE_STR_HASH:
                            if (this.valueCase_ == 8) {
                                z = true;
                            }
                            this.value_ = visitor.visitOneofLong(z, this.value_, other.value_);
                            break;
                        case VALUE_NOT_SET:
                            if (this.valueCase_ != 0) {
                                z = true;
                            }
                            visitor.visitOneofNotSet(z);
                            break;
                    }
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        int i = other.valueCase_;
                        if (i != 0) {
                            this.valueCase_ = i;
                        }
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 8) {
                                this.bitField0_ |= 1;
                                this.field_ = input.readInt32();
                            } else if (tag == 18) {
                                String s = input.readString();
                                this.valueCase_ = 2;
                                this.value_ = s;
                            } else if (tag == 24) {
                                this.valueCase_ = 3;
                                this.value_ = Integer.valueOf(input.readInt32());
                            } else if (tag == 32) {
                                this.valueCase_ = 4;
                                this.value_ = Long.valueOf(input.readInt64());
                            } else if (tag == 40) {
                                this.valueCase_ = 5;
                                this.value_ = Boolean.valueOf(input.readBool());
                            } else if (tag == 53) {
                                this.valueCase_ = 6;
                                this.value_ = Float.valueOf(input.readFloat());
                            } else if (tag == 58) {
                                DimensionsValueTuple.Builder subBuilder = null;
                                if (this.valueCase_ == 7) {
                                    subBuilder = (DimensionsValueTuple.Builder) ((DimensionsValueTuple) this.value_).toBuilder();
                                }
                                this.value_ = input.readMessage(DimensionsValueTuple.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom((GeneratedMessageLite) ((DimensionsValueTuple) this.value_));
                                    this.value_ = subBuilder.buildPartial();
                                }
                                this.valueCase_ = 7;
                            } else if (tag == 64) {
                                this.valueCase_ = 8;
                                this.value_ = Long.valueOf(input.readUInt64());
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (DimensionsValue.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static DimensionsValue getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<DimensionsValue> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class DimensionsValueTuple extends GeneratedMessageLite<DimensionsValueTuple, Builder> implements DimensionsValueTupleOrBuilder {
        private static final DimensionsValueTuple DEFAULT_INSTANCE = new DimensionsValueTuple();
        public static final int DIMENSIONS_VALUE_FIELD_NUMBER = 1;
        private static volatile Parser<DimensionsValueTuple> PARSER;
        private Internal.ProtobufList<DimensionsValue> dimensionsValue_ = emptyProtobufList();

        private DimensionsValueTuple() {
        }

        @Override // com.android.os.StatsLog.DimensionsValueTupleOrBuilder
        public List<DimensionsValue> getDimensionsValueList() {
            return this.dimensionsValue_;
        }

        public List<? extends DimensionsValueOrBuilder> getDimensionsValueOrBuilderList() {
            return this.dimensionsValue_;
        }

        @Override // com.android.os.StatsLog.DimensionsValueTupleOrBuilder
        public int getDimensionsValueCount() {
            return this.dimensionsValue_.size();
        }

        @Override // com.android.os.StatsLog.DimensionsValueTupleOrBuilder
        public DimensionsValue getDimensionsValue(int index) {
            return this.dimensionsValue_.get(index);
        }

        public DimensionsValueOrBuilder getDimensionsValueOrBuilder(int index) {
            return this.dimensionsValue_.get(index);
        }

        private void ensureDimensionsValueIsMutable() {
            if (!this.dimensionsValue_.isModifiable()) {
                this.dimensionsValue_ = GeneratedMessageLite.mutableCopy(this.dimensionsValue_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsValue(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionsValueIsMutable();
                this.dimensionsValue_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsValue(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionsValueIsMutable();
            this.dimensionsValue_.set(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionsValue(DimensionsValue value) {
            if (value != null) {
                ensureDimensionsValueIsMutable();
                this.dimensionsValue_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionsValue(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionsValueIsMutable();
                this.dimensionsValue_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionsValue(DimensionsValue.Builder builderForValue) {
            ensureDimensionsValueIsMutable();
            this.dimensionsValue_.add((DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionsValue(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionsValueIsMutable();
            this.dimensionsValue_.add(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDimensionsValue(Iterable<? extends DimensionsValue> values) {
            ensureDimensionsValueIsMutable();
            AbstractMessageLite.addAll(values, this.dimensionsValue_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsValue() {
            this.dimensionsValue_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDimensionsValue(int index) {
            ensureDimensionsValueIsMutable();
            this.dimensionsValue_.remove(index);
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            for (int i = 0; i < this.dimensionsValue_.size(); i++) {
                output.writeMessage(1, this.dimensionsValue_.get(i));
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            for (int i = 0; i < this.dimensionsValue_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(1, this.dimensionsValue_.get(i));
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static DimensionsValueTuple parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DimensionsValueTuple) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static DimensionsValueTuple parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DimensionsValueTuple) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static DimensionsValueTuple parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DimensionsValueTuple) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static DimensionsValueTuple parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DimensionsValueTuple) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static DimensionsValueTuple parseFrom(InputStream input) throws IOException {
            return (DimensionsValueTuple) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static DimensionsValueTuple parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DimensionsValueTuple) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static DimensionsValueTuple parseDelimitedFrom(InputStream input) throws IOException {
            return (DimensionsValueTuple) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static DimensionsValueTuple parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DimensionsValueTuple) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static DimensionsValueTuple parseFrom(CodedInputStream input) throws IOException {
            return (DimensionsValueTuple) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static DimensionsValueTuple parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DimensionsValueTuple) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DimensionsValueTuple prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<DimensionsValueTuple, Builder> implements DimensionsValueTupleOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(DimensionsValueTuple.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.DimensionsValueTupleOrBuilder
            public List<DimensionsValue> getDimensionsValueList() {
                return Collections.unmodifiableList(((DimensionsValueTuple) this.instance).getDimensionsValueList());
            }

            @Override // com.android.os.StatsLog.DimensionsValueTupleOrBuilder
            public int getDimensionsValueCount() {
                return ((DimensionsValueTuple) this.instance).getDimensionsValueCount();
            }

            @Override // com.android.os.StatsLog.DimensionsValueTupleOrBuilder
            public DimensionsValue getDimensionsValue(int index) {
                return ((DimensionsValueTuple) this.instance).getDimensionsValue(index);
            }

            public Builder setDimensionsValue(int index, DimensionsValue value) {
                copyOnWrite();
                ((DimensionsValueTuple) this.instance).setDimensionsValue((DimensionsValueTuple) index, (int) value);
                return this;
            }

            public Builder setDimensionsValue(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DimensionsValueTuple) this.instance).setDimensionsValue((DimensionsValueTuple) index, (int) builderForValue);
                return this;
            }

            public Builder addDimensionsValue(DimensionsValue value) {
                copyOnWrite();
                ((DimensionsValueTuple) this.instance).addDimensionsValue((DimensionsValueTuple) value);
                return this;
            }

            public Builder addDimensionsValue(int index, DimensionsValue value) {
                copyOnWrite();
                ((DimensionsValueTuple) this.instance).addDimensionsValue((DimensionsValueTuple) index, (int) value);
                return this;
            }

            public Builder addDimensionsValue(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DimensionsValueTuple) this.instance).addDimensionsValue((DimensionsValueTuple) builderForValue);
                return this;
            }

            public Builder addDimensionsValue(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DimensionsValueTuple) this.instance).addDimensionsValue((DimensionsValueTuple) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDimensionsValue(Iterable<? extends DimensionsValue> values) {
                copyOnWrite();
                ((DimensionsValueTuple) this.instance).addAllDimensionsValue(values);
                return this;
            }

            public Builder clearDimensionsValue() {
                copyOnWrite();
                ((DimensionsValueTuple) this.instance).clearDimensionsValue();
                return this;
            }

            public Builder removeDimensionsValue(int index) {
                copyOnWrite();
                ((DimensionsValueTuple) this.instance).removeDimensionsValue(index);
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new DimensionsValueTuple();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.dimensionsValue_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    this.dimensionsValue_ = ((GeneratedMessageLite.Visitor) arg0).visitList(this.dimensionsValue_, ((DimensionsValueTuple) arg1).dimensionsValue_);
                    GeneratedMessageLite.MergeFromVisitor mergeFromVisitor = GeneratedMessageLite.MergeFromVisitor.INSTANCE;
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 10) {
                                if (!this.dimensionsValue_.isModifiable()) {
                                    this.dimensionsValue_ = GeneratedMessageLite.mutableCopy(this.dimensionsValue_);
                                }
                                this.dimensionsValue_.add((DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry));
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (DimensionsValueTuple.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static DimensionsValueTuple getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<DimensionsValueTuple> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class EventMetricData extends GeneratedMessageLite<EventMetricData, Builder> implements EventMetricDataOrBuilder {
        public static final int ATOM_FIELD_NUMBER = 2;
        private static final EventMetricData DEFAULT_INSTANCE = new EventMetricData();
        public static final int ELAPSED_TIMESTAMP_NANOS_FIELD_NUMBER = 1;
        private static volatile Parser<EventMetricData> PARSER = null;
        public static final int WALL_CLOCK_TIMESTAMP_NANOS_FIELD_NUMBER = 3;
        private AtomsProto.Atom atom_;
        private int bitField0_;
        private long elapsedTimestampNanos_ = 0;
        private long wallClockTimestampNanos_ = 0;

        private EventMetricData() {
        }

        @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
        public boolean hasElapsedTimestampNanos() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
        public long getElapsedTimestampNanos() {
            return this.elapsedTimestampNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setElapsedTimestampNanos(long value) {
            this.bitField0_ |= 1;
            this.elapsedTimestampNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearElapsedTimestampNanos() {
            this.bitField0_ &= -2;
            this.elapsedTimestampNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
        public boolean hasAtom() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
        public AtomsProto.Atom getAtom() {
            AtomsProto.Atom atom = this.atom_;
            return atom == null ? AtomsProto.Atom.getDefaultInstance() : atom;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAtom(AtomsProto.Atom value) {
            if (value != null) {
                this.atom_ = value;
                this.bitField0_ |= 2;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAtom(AtomsProto.Atom.Builder builderForValue) {
            this.atom_ = (AtomsProto.Atom) builderForValue.build();
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeAtom(AtomsProto.Atom value) {
            AtomsProto.Atom atom = this.atom_;
            if (atom == null || atom == AtomsProto.Atom.getDefaultInstance()) {
                this.atom_ = value;
            } else {
                this.atom_ = (AtomsProto.Atom) ((AtomsProto.Atom.Builder) AtomsProto.Atom.newBuilder(this.atom_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearAtom() {
            this.atom_ = null;
            this.bitField0_ &= -3;
        }

        @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
        @Deprecated
        public boolean hasWallClockTimestampNanos() {
            return (this.bitField0_ & 4) == 4;
        }

        @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
        @Deprecated
        public long getWallClockTimestampNanos() {
            return this.wallClockTimestampNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setWallClockTimestampNanos(long value) {
            this.bitField0_ |= 4;
            this.wallClockTimestampNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearWallClockTimestampNanos() {
            this.bitField0_ &= -5;
            this.wallClockTimestampNanos_ = 0;
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeInt64(1, this.elapsedTimestampNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeMessage(2, getAtom());
            }
            if ((this.bitField0_ & 4) == 4) {
                output.writeInt64(3, this.wallClockTimestampNanos_);
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeInt64Size(1, this.elapsedTimestampNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeMessageSize(2, getAtom());
            }
            if ((this.bitField0_ & 4) == 4) {
                size2 += CodedOutputStream.computeInt64Size(3, this.wallClockTimestampNanos_);
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static EventMetricData parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (EventMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static EventMetricData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (EventMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static EventMetricData parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (EventMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static EventMetricData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (EventMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static EventMetricData parseFrom(InputStream input) throws IOException {
            return (EventMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static EventMetricData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (EventMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static EventMetricData parseDelimitedFrom(InputStream input) throws IOException {
            return (EventMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static EventMetricData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (EventMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static EventMetricData parseFrom(CodedInputStream input) throws IOException {
            return (EventMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static EventMetricData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (EventMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(EventMetricData prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<EventMetricData, Builder> implements EventMetricDataOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(EventMetricData.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
            public boolean hasElapsedTimestampNanos() {
                return ((EventMetricData) this.instance).hasElapsedTimestampNanos();
            }

            @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
            public long getElapsedTimestampNanos() {
                return ((EventMetricData) this.instance).getElapsedTimestampNanos();
            }

            public Builder setElapsedTimestampNanos(long value) {
                copyOnWrite();
                ((EventMetricData) this.instance).setElapsedTimestampNanos(value);
                return this;
            }

            public Builder clearElapsedTimestampNanos() {
                copyOnWrite();
                ((EventMetricData) this.instance).clearElapsedTimestampNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
            public boolean hasAtom() {
                return ((EventMetricData) this.instance).hasAtom();
            }

            @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
            public AtomsProto.Atom getAtom() {
                return ((EventMetricData) this.instance).getAtom();
            }

            public Builder setAtom(AtomsProto.Atom value) {
                copyOnWrite();
                ((EventMetricData) this.instance).setAtom((EventMetricData) value);
                return this;
            }

            public Builder setAtom(AtomsProto.Atom.Builder builderForValue) {
                copyOnWrite();
                ((EventMetricData) this.instance).setAtom((EventMetricData) builderForValue);
                return this;
            }

            public Builder mergeAtom(AtomsProto.Atom value) {
                copyOnWrite();
                ((EventMetricData) this.instance).mergeAtom(value);
                return this;
            }

            public Builder clearAtom() {
                copyOnWrite();
                ((EventMetricData) this.instance).clearAtom();
                return this;
            }

            @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
            @Deprecated
            public boolean hasWallClockTimestampNanos() {
                return ((EventMetricData) this.instance).hasWallClockTimestampNanos();
            }

            @Override // com.android.os.StatsLog.EventMetricDataOrBuilder
            @Deprecated
            public long getWallClockTimestampNanos() {
                return ((EventMetricData) this.instance).getWallClockTimestampNanos();
            }

            @Deprecated
            public Builder setWallClockTimestampNanos(long value) {
                copyOnWrite();
                ((EventMetricData) this.instance).setWallClockTimestampNanos(value);
                return this;
            }

            @Deprecated
            public Builder clearWallClockTimestampNanos() {
                copyOnWrite();
                ((EventMetricData) this.instance).clearWallClockTimestampNanos();
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new EventMetricData();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    EventMetricData other = (EventMetricData) arg1;
                    this.elapsedTimestampNanos_ = visitor.visitLong(hasElapsedTimestampNanos(), this.elapsedTimestampNanos_, other.hasElapsedTimestampNanos(), other.elapsedTimestampNanos_);
                    this.atom_ = (AtomsProto.Atom) visitor.visitMessage(this.atom_, other.atom_);
                    this.wallClockTimestampNanos_ = visitor.visitLong(hasWallClockTimestampNanos(), this.wallClockTimestampNanos_, other.hasWallClockTimestampNanos(), other.wallClockTimestampNanos_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 8) {
                                this.bitField0_ |= 1;
                                this.elapsedTimestampNanos_ = input.readInt64();
                            } else if (tag == 18) {
                                AtomsProto.Atom.Builder subBuilder = null;
                                if ((this.bitField0_ & 2) == 2) {
                                    subBuilder = (AtomsProto.Atom.Builder) this.atom_.toBuilder();
                                }
                                this.atom_ = (AtomsProto.Atom) input.readMessage(AtomsProto.Atom.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom((GeneratedMessageLite) this.atom_);
                                    this.atom_ = (AtomsProto.Atom) subBuilder.buildPartial();
                                }
                                this.bitField0_ |= 2;
                            } else if (tag == 24) {
                                this.bitField0_ |= 4;
                                this.wallClockTimestampNanos_ = input.readInt64();
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (EventMetricData.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static EventMetricData getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<EventMetricData> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class CountBucketInfo extends GeneratedMessageLite<CountBucketInfo, Builder> implements CountBucketInfoOrBuilder {
        public static final int BUCKET_NUM_FIELD_NUMBER = 4;
        public static final int COUNT_FIELD_NUMBER = 3;
        private static final CountBucketInfo DEFAULT_INSTANCE = new CountBucketInfo();
        public static final int END_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 6;
        public static final int END_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 2;
        private static volatile Parser<CountBucketInfo> PARSER = null;
        public static final int START_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 5;
        public static final int START_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 1;
        private int bitField0_;
        private long bucketNum_ = 0;
        private long count_ = 0;
        private long endBucketElapsedMillis_ = 0;
        private long endBucketElapsedNanos_ = 0;
        private long startBucketElapsedMillis_ = 0;
        private long startBucketElapsedNanos_ = 0;

        private CountBucketInfo() {
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public boolean hasStartBucketElapsedNanos() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public long getStartBucketElapsedNanos() {
            return this.startBucketElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStartBucketElapsedNanos(long value) {
            this.bitField0_ |= 1;
            this.startBucketElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStartBucketElapsedNanos() {
            this.bitField0_ &= -2;
            this.startBucketElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public boolean hasEndBucketElapsedNanos() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public long getEndBucketElapsedNanos() {
            return this.endBucketElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEndBucketElapsedNanos(long value) {
            this.bitField0_ |= 2;
            this.endBucketElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearEndBucketElapsedNanos() {
            this.bitField0_ &= -3;
            this.endBucketElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public boolean hasCount() {
            return (this.bitField0_ & 4) == 4;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public long getCount() {
            return this.count_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setCount(long value) {
            this.bitField0_ |= 4;
            this.count_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearCount() {
            this.bitField0_ &= -5;
            this.count_ = 0;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public boolean hasBucketNum() {
            return (this.bitField0_ & 8) == 8;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public long getBucketNum() {
            return this.bucketNum_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketNum(long value) {
            this.bitField0_ |= 8;
            this.bucketNum_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearBucketNum() {
            this.bitField0_ &= -9;
            this.bucketNum_ = 0;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public boolean hasStartBucketElapsedMillis() {
            return (this.bitField0_ & 16) == 16;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public long getStartBucketElapsedMillis() {
            return this.startBucketElapsedMillis_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStartBucketElapsedMillis(long value) {
            this.bitField0_ |= 16;
            this.startBucketElapsedMillis_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStartBucketElapsedMillis() {
            this.bitField0_ &= -17;
            this.startBucketElapsedMillis_ = 0;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public boolean hasEndBucketElapsedMillis() {
            return (this.bitField0_ & 32) == 32;
        }

        @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
        public long getEndBucketElapsedMillis() {
            return this.endBucketElapsedMillis_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEndBucketElapsedMillis(long value) {
            this.bitField0_ |= 32;
            this.endBucketElapsedMillis_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearEndBucketElapsedMillis() {
            this.bitField0_ &= -33;
            this.endBucketElapsedMillis_ = 0;
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeInt64(1, this.startBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeInt64(2, this.endBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 4) == 4) {
                output.writeInt64(3, this.count_);
            }
            if ((this.bitField0_ & 8) == 8) {
                output.writeInt64(4, this.bucketNum_);
            }
            if ((this.bitField0_ & 16) == 16) {
                output.writeInt64(5, this.startBucketElapsedMillis_);
            }
            if ((this.bitField0_ & 32) == 32) {
                output.writeInt64(6, this.endBucketElapsedMillis_);
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeInt64Size(1, this.startBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeInt64Size(2, this.endBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 4) == 4) {
                size2 += CodedOutputStream.computeInt64Size(3, this.count_);
            }
            if ((this.bitField0_ & 8) == 8) {
                size2 += CodedOutputStream.computeInt64Size(4, this.bucketNum_);
            }
            if ((this.bitField0_ & 16) == 16) {
                size2 += CodedOutputStream.computeInt64Size(5, this.startBucketElapsedMillis_);
            }
            if ((this.bitField0_ & 32) == 32) {
                size2 += CodedOutputStream.computeInt64Size(6, this.endBucketElapsedMillis_);
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static CountBucketInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (CountBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static CountBucketInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (CountBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static CountBucketInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (CountBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static CountBucketInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (CountBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static CountBucketInfo parseFrom(InputStream input) throws IOException {
            return (CountBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static CountBucketInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CountBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static CountBucketInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (CountBucketInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static CountBucketInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CountBucketInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static CountBucketInfo parseFrom(CodedInputStream input) throws IOException {
            return (CountBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static CountBucketInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CountBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(CountBucketInfo prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<CountBucketInfo, Builder> implements CountBucketInfoOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(CountBucketInfo.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public boolean hasStartBucketElapsedNanos() {
                return ((CountBucketInfo) this.instance).hasStartBucketElapsedNanos();
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public long getStartBucketElapsedNanos() {
                return ((CountBucketInfo) this.instance).getStartBucketElapsedNanos();
            }

            public Builder setStartBucketElapsedNanos(long value) {
                copyOnWrite();
                ((CountBucketInfo) this.instance).setStartBucketElapsedNanos(value);
                return this;
            }

            public Builder clearStartBucketElapsedNanos() {
                copyOnWrite();
                ((CountBucketInfo) this.instance).clearStartBucketElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public boolean hasEndBucketElapsedNanos() {
                return ((CountBucketInfo) this.instance).hasEndBucketElapsedNanos();
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public long getEndBucketElapsedNanos() {
                return ((CountBucketInfo) this.instance).getEndBucketElapsedNanos();
            }

            public Builder setEndBucketElapsedNanos(long value) {
                copyOnWrite();
                ((CountBucketInfo) this.instance).setEndBucketElapsedNanos(value);
                return this;
            }

            public Builder clearEndBucketElapsedNanos() {
                copyOnWrite();
                ((CountBucketInfo) this.instance).clearEndBucketElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public boolean hasCount() {
                return ((CountBucketInfo) this.instance).hasCount();
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public long getCount() {
                return ((CountBucketInfo) this.instance).getCount();
            }

            public Builder setCount(long value) {
                copyOnWrite();
                ((CountBucketInfo) this.instance).setCount(value);
                return this;
            }

            public Builder clearCount() {
                copyOnWrite();
                ((CountBucketInfo) this.instance).clearCount();
                return this;
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public boolean hasBucketNum() {
                return ((CountBucketInfo) this.instance).hasBucketNum();
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public long getBucketNum() {
                return ((CountBucketInfo) this.instance).getBucketNum();
            }

            public Builder setBucketNum(long value) {
                copyOnWrite();
                ((CountBucketInfo) this.instance).setBucketNum(value);
                return this;
            }

            public Builder clearBucketNum() {
                copyOnWrite();
                ((CountBucketInfo) this.instance).clearBucketNum();
                return this;
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public boolean hasStartBucketElapsedMillis() {
                return ((CountBucketInfo) this.instance).hasStartBucketElapsedMillis();
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public long getStartBucketElapsedMillis() {
                return ((CountBucketInfo) this.instance).getStartBucketElapsedMillis();
            }

            public Builder setStartBucketElapsedMillis(long value) {
                copyOnWrite();
                ((CountBucketInfo) this.instance).setStartBucketElapsedMillis(value);
                return this;
            }

            public Builder clearStartBucketElapsedMillis() {
                copyOnWrite();
                ((CountBucketInfo) this.instance).clearStartBucketElapsedMillis();
                return this;
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public boolean hasEndBucketElapsedMillis() {
                return ((CountBucketInfo) this.instance).hasEndBucketElapsedMillis();
            }

            @Override // com.android.os.StatsLog.CountBucketInfoOrBuilder
            public long getEndBucketElapsedMillis() {
                return ((CountBucketInfo) this.instance).getEndBucketElapsedMillis();
            }

            public Builder setEndBucketElapsedMillis(long value) {
                copyOnWrite();
                ((CountBucketInfo) this.instance).setEndBucketElapsedMillis(value);
                return this;
            }

            public Builder clearEndBucketElapsedMillis() {
                copyOnWrite();
                ((CountBucketInfo) this.instance).clearEndBucketElapsedMillis();
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new CountBucketInfo();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    CountBucketInfo other = (CountBucketInfo) arg1;
                    this.startBucketElapsedNanos_ = visitor.visitLong(hasStartBucketElapsedNanos(), this.startBucketElapsedNanos_, other.hasStartBucketElapsedNanos(), other.startBucketElapsedNanos_);
                    this.endBucketElapsedNanos_ = visitor.visitLong(hasEndBucketElapsedNanos(), this.endBucketElapsedNanos_, other.hasEndBucketElapsedNanos(), other.endBucketElapsedNanos_);
                    this.count_ = visitor.visitLong(hasCount(), this.count_, other.hasCount(), other.count_);
                    this.bucketNum_ = visitor.visitLong(hasBucketNum(), this.bucketNum_, other.hasBucketNum(), other.bucketNum_);
                    this.startBucketElapsedMillis_ = visitor.visitLong(hasStartBucketElapsedMillis(), this.startBucketElapsedMillis_, other.hasStartBucketElapsedMillis(), other.startBucketElapsedMillis_);
                    this.endBucketElapsedMillis_ = visitor.visitLong(hasEndBucketElapsedMillis(), this.endBucketElapsedMillis_, other.hasEndBucketElapsedMillis(), other.endBucketElapsedMillis_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 8) {
                                this.bitField0_ |= 1;
                                this.startBucketElapsedNanos_ = input.readInt64();
                            } else if (tag == 16) {
                                this.bitField0_ |= 2;
                                this.endBucketElapsedNanos_ = input.readInt64();
                            } else if (tag == 24) {
                                this.bitField0_ |= 4;
                                this.count_ = input.readInt64();
                            } else if (tag == 32) {
                                this.bitField0_ = 8 | this.bitField0_;
                                this.bucketNum_ = input.readInt64();
                            } else if (tag == 40) {
                                this.bitField0_ |= 16;
                                this.startBucketElapsedMillis_ = input.readInt64();
                            } else if (tag == 48) {
                                this.bitField0_ |= 32;
                                this.endBucketElapsedMillis_ = input.readInt64();
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (CountBucketInfo.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static CountBucketInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<CountBucketInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class CountMetricData extends GeneratedMessageLite<CountMetricData, Builder> implements CountMetricDataOrBuilder {
        public static final int BUCKET_INFO_FIELD_NUMBER = 3;
        private static final CountMetricData DEFAULT_INSTANCE = new CountMetricData();
        public static final int DIMENSIONS_IN_CONDITION_FIELD_NUMBER = 2;
        public static final int DIMENSIONS_IN_WHAT_FIELD_NUMBER = 1;
        public static final int DIMENSION_LEAF_VALUES_IN_CONDITION_FIELD_NUMBER = 5;
        public static final int DIMENSION_LEAF_VALUES_IN_WHAT_FIELD_NUMBER = 4;
        private static volatile Parser<CountMetricData> PARSER;
        private int bitField0_;
        private Internal.ProtobufList<CountBucketInfo> bucketInfo_ = emptyProtobufList();
        private Internal.ProtobufList<DimensionsValue> dimensionLeafValuesInCondition_ = emptyProtobufList();
        private Internal.ProtobufList<DimensionsValue> dimensionLeafValuesInWhat_ = emptyProtobufList();
        private DimensionsValue dimensionsInCondition_;
        private DimensionsValue dimensionsInWhat_;

        private CountMetricData() {
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public boolean hasDimensionsInWhat() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public DimensionsValue getDimensionsInWhat() {
            DimensionsValue dimensionsValue = this.dimensionsInWhat_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInWhat(DimensionsValue value) {
            if (value != null) {
                this.dimensionsInWhat_ = value;
                this.bitField0_ |= 1;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInWhat(DimensionsValue.Builder builderForValue) {
            this.dimensionsInWhat_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsInWhat(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsInWhat_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsInWhat_ = value;
            } else {
                this.dimensionsInWhat_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsInWhat_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsInWhat() {
            this.dimensionsInWhat_ = null;
            this.bitField0_ &= -2;
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public boolean hasDimensionsInCondition() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public DimensionsValue getDimensionsInCondition() {
            DimensionsValue dimensionsValue = this.dimensionsInCondition_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInCondition(DimensionsValue value) {
            if (value != null) {
                this.dimensionsInCondition_ = value;
                this.bitField0_ |= 2;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInCondition(DimensionsValue.Builder builderForValue) {
            this.dimensionsInCondition_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsInCondition(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsInCondition_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsInCondition_ = value;
            } else {
                this.dimensionsInCondition_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsInCondition_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsInCondition() {
            this.dimensionsInCondition_ = null;
            this.bitField0_ &= -3;
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public List<CountBucketInfo> getBucketInfoList() {
            return this.bucketInfo_;
        }

        public List<? extends CountBucketInfoOrBuilder> getBucketInfoOrBuilderList() {
            return this.bucketInfo_;
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public int getBucketInfoCount() {
            return this.bucketInfo_.size();
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public CountBucketInfo getBucketInfo(int index) {
            return this.bucketInfo_.get(index);
        }

        public CountBucketInfoOrBuilder getBucketInfoOrBuilder(int index) {
            return this.bucketInfo_.get(index);
        }

        private void ensureBucketInfoIsMutable() {
            if (!this.bucketInfo_.isModifiable()) {
                this.bucketInfo_ = GeneratedMessageLite.mutableCopy(this.bucketInfo_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketInfo(int index, CountBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketInfo(int index, CountBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.set(index, (CountBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(CountBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(int index, CountBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(CountBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.add((CountBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(int index, CountBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.add(index, (CountBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllBucketInfo(Iterable<? extends CountBucketInfo> values) {
            ensureBucketInfoIsMutable();
            AbstractMessageLite.addAll(values, this.bucketInfo_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearBucketInfo() {
            this.bucketInfo_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeBucketInfo(int index) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.remove(index);
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public List<DimensionsValue> getDimensionLeafValuesInWhatList() {
            return this.dimensionLeafValuesInWhat_;
        }

        public List<? extends DimensionsValueOrBuilder> getDimensionLeafValuesInWhatOrBuilderList() {
            return this.dimensionLeafValuesInWhat_;
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public int getDimensionLeafValuesInWhatCount() {
            return this.dimensionLeafValuesInWhat_.size();
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public DimensionsValue getDimensionLeafValuesInWhat(int index) {
            return this.dimensionLeafValuesInWhat_.get(index);
        }

        public DimensionsValueOrBuilder getDimensionLeafValuesInWhatOrBuilder(int index) {
            return this.dimensionLeafValuesInWhat_.get(index);
        }

        private void ensureDimensionLeafValuesInWhatIsMutable() {
            if (!this.dimensionLeafValuesInWhat_.isModifiable()) {
                this.dimensionLeafValuesInWhat_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInWhat_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInWhat(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.set(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.add((DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.add(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDimensionLeafValuesInWhat(Iterable<? extends DimensionsValue> values) {
            ensureDimensionLeafValuesInWhatIsMutable();
            AbstractMessageLite.addAll(values, this.dimensionLeafValuesInWhat_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionLeafValuesInWhat() {
            this.dimensionLeafValuesInWhat_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDimensionLeafValuesInWhat(int index) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.remove(index);
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public List<DimensionsValue> getDimensionLeafValuesInConditionList() {
            return this.dimensionLeafValuesInCondition_;
        }

        public List<? extends DimensionsValueOrBuilder> getDimensionLeafValuesInConditionOrBuilderList() {
            return this.dimensionLeafValuesInCondition_;
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public int getDimensionLeafValuesInConditionCount() {
            return this.dimensionLeafValuesInCondition_.size();
        }

        @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
        public DimensionsValue getDimensionLeafValuesInCondition(int index) {
            return this.dimensionLeafValuesInCondition_.get(index);
        }

        public DimensionsValueOrBuilder getDimensionLeafValuesInConditionOrBuilder(int index) {
            return this.dimensionLeafValuesInCondition_.get(index);
        }

        private void ensureDimensionLeafValuesInConditionIsMutable() {
            if (!this.dimensionLeafValuesInCondition_.isModifiable()) {
                this.dimensionLeafValuesInCondition_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInCondition_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInCondition(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.set(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.add((DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.add(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDimensionLeafValuesInCondition(Iterable<? extends DimensionsValue> values) {
            ensureDimensionLeafValuesInConditionIsMutable();
            AbstractMessageLite.addAll(values, this.dimensionLeafValuesInCondition_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionLeafValuesInCondition() {
            this.dimensionLeafValuesInCondition_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDimensionLeafValuesInCondition(int index) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.remove(index);
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeMessage(1, getDimensionsInWhat());
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeMessage(2, getDimensionsInCondition());
            }
            for (int i = 0; i < this.bucketInfo_.size(); i++) {
                output.writeMessage(3, this.bucketInfo_.get(i));
            }
            for (int i2 = 0; i2 < this.dimensionLeafValuesInWhat_.size(); i2++) {
                output.writeMessage(4, this.dimensionLeafValuesInWhat_.get(i2));
            }
            for (int i3 = 0; i3 < this.dimensionLeafValuesInCondition_.size(); i3++) {
                output.writeMessage(5, this.dimensionLeafValuesInCondition_.get(i3));
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeMessageSize(1, getDimensionsInWhat());
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeMessageSize(2, getDimensionsInCondition());
            }
            for (int i = 0; i < this.bucketInfo_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(3, this.bucketInfo_.get(i));
            }
            for (int i2 = 0; i2 < this.dimensionLeafValuesInWhat_.size(); i2++) {
                size2 += CodedOutputStream.computeMessageSize(4, this.dimensionLeafValuesInWhat_.get(i2));
            }
            for (int i3 = 0; i3 < this.dimensionLeafValuesInCondition_.size(); i3++) {
                size2 += CodedOutputStream.computeMessageSize(5, this.dimensionLeafValuesInCondition_.get(i3));
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static CountMetricData parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (CountMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static CountMetricData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (CountMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static CountMetricData parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (CountMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static CountMetricData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (CountMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static CountMetricData parseFrom(InputStream input) throws IOException {
            return (CountMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static CountMetricData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CountMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static CountMetricData parseDelimitedFrom(InputStream input) throws IOException {
            return (CountMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static CountMetricData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CountMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static CountMetricData parseFrom(CodedInputStream input) throws IOException {
            return (CountMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static CountMetricData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (CountMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(CountMetricData prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<CountMetricData, Builder> implements CountMetricDataOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(CountMetricData.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public boolean hasDimensionsInWhat() {
                return ((CountMetricData) this.instance).hasDimensionsInWhat();
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public DimensionsValue getDimensionsInWhat() {
                return ((CountMetricData) this.instance).getDimensionsInWhat();
            }

            public Builder setDimensionsInWhat(DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).setDimensionsInWhat((CountMetricData) value);
                return this;
            }

            public Builder setDimensionsInWhat(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).setDimensionsInWhat((CountMetricData) builderForValue);
                return this;
            }

            public Builder mergeDimensionsInWhat(DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).mergeDimensionsInWhat(value);
                return this;
            }

            public Builder clearDimensionsInWhat() {
                copyOnWrite();
                ((CountMetricData) this.instance).clearDimensionsInWhat();
                return this;
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public boolean hasDimensionsInCondition() {
                return ((CountMetricData) this.instance).hasDimensionsInCondition();
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public DimensionsValue getDimensionsInCondition() {
                return ((CountMetricData) this.instance).getDimensionsInCondition();
            }

            public Builder setDimensionsInCondition(DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).setDimensionsInCondition((CountMetricData) value);
                return this;
            }

            public Builder setDimensionsInCondition(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).setDimensionsInCondition((CountMetricData) builderForValue);
                return this;
            }

            public Builder mergeDimensionsInCondition(DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).mergeDimensionsInCondition(value);
                return this;
            }

            public Builder clearDimensionsInCondition() {
                copyOnWrite();
                ((CountMetricData) this.instance).clearDimensionsInCondition();
                return this;
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public List<CountBucketInfo> getBucketInfoList() {
                return Collections.unmodifiableList(((CountMetricData) this.instance).getBucketInfoList());
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public int getBucketInfoCount() {
                return ((CountMetricData) this.instance).getBucketInfoCount();
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public CountBucketInfo getBucketInfo(int index) {
                return ((CountMetricData) this.instance).getBucketInfo(index);
            }

            public Builder setBucketInfo(int index, CountBucketInfo value) {
                copyOnWrite();
                ((CountMetricData) this.instance).setBucketInfo((CountMetricData) index, (int) value);
                return this;
            }

            public Builder setBucketInfo(int index, CountBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).setBucketInfo((CountMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addBucketInfo(CountBucketInfo value) {
                copyOnWrite();
                ((CountMetricData) this.instance).addBucketInfo((CountMetricData) value);
                return this;
            }

            public Builder addBucketInfo(int index, CountBucketInfo value) {
                copyOnWrite();
                ((CountMetricData) this.instance).addBucketInfo((CountMetricData) index, (int) value);
                return this;
            }

            public Builder addBucketInfo(CountBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).addBucketInfo((CountMetricData) builderForValue);
                return this;
            }

            public Builder addBucketInfo(int index, CountBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).addBucketInfo((CountMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllBucketInfo(Iterable<? extends CountBucketInfo> values) {
                copyOnWrite();
                ((CountMetricData) this.instance).addAllBucketInfo(values);
                return this;
            }

            public Builder clearBucketInfo() {
                copyOnWrite();
                ((CountMetricData) this.instance).clearBucketInfo();
                return this;
            }

            public Builder removeBucketInfo(int index) {
                copyOnWrite();
                ((CountMetricData) this.instance).removeBucketInfo(index);
                return this;
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public List<DimensionsValue> getDimensionLeafValuesInWhatList() {
                return Collections.unmodifiableList(((CountMetricData) this.instance).getDimensionLeafValuesInWhatList());
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public int getDimensionLeafValuesInWhatCount() {
                return ((CountMetricData) this.instance).getDimensionLeafValuesInWhatCount();
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public DimensionsValue getDimensionLeafValuesInWhat(int index) {
                return ((CountMetricData) this.instance).getDimensionLeafValuesInWhat(index);
            }

            public Builder setDimensionLeafValuesInWhat(int index, DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).setDimensionLeafValuesInWhat((CountMetricData) index, (int) value);
                return this;
            }

            public Builder setDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).setDimensionLeafValuesInWhat((CountMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).addDimensionLeafValuesInWhat((CountMetricData) value);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(int index, DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).addDimensionLeafValuesInWhat((CountMetricData) index, (int) value);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).addDimensionLeafValuesInWhat((CountMetricData) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).addDimensionLeafValuesInWhat((CountMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDimensionLeafValuesInWhat(Iterable<? extends DimensionsValue> values) {
                copyOnWrite();
                ((CountMetricData) this.instance).addAllDimensionLeafValuesInWhat(values);
                return this;
            }

            public Builder clearDimensionLeafValuesInWhat() {
                copyOnWrite();
                ((CountMetricData) this.instance).clearDimensionLeafValuesInWhat();
                return this;
            }

            public Builder removeDimensionLeafValuesInWhat(int index) {
                copyOnWrite();
                ((CountMetricData) this.instance).removeDimensionLeafValuesInWhat(index);
                return this;
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public List<DimensionsValue> getDimensionLeafValuesInConditionList() {
                return Collections.unmodifiableList(((CountMetricData) this.instance).getDimensionLeafValuesInConditionList());
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public int getDimensionLeafValuesInConditionCount() {
                return ((CountMetricData) this.instance).getDimensionLeafValuesInConditionCount();
            }

            @Override // com.android.os.StatsLog.CountMetricDataOrBuilder
            public DimensionsValue getDimensionLeafValuesInCondition(int index) {
                return ((CountMetricData) this.instance).getDimensionLeafValuesInCondition(index);
            }

            public Builder setDimensionLeafValuesInCondition(int index, DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).setDimensionLeafValuesInCondition((CountMetricData) index, (int) value);
                return this;
            }

            public Builder setDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).setDimensionLeafValuesInCondition((CountMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).addDimensionLeafValuesInCondition((CountMetricData) value);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(int index, DimensionsValue value) {
                copyOnWrite();
                ((CountMetricData) this.instance).addDimensionLeafValuesInCondition((CountMetricData) index, (int) value);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).addDimensionLeafValuesInCondition((CountMetricData) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((CountMetricData) this.instance).addDimensionLeafValuesInCondition((CountMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDimensionLeafValuesInCondition(Iterable<? extends DimensionsValue> values) {
                copyOnWrite();
                ((CountMetricData) this.instance).addAllDimensionLeafValuesInCondition(values);
                return this;
            }

            public Builder clearDimensionLeafValuesInCondition() {
                copyOnWrite();
                ((CountMetricData) this.instance).clearDimensionLeafValuesInCondition();
                return this;
            }

            public Builder removeDimensionLeafValuesInCondition(int index) {
                copyOnWrite();
                ((CountMetricData) this.instance).removeDimensionLeafValuesInCondition(index);
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new CountMetricData();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.bucketInfo_.makeImmutable();
                    this.dimensionLeafValuesInWhat_.makeImmutable();
                    this.dimensionLeafValuesInCondition_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    CountMetricData other = (CountMetricData) arg1;
                    this.dimensionsInWhat_ = (DimensionsValue) visitor.visitMessage(this.dimensionsInWhat_, other.dimensionsInWhat_);
                    this.dimensionsInCondition_ = (DimensionsValue) visitor.visitMessage(this.dimensionsInCondition_, other.dimensionsInCondition_);
                    this.bucketInfo_ = visitor.visitList(this.bucketInfo_, other.bucketInfo_);
                    this.dimensionLeafValuesInWhat_ = visitor.visitList(this.dimensionLeafValuesInWhat_, other.dimensionLeafValuesInWhat_);
                    this.dimensionLeafValuesInCondition_ = visitor.visitList(this.dimensionLeafValuesInCondition_, other.dimensionLeafValuesInCondition_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 10) {
                                DimensionsValue.Builder subBuilder = null;
                                if ((this.bitField0_ & 1) == 1) {
                                    subBuilder = (DimensionsValue.Builder) this.dimensionsInWhat_.toBuilder();
                                }
                                this.dimensionsInWhat_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom((GeneratedMessageLite) this.dimensionsInWhat_);
                                    this.dimensionsInWhat_ = (DimensionsValue) subBuilder.buildPartial();
                                }
                                this.bitField0_ |= 1;
                            } else if (tag == 18) {
                                DimensionsValue.Builder subBuilder2 = null;
                                if ((this.bitField0_ & 2) == 2) {
                                    subBuilder2 = (DimensionsValue.Builder) this.dimensionsInCondition_.toBuilder();
                                }
                                this.dimensionsInCondition_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                if (subBuilder2 != null) {
                                    subBuilder2.mergeFrom((GeneratedMessageLite) this.dimensionsInCondition_);
                                    this.dimensionsInCondition_ = (DimensionsValue) subBuilder2.buildPartial();
                                }
                                this.bitField0_ |= 2;
                            } else if (tag == 26) {
                                if (!this.bucketInfo_.isModifiable()) {
                                    this.bucketInfo_ = GeneratedMessageLite.mutableCopy(this.bucketInfo_);
                                }
                                this.bucketInfo_.add((CountBucketInfo) input.readMessage(CountBucketInfo.parser(), extensionRegistry));
                            } else if (tag == 34) {
                                if (!this.dimensionLeafValuesInWhat_.isModifiable()) {
                                    this.dimensionLeafValuesInWhat_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInWhat_);
                                }
                                this.dimensionLeafValuesInWhat_.add((DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry));
                            } else if (tag == 42) {
                                if (!this.dimensionLeafValuesInCondition_.isModifiable()) {
                                    this.dimensionLeafValuesInCondition_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInCondition_);
                                }
                                this.dimensionLeafValuesInCondition_.add((DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry));
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (CountMetricData.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static CountMetricData getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<CountMetricData> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class DurationBucketInfo extends GeneratedMessageLite<DurationBucketInfo, Builder> implements DurationBucketInfoOrBuilder {
        public static final int BUCKET_NUM_FIELD_NUMBER = 4;
        private static final DurationBucketInfo DEFAULT_INSTANCE = new DurationBucketInfo();
        public static final int DURATION_NANOS_FIELD_NUMBER = 3;
        public static final int END_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 6;
        public static final int END_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 2;
        private static volatile Parser<DurationBucketInfo> PARSER = null;
        public static final int START_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 5;
        public static final int START_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 1;
        private int bitField0_;
        private long bucketNum_ = 0;
        private long durationNanos_ = 0;
        private long endBucketElapsedMillis_ = 0;
        private long endBucketElapsedNanos_ = 0;
        private long startBucketElapsedMillis_ = 0;
        private long startBucketElapsedNanos_ = 0;

        private DurationBucketInfo() {
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public boolean hasStartBucketElapsedNanos() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public long getStartBucketElapsedNanos() {
            return this.startBucketElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStartBucketElapsedNanos(long value) {
            this.bitField0_ |= 1;
            this.startBucketElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStartBucketElapsedNanos() {
            this.bitField0_ &= -2;
            this.startBucketElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public boolean hasEndBucketElapsedNanos() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public long getEndBucketElapsedNanos() {
            return this.endBucketElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEndBucketElapsedNanos(long value) {
            this.bitField0_ |= 2;
            this.endBucketElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearEndBucketElapsedNanos() {
            this.bitField0_ &= -3;
            this.endBucketElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public boolean hasDurationNanos() {
            return (this.bitField0_ & 4) == 4;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public long getDurationNanos() {
            return this.durationNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDurationNanos(long value) {
            this.bitField0_ |= 4;
            this.durationNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDurationNanos() {
            this.bitField0_ &= -5;
            this.durationNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public boolean hasBucketNum() {
            return (this.bitField0_ & 8) == 8;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public long getBucketNum() {
            return this.bucketNum_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketNum(long value) {
            this.bitField0_ |= 8;
            this.bucketNum_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearBucketNum() {
            this.bitField0_ &= -9;
            this.bucketNum_ = 0;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public boolean hasStartBucketElapsedMillis() {
            return (this.bitField0_ & 16) == 16;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public long getStartBucketElapsedMillis() {
            return this.startBucketElapsedMillis_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStartBucketElapsedMillis(long value) {
            this.bitField0_ |= 16;
            this.startBucketElapsedMillis_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStartBucketElapsedMillis() {
            this.bitField0_ &= -17;
            this.startBucketElapsedMillis_ = 0;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public boolean hasEndBucketElapsedMillis() {
            return (this.bitField0_ & 32) == 32;
        }

        @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
        public long getEndBucketElapsedMillis() {
            return this.endBucketElapsedMillis_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEndBucketElapsedMillis(long value) {
            this.bitField0_ |= 32;
            this.endBucketElapsedMillis_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearEndBucketElapsedMillis() {
            this.bitField0_ &= -33;
            this.endBucketElapsedMillis_ = 0;
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeInt64(1, this.startBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeInt64(2, this.endBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 4) == 4) {
                output.writeInt64(3, this.durationNanos_);
            }
            if ((this.bitField0_ & 8) == 8) {
                output.writeInt64(4, this.bucketNum_);
            }
            if ((this.bitField0_ & 16) == 16) {
                output.writeInt64(5, this.startBucketElapsedMillis_);
            }
            if ((this.bitField0_ & 32) == 32) {
                output.writeInt64(6, this.endBucketElapsedMillis_);
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeInt64Size(1, this.startBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeInt64Size(2, this.endBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 4) == 4) {
                size2 += CodedOutputStream.computeInt64Size(3, this.durationNanos_);
            }
            if ((this.bitField0_ & 8) == 8) {
                size2 += CodedOutputStream.computeInt64Size(4, this.bucketNum_);
            }
            if ((this.bitField0_ & 16) == 16) {
                size2 += CodedOutputStream.computeInt64Size(5, this.startBucketElapsedMillis_);
            }
            if ((this.bitField0_ & 32) == 32) {
                size2 += CodedOutputStream.computeInt64Size(6, this.endBucketElapsedMillis_);
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static DurationBucketInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DurationBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static DurationBucketInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DurationBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static DurationBucketInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DurationBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static DurationBucketInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DurationBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static DurationBucketInfo parseFrom(InputStream input) throws IOException {
            return (DurationBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static DurationBucketInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DurationBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static DurationBucketInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (DurationBucketInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static DurationBucketInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DurationBucketInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static DurationBucketInfo parseFrom(CodedInputStream input) throws IOException {
            return (DurationBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static DurationBucketInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DurationBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DurationBucketInfo prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<DurationBucketInfo, Builder> implements DurationBucketInfoOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(DurationBucketInfo.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public boolean hasStartBucketElapsedNanos() {
                return ((DurationBucketInfo) this.instance).hasStartBucketElapsedNanos();
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public long getStartBucketElapsedNanos() {
                return ((DurationBucketInfo) this.instance).getStartBucketElapsedNanos();
            }

            public Builder setStartBucketElapsedNanos(long value) {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).setStartBucketElapsedNanos(value);
                return this;
            }

            public Builder clearStartBucketElapsedNanos() {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).clearStartBucketElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public boolean hasEndBucketElapsedNanos() {
                return ((DurationBucketInfo) this.instance).hasEndBucketElapsedNanos();
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public long getEndBucketElapsedNanos() {
                return ((DurationBucketInfo) this.instance).getEndBucketElapsedNanos();
            }

            public Builder setEndBucketElapsedNanos(long value) {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).setEndBucketElapsedNanos(value);
                return this;
            }

            public Builder clearEndBucketElapsedNanos() {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).clearEndBucketElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public boolean hasDurationNanos() {
                return ((DurationBucketInfo) this.instance).hasDurationNanos();
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public long getDurationNanos() {
                return ((DurationBucketInfo) this.instance).getDurationNanos();
            }

            public Builder setDurationNanos(long value) {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).setDurationNanos(value);
                return this;
            }

            public Builder clearDurationNanos() {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).clearDurationNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public boolean hasBucketNum() {
                return ((DurationBucketInfo) this.instance).hasBucketNum();
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public long getBucketNum() {
                return ((DurationBucketInfo) this.instance).getBucketNum();
            }

            public Builder setBucketNum(long value) {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).setBucketNum(value);
                return this;
            }

            public Builder clearBucketNum() {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).clearBucketNum();
                return this;
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public boolean hasStartBucketElapsedMillis() {
                return ((DurationBucketInfo) this.instance).hasStartBucketElapsedMillis();
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public long getStartBucketElapsedMillis() {
                return ((DurationBucketInfo) this.instance).getStartBucketElapsedMillis();
            }

            public Builder setStartBucketElapsedMillis(long value) {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).setStartBucketElapsedMillis(value);
                return this;
            }

            public Builder clearStartBucketElapsedMillis() {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).clearStartBucketElapsedMillis();
                return this;
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public boolean hasEndBucketElapsedMillis() {
                return ((DurationBucketInfo) this.instance).hasEndBucketElapsedMillis();
            }

            @Override // com.android.os.StatsLog.DurationBucketInfoOrBuilder
            public long getEndBucketElapsedMillis() {
                return ((DurationBucketInfo) this.instance).getEndBucketElapsedMillis();
            }

            public Builder setEndBucketElapsedMillis(long value) {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).setEndBucketElapsedMillis(value);
                return this;
            }

            public Builder clearEndBucketElapsedMillis() {
                copyOnWrite();
                ((DurationBucketInfo) this.instance).clearEndBucketElapsedMillis();
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new DurationBucketInfo();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    DurationBucketInfo other = (DurationBucketInfo) arg1;
                    this.startBucketElapsedNanos_ = visitor.visitLong(hasStartBucketElapsedNanos(), this.startBucketElapsedNanos_, other.hasStartBucketElapsedNanos(), other.startBucketElapsedNanos_);
                    this.endBucketElapsedNanos_ = visitor.visitLong(hasEndBucketElapsedNanos(), this.endBucketElapsedNanos_, other.hasEndBucketElapsedNanos(), other.endBucketElapsedNanos_);
                    this.durationNanos_ = visitor.visitLong(hasDurationNanos(), this.durationNanos_, other.hasDurationNanos(), other.durationNanos_);
                    this.bucketNum_ = visitor.visitLong(hasBucketNum(), this.bucketNum_, other.hasBucketNum(), other.bucketNum_);
                    this.startBucketElapsedMillis_ = visitor.visitLong(hasStartBucketElapsedMillis(), this.startBucketElapsedMillis_, other.hasStartBucketElapsedMillis(), other.startBucketElapsedMillis_);
                    this.endBucketElapsedMillis_ = visitor.visitLong(hasEndBucketElapsedMillis(), this.endBucketElapsedMillis_, other.hasEndBucketElapsedMillis(), other.endBucketElapsedMillis_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 8) {
                                this.bitField0_ |= 1;
                                this.startBucketElapsedNanos_ = input.readInt64();
                            } else if (tag == 16) {
                                this.bitField0_ |= 2;
                                this.endBucketElapsedNanos_ = input.readInt64();
                            } else if (tag == 24) {
                                this.bitField0_ |= 4;
                                this.durationNanos_ = input.readInt64();
                            } else if (tag == 32) {
                                this.bitField0_ = 8 | this.bitField0_;
                                this.bucketNum_ = input.readInt64();
                            } else if (tag == 40) {
                                this.bitField0_ |= 16;
                                this.startBucketElapsedMillis_ = input.readInt64();
                            } else if (tag == 48) {
                                this.bitField0_ |= 32;
                                this.endBucketElapsedMillis_ = input.readInt64();
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (DurationBucketInfo.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static DurationBucketInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<DurationBucketInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class DurationMetricData extends GeneratedMessageLite<DurationMetricData, Builder> implements DurationMetricDataOrBuilder {
        public static final int BUCKET_INFO_FIELD_NUMBER = 3;
        private static final DurationMetricData DEFAULT_INSTANCE = new DurationMetricData();
        public static final int DIMENSIONS_IN_CONDITION_FIELD_NUMBER = 2;
        public static final int DIMENSIONS_IN_WHAT_FIELD_NUMBER = 1;
        public static final int DIMENSION_LEAF_VALUES_IN_CONDITION_FIELD_NUMBER = 5;
        public static final int DIMENSION_LEAF_VALUES_IN_WHAT_FIELD_NUMBER = 4;
        private static volatile Parser<DurationMetricData> PARSER;
        private int bitField0_;
        private Internal.ProtobufList<DurationBucketInfo> bucketInfo_ = emptyProtobufList();
        private Internal.ProtobufList<DimensionsValue> dimensionLeafValuesInCondition_ = emptyProtobufList();
        private Internal.ProtobufList<DimensionsValue> dimensionLeafValuesInWhat_ = emptyProtobufList();
        private DimensionsValue dimensionsInCondition_;
        private DimensionsValue dimensionsInWhat_;

        private DurationMetricData() {
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public boolean hasDimensionsInWhat() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public DimensionsValue getDimensionsInWhat() {
            DimensionsValue dimensionsValue = this.dimensionsInWhat_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInWhat(DimensionsValue value) {
            if (value != null) {
                this.dimensionsInWhat_ = value;
                this.bitField0_ |= 1;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInWhat(DimensionsValue.Builder builderForValue) {
            this.dimensionsInWhat_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsInWhat(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsInWhat_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsInWhat_ = value;
            } else {
                this.dimensionsInWhat_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsInWhat_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsInWhat() {
            this.dimensionsInWhat_ = null;
            this.bitField0_ &= -2;
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public boolean hasDimensionsInCondition() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public DimensionsValue getDimensionsInCondition() {
            DimensionsValue dimensionsValue = this.dimensionsInCondition_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInCondition(DimensionsValue value) {
            if (value != null) {
                this.dimensionsInCondition_ = value;
                this.bitField0_ |= 2;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInCondition(DimensionsValue.Builder builderForValue) {
            this.dimensionsInCondition_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsInCondition(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsInCondition_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsInCondition_ = value;
            } else {
                this.dimensionsInCondition_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsInCondition_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsInCondition() {
            this.dimensionsInCondition_ = null;
            this.bitField0_ &= -3;
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public List<DurationBucketInfo> getBucketInfoList() {
            return this.bucketInfo_;
        }

        public List<? extends DurationBucketInfoOrBuilder> getBucketInfoOrBuilderList() {
            return this.bucketInfo_;
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public int getBucketInfoCount() {
            return this.bucketInfo_.size();
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public DurationBucketInfo getBucketInfo(int index) {
            return this.bucketInfo_.get(index);
        }

        public DurationBucketInfoOrBuilder getBucketInfoOrBuilder(int index) {
            return this.bucketInfo_.get(index);
        }

        private void ensureBucketInfoIsMutable() {
            if (!this.bucketInfo_.isModifiable()) {
                this.bucketInfo_ = GeneratedMessageLite.mutableCopy(this.bucketInfo_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketInfo(int index, DurationBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketInfo(int index, DurationBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.set(index, (DurationBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(DurationBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(int index, DurationBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(DurationBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.add((DurationBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(int index, DurationBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.add(index, (DurationBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllBucketInfo(Iterable<? extends DurationBucketInfo> values) {
            ensureBucketInfoIsMutable();
            AbstractMessageLite.addAll(values, this.bucketInfo_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearBucketInfo() {
            this.bucketInfo_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeBucketInfo(int index) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.remove(index);
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public List<DimensionsValue> getDimensionLeafValuesInWhatList() {
            return this.dimensionLeafValuesInWhat_;
        }

        public List<? extends DimensionsValueOrBuilder> getDimensionLeafValuesInWhatOrBuilderList() {
            return this.dimensionLeafValuesInWhat_;
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public int getDimensionLeafValuesInWhatCount() {
            return this.dimensionLeafValuesInWhat_.size();
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public DimensionsValue getDimensionLeafValuesInWhat(int index) {
            return this.dimensionLeafValuesInWhat_.get(index);
        }

        public DimensionsValueOrBuilder getDimensionLeafValuesInWhatOrBuilder(int index) {
            return this.dimensionLeafValuesInWhat_.get(index);
        }

        private void ensureDimensionLeafValuesInWhatIsMutable() {
            if (!this.dimensionLeafValuesInWhat_.isModifiable()) {
                this.dimensionLeafValuesInWhat_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInWhat_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInWhat(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.set(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.add((DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.add(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDimensionLeafValuesInWhat(Iterable<? extends DimensionsValue> values) {
            ensureDimensionLeafValuesInWhatIsMutable();
            AbstractMessageLite.addAll(values, this.dimensionLeafValuesInWhat_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionLeafValuesInWhat() {
            this.dimensionLeafValuesInWhat_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDimensionLeafValuesInWhat(int index) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.remove(index);
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public List<DimensionsValue> getDimensionLeafValuesInConditionList() {
            return this.dimensionLeafValuesInCondition_;
        }

        public List<? extends DimensionsValueOrBuilder> getDimensionLeafValuesInConditionOrBuilderList() {
            return this.dimensionLeafValuesInCondition_;
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public int getDimensionLeafValuesInConditionCount() {
            return this.dimensionLeafValuesInCondition_.size();
        }

        @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
        public DimensionsValue getDimensionLeafValuesInCondition(int index) {
            return this.dimensionLeafValuesInCondition_.get(index);
        }

        public DimensionsValueOrBuilder getDimensionLeafValuesInConditionOrBuilder(int index) {
            return this.dimensionLeafValuesInCondition_.get(index);
        }

        private void ensureDimensionLeafValuesInConditionIsMutable() {
            if (!this.dimensionLeafValuesInCondition_.isModifiable()) {
                this.dimensionLeafValuesInCondition_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInCondition_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInCondition(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.set(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.add((DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.add(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDimensionLeafValuesInCondition(Iterable<? extends DimensionsValue> values) {
            ensureDimensionLeafValuesInConditionIsMutable();
            AbstractMessageLite.addAll(values, this.dimensionLeafValuesInCondition_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionLeafValuesInCondition() {
            this.dimensionLeafValuesInCondition_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDimensionLeafValuesInCondition(int index) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.remove(index);
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeMessage(1, getDimensionsInWhat());
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeMessage(2, getDimensionsInCondition());
            }
            for (int i = 0; i < this.bucketInfo_.size(); i++) {
                output.writeMessage(3, this.bucketInfo_.get(i));
            }
            for (int i2 = 0; i2 < this.dimensionLeafValuesInWhat_.size(); i2++) {
                output.writeMessage(4, this.dimensionLeafValuesInWhat_.get(i2));
            }
            for (int i3 = 0; i3 < this.dimensionLeafValuesInCondition_.size(); i3++) {
                output.writeMessage(5, this.dimensionLeafValuesInCondition_.get(i3));
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeMessageSize(1, getDimensionsInWhat());
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeMessageSize(2, getDimensionsInCondition());
            }
            for (int i = 0; i < this.bucketInfo_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(3, this.bucketInfo_.get(i));
            }
            for (int i2 = 0; i2 < this.dimensionLeafValuesInWhat_.size(); i2++) {
                size2 += CodedOutputStream.computeMessageSize(4, this.dimensionLeafValuesInWhat_.get(i2));
            }
            for (int i3 = 0; i3 < this.dimensionLeafValuesInCondition_.size(); i3++) {
                size2 += CodedOutputStream.computeMessageSize(5, this.dimensionLeafValuesInCondition_.get(i3));
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static DurationMetricData parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DurationMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static DurationMetricData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DurationMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static DurationMetricData parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DurationMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static DurationMetricData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DurationMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static DurationMetricData parseFrom(InputStream input) throws IOException {
            return (DurationMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static DurationMetricData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DurationMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static DurationMetricData parseDelimitedFrom(InputStream input) throws IOException {
            return (DurationMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static DurationMetricData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DurationMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static DurationMetricData parseFrom(CodedInputStream input) throws IOException {
            return (DurationMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static DurationMetricData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DurationMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DurationMetricData prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<DurationMetricData, Builder> implements DurationMetricDataOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(DurationMetricData.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public boolean hasDimensionsInWhat() {
                return ((DurationMetricData) this.instance).hasDimensionsInWhat();
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public DimensionsValue getDimensionsInWhat() {
                return ((DurationMetricData) this.instance).getDimensionsInWhat();
            }

            public Builder setDimensionsInWhat(DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setDimensionsInWhat((DurationMetricData) value);
                return this;
            }

            public Builder setDimensionsInWhat(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setDimensionsInWhat((DurationMetricData) builderForValue);
                return this;
            }

            public Builder mergeDimensionsInWhat(DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).mergeDimensionsInWhat(value);
                return this;
            }

            public Builder clearDimensionsInWhat() {
                copyOnWrite();
                ((DurationMetricData) this.instance).clearDimensionsInWhat();
                return this;
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public boolean hasDimensionsInCondition() {
                return ((DurationMetricData) this.instance).hasDimensionsInCondition();
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public DimensionsValue getDimensionsInCondition() {
                return ((DurationMetricData) this.instance).getDimensionsInCondition();
            }

            public Builder setDimensionsInCondition(DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setDimensionsInCondition((DurationMetricData) value);
                return this;
            }

            public Builder setDimensionsInCondition(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setDimensionsInCondition((DurationMetricData) builderForValue);
                return this;
            }

            public Builder mergeDimensionsInCondition(DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).mergeDimensionsInCondition(value);
                return this;
            }

            public Builder clearDimensionsInCondition() {
                copyOnWrite();
                ((DurationMetricData) this.instance).clearDimensionsInCondition();
                return this;
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public List<DurationBucketInfo> getBucketInfoList() {
                return Collections.unmodifiableList(((DurationMetricData) this.instance).getBucketInfoList());
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public int getBucketInfoCount() {
                return ((DurationMetricData) this.instance).getBucketInfoCount();
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public DurationBucketInfo getBucketInfo(int index) {
                return ((DurationMetricData) this.instance).getBucketInfo(index);
            }

            public Builder setBucketInfo(int index, DurationBucketInfo value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setBucketInfo((DurationMetricData) index, (int) value);
                return this;
            }

            public Builder setBucketInfo(int index, DurationBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setBucketInfo((DurationMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addBucketInfo(DurationBucketInfo value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addBucketInfo((DurationMetricData) value);
                return this;
            }

            public Builder addBucketInfo(int index, DurationBucketInfo value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addBucketInfo((DurationMetricData) index, (int) value);
                return this;
            }

            public Builder addBucketInfo(DurationBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addBucketInfo((DurationMetricData) builderForValue);
                return this;
            }

            public Builder addBucketInfo(int index, DurationBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addBucketInfo((DurationMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllBucketInfo(Iterable<? extends DurationBucketInfo> values) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addAllBucketInfo(values);
                return this;
            }

            public Builder clearBucketInfo() {
                copyOnWrite();
                ((DurationMetricData) this.instance).clearBucketInfo();
                return this;
            }

            public Builder removeBucketInfo(int index) {
                copyOnWrite();
                ((DurationMetricData) this.instance).removeBucketInfo(index);
                return this;
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public List<DimensionsValue> getDimensionLeafValuesInWhatList() {
                return Collections.unmodifiableList(((DurationMetricData) this.instance).getDimensionLeafValuesInWhatList());
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public int getDimensionLeafValuesInWhatCount() {
                return ((DurationMetricData) this.instance).getDimensionLeafValuesInWhatCount();
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public DimensionsValue getDimensionLeafValuesInWhat(int index) {
                return ((DurationMetricData) this.instance).getDimensionLeafValuesInWhat(index);
            }

            public Builder setDimensionLeafValuesInWhat(int index, DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setDimensionLeafValuesInWhat((DurationMetricData) index, (int) value);
                return this;
            }

            public Builder setDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setDimensionLeafValuesInWhat((DurationMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addDimensionLeafValuesInWhat((DurationMetricData) value);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(int index, DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addDimensionLeafValuesInWhat((DurationMetricData) index, (int) value);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addDimensionLeafValuesInWhat((DurationMetricData) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addDimensionLeafValuesInWhat((DurationMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDimensionLeafValuesInWhat(Iterable<? extends DimensionsValue> values) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addAllDimensionLeafValuesInWhat(values);
                return this;
            }

            public Builder clearDimensionLeafValuesInWhat() {
                copyOnWrite();
                ((DurationMetricData) this.instance).clearDimensionLeafValuesInWhat();
                return this;
            }

            public Builder removeDimensionLeafValuesInWhat(int index) {
                copyOnWrite();
                ((DurationMetricData) this.instance).removeDimensionLeafValuesInWhat(index);
                return this;
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public List<DimensionsValue> getDimensionLeafValuesInConditionList() {
                return Collections.unmodifiableList(((DurationMetricData) this.instance).getDimensionLeafValuesInConditionList());
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public int getDimensionLeafValuesInConditionCount() {
                return ((DurationMetricData) this.instance).getDimensionLeafValuesInConditionCount();
            }

            @Override // com.android.os.StatsLog.DurationMetricDataOrBuilder
            public DimensionsValue getDimensionLeafValuesInCondition(int index) {
                return ((DurationMetricData) this.instance).getDimensionLeafValuesInCondition(index);
            }

            public Builder setDimensionLeafValuesInCondition(int index, DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setDimensionLeafValuesInCondition((DurationMetricData) index, (int) value);
                return this;
            }

            public Builder setDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).setDimensionLeafValuesInCondition((DurationMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addDimensionLeafValuesInCondition((DurationMetricData) value);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(int index, DimensionsValue value) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addDimensionLeafValuesInCondition((DurationMetricData) index, (int) value);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addDimensionLeafValuesInCondition((DurationMetricData) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addDimensionLeafValuesInCondition((DurationMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDimensionLeafValuesInCondition(Iterable<? extends DimensionsValue> values) {
                copyOnWrite();
                ((DurationMetricData) this.instance).addAllDimensionLeafValuesInCondition(values);
                return this;
            }

            public Builder clearDimensionLeafValuesInCondition() {
                copyOnWrite();
                ((DurationMetricData) this.instance).clearDimensionLeafValuesInCondition();
                return this;
            }

            public Builder removeDimensionLeafValuesInCondition(int index) {
                copyOnWrite();
                ((DurationMetricData) this.instance).removeDimensionLeafValuesInCondition(index);
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new DurationMetricData();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.bucketInfo_.makeImmutable();
                    this.dimensionLeafValuesInWhat_.makeImmutable();
                    this.dimensionLeafValuesInCondition_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    DurationMetricData other = (DurationMetricData) arg1;
                    this.dimensionsInWhat_ = (DimensionsValue) visitor.visitMessage(this.dimensionsInWhat_, other.dimensionsInWhat_);
                    this.dimensionsInCondition_ = (DimensionsValue) visitor.visitMessage(this.dimensionsInCondition_, other.dimensionsInCondition_);
                    this.bucketInfo_ = visitor.visitList(this.bucketInfo_, other.bucketInfo_);
                    this.dimensionLeafValuesInWhat_ = visitor.visitList(this.dimensionLeafValuesInWhat_, other.dimensionLeafValuesInWhat_);
                    this.dimensionLeafValuesInCondition_ = visitor.visitList(this.dimensionLeafValuesInCondition_, other.dimensionLeafValuesInCondition_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 10) {
                                DimensionsValue.Builder subBuilder = null;
                                if ((this.bitField0_ & 1) == 1) {
                                    subBuilder = (DimensionsValue.Builder) this.dimensionsInWhat_.toBuilder();
                                }
                                this.dimensionsInWhat_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom((GeneratedMessageLite) this.dimensionsInWhat_);
                                    this.dimensionsInWhat_ = (DimensionsValue) subBuilder.buildPartial();
                                }
                                this.bitField0_ |= 1;
                            } else if (tag == 18) {
                                DimensionsValue.Builder subBuilder2 = null;
                                if ((this.bitField0_ & 2) == 2) {
                                    subBuilder2 = (DimensionsValue.Builder) this.dimensionsInCondition_.toBuilder();
                                }
                                this.dimensionsInCondition_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                if (subBuilder2 != null) {
                                    subBuilder2.mergeFrom((GeneratedMessageLite) this.dimensionsInCondition_);
                                    this.dimensionsInCondition_ = (DimensionsValue) subBuilder2.buildPartial();
                                }
                                this.bitField0_ |= 2;
                            } else if (tag == 26) {
                                if (!this.bucketInfo_.isModifiable()) {
                                    this.bucketInfo_ = GeneratedMessageLite.mutableCopy(this.bucketInfo_);
                                }
                                this.bucketInfo_.add((DurationBucketInfo) input.readMessage(DurationBucketInfo.parser(), extensionRegistry));
                            } else if (tag == 34) {
                                if (!this.dimensionLeafValuesInWhat_.isModifiable()) {
                                    this.dimensionLeafValuesInWhat_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInWhat_);
                                }
                                this.dimensionLeafValuesInWhat_.add((DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry));
                            } else if (tag == 42) {
                                if (!this.dimensionLeafValuesInCondition_.isModifiable()) {
                                    this.dimensionLeafValuesInCondition_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInCondition_);
                                }
                                this.dimensionLeafValuesInCondition_.add((DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry));
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (DurationMetricData.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static DurationMetricData getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<DurationMetricData> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class ValueBucketInfo extends GeneratedMessageLite<ValueBucketInfo, Builder> implements ValueBucketInfoOrBuilder {
        public static final int BUCKET_NUM_FIELD_NUMBER = 4;
        public static final int CONDITION_TRUE_NANOS_FIELD_NUMBER = 10;
        private static final ValueBucketInfo DEFAULT_INSTANCE = new ValueBucketInfo();
        public static final int END_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 6;
        public static final int END_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 2;
        private static volatile Parser<ValueBucketInfo> PARSER = null;
        public static final int START_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 5;
        public static final int START_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 1;
        public static final int VALUES_FIELD_NUMBER = 9;
        public static final int VALUE_DOUBLE_FIELD_NUMBER = 8;
        public static final int VALUE_FIELD_NUMBER = 3;
        public static final int VALUE_LONG_FIELD_NUMBER = 7;
        private int bitField0_;
        private long bucketNum_ = 0;
        private long conditionTrueNanos_ = 0;
        private long endBucketElapsedMillis_ = 0;
        private long endBucketElapsedNanos_ = 0;
        private int singleValueCase_ = 0;
        private Object singleValue_;
        private long startBucketElapsedMillis_ = 0;
        private long startBucketElapsedNanos_ = 0;
        private long value_ = 0;
        private Internal.ProtobufList<Value> values_ = emptyProtobufList();

        public interface ValueOrBuilder extends MessageLiteOrBuilder {
            int getIndex();

            Value.ValueCase getValueCase();

            double getValueDouble();

            long getValueLong();

            boolean hasIndex();

            boolean hasValueDouble();

            boolean hasValueLong();
        }

        private ValueBucketInfo() {
        }

        public static final class Value extends GeneratedMessageLite<Value, Builder> implements ValueOrBuilder {
            private static final Value DEFAULT_INSTANCE = new Value();
            public static final int INDEX_FIELD_NUMBER = 1;
            private static volatile Parser<Value> PARSER = null;
            public static final int VALUE_DOUBLE_FIELD_NUMBER = 3;
            public static final int VALUE_LONG_FIELD_NUMBER = 2;
            private int bitField0_;
            private int index_ = 0;
            private int valueCase_ = 0;
            private Object value_;

            private Value() {
            }

            public enum ValueCase implements Internal.EnumLite {
                VALUE_LONG(2),
                VALUE_DOUBLE(3),
                VALUE_NOT_SET(0);
                
                private final int value;

                private ValueCase(int value2) {
                    this.value = value2;
                }

                @Deprecated
                public static ValueCase valueOf(int value2) {
                    return forNumber(value2);
                }

                public static ValueCase forNumber(int value2) {
                    if (value2 == 0) {
                        return VALUE_NOT_SET;
                    }
                    if (value2 == 2) {
                        return VALUE_LONG;
                    }
                    if (value2 != 3) {
                        return null;
                    }
                    return VALUE_DOUBLE;
                }

                @Override // com.google.protobuf.Internal.EnumLite
                public int getNumber() {
                    return this.value;
                }
            }

            @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
            public ValueCase getValueCase() {
                return ValueCase.forNumber(this.valueCase_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearValue() {
                this.valueCase_ = 0;
                this.value_ = null;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
            public boolean hasIndex() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
            public int getIndex() {
                return this.index_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setIndex(int value) {
                this.bitField0_ |= 1;
                this.index_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearIndex() {
                this.bitField0_ &= -2;
                this.index_ = 0;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
            public boolean hasValueLong() {
                return this.valueCase_ == 2;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
            public long getValueLong() {
                if (this.valueCase_ == 2) {
                    return ((Long) this.value_).longValue();
                }
                return 0;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setValueLong(long value) {
                this.valueCase_ = 2;
                this.value_ = Long.valueOf(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearValueLong() {
                if (this.valueCase_ == 2) {
                    this.valueCase_ = 0;
                    this.value_ = null;
                }
            }

            @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
            public boolean hasValueDouble() {
                return this.valueCase_ == 3;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
            public double getValueDouble() {
                if (this.valueCase_ == 3) {
                    return ((Double) this.value_).doubleValue();
                }
                return 0.0d;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setValueDouble(double value) {
                this.valueCase_ = 3;
                this.value_ = Double.valueOf(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearValueDouble() {
                if (this.valueCase_ == 3) {
                    this.valueCase_ = 0;
                    this.value_ = null;
                }
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.index_);
                }
                if (this.valueCase_ == 2) {
                    output.writeInt64(2, ((Long) this.value_).longValue());
                }
                if (this.valueCase_ == 3) {
                    output.writeDouble(3, ((Double) this.value_).doubleValue());
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.index_);
                }
                if (this.valueCase_ == 2) {
                    size2 += CodedOutputStream.computeInt64Size(2, ((Long) this.value_).longValue());
                }
                if (this.valueCase_ == 3) {
                    size2 += CodedOutputStream.computeDoubleSize(3, ((Double) this.value_).doubleValue());
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static Value parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (Value) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static Value parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Value) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static Value parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (Value) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static Value parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Value) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static Value parseFrom(InputStream input) throws IOException {
                return (Value) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static Value parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Value) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Value parseDelimitedFrom(InputStream input) throws IOException {
                return (Value) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static Value parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Value) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Value parseFrom(CodedInputStream input) throws IOException {
                return (Value) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static Value parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Value) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(Value prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<Value, Builder> implements ValueOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(Value.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
                public ValueCase getValueCase() {
                    return ((Value) this.instance).getValueCase();
                }

                public Builder clearValue() {
                    copyOnWrite();
                    ((Value) this.instance).clearValue();
                    return this;
                }

                @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
                public boolean hasIndex() {
                    return ((Value) this.instance).hasIndex();
                }

                @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
                public int getIndex() {
                    return ((Value) this.instance).getIndex();
                }

                public Builder setIndex(int value) {
                    copyOnWrite();
                    ((Value) this.instance).setIndex(value);
                    return this;
                }

                public Builder clearIndex() {
                    copyOnWrite();
                    ((Value) this.instance).clearIndex();
                    return this;
                }

                @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
                public boolean hasValueLong() {
                    return ((Value) this.instance).hasValueLong();
                }

                @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
                public long getValueLong() {
                    return ((Value) this.instance).getValueLong();
                }

                public Builder setValueLong(long value) {
                    copyOnWrite();
                    ((Value) this.instance).setValueLong(value);
                    return this;
                }

                public Builder clearValueLong() {
                    copyOnWrite();
                    ((Value) this.instance).clearValueLong();
                    return this;
                }

                @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
                public boolean hasValueDouble() {
                    return ((Value) this.instance).hasValueDouble();
                }

                @Override // com.android.os.StatsLog.ValueBucketInfo.ValueOrBuilder
                public double getValueDouble() {
                    return ((Value) this.instance).getValueDouble();
                }

                public Builder setValueDouble(double value) {
                    copyOnWrite();
                    ((Value) this.instance).setValueDouble(value);
                    return this;
                }

                public Builder clearValueDouble() {
                    copyOnWrite();
                    ((Value) this.instance).clearValueDouble();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                boolean z = true;
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new Value();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        Value other = (Value) arg1;
                        this.index_ = visitor.visitInt(hasIndex(), this.index_, other.hasIndex(), other.index_);
                        int i = AnonymousClass1.$SwitchMap$com$android$os$StatsLog$ValueBucketInfo$Value$ValueCase[other.getValueCase().ordinal()];
                        if (i == 1) {
                            if (this.valueCase_ != 2) {
                                z = false;
                            }
                            this.value_ = visitor.visitOneofLong(z, this.value_, other.value_);
                        } else if (i == 2) {
                            if (this.valueCase_ != 3) {
                                z = false;
                            }
                            this.value_ = visitor.visitOneofDouble(z, this.value_, other.value_);
                        } else if (i == 3) {
                            if (this.valueCase_ == 0) {
                                z = false;
                            }
                            visitor.visitOneofNotSet(z);
                        }
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            int i2 = other.valueCase_;
                            if (i2 != 0) {
                                this.valueCase_ = i2;
                            }
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.index_ = input.readInt32();
                                } else if (tag == 16) {
                                    this.valueCase_ = 2;
                                    this.value_ = Long.valueOf(input.readInt64());
                                } else if (tag == 25) {
                                    this.valueCase_ = 3;
                                    this.value_ = Double.valueOf(input.readDouble());
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (Value.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static Value getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<Value> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public enum SingleValueCase implements Internal.EnumLite {
            VALUE_LONG(7),
            VALUE_DOUBLE(8),
            SINGLEVALUE_NOT_SET(0);
            
            private final int value;

            private SingleValueCase(int value2) {
                this.value = value2;
            }

            @Deprecated
            public static SingleValueCase valueOf(int value2) {
                return forNumber(value2);
            }

            public static SingleValueCase forNumber(int value2) {
                if (value2 == 0) {
                    return SINGLEVALUE_NOT_SET;
                }
                if (value2 == 7) {
                    return VALUE_LONG;
                }
                if (value2 != 8) {
                    return null;
                }
                return VALUE_DOUBLE;
            }

            @Override // com.google.protobuf.Internal.EnumLite
            public int getNumber() {
                return this.value;
            }
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public SingleValueCase getSingleValueCase() {
            return SingleValueCase.forNumber(this.singleValueCase_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearSingleValue() {
            this.singleValueCase_ = 0;
            this.singleValue_ = null;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public boolean hasStartBucketElapsedNanos() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public long getStartBucketElapsedNanos() {
            return this.startBucketElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStartBucketElapsedNanos(long value) {
            this.bitField0_ |= 1;
            this.startBucketElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStartBucketElapsedNanos() {
            this.bitField0_ &= -2;
            this.startBucketElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public boolean hasEndBucketElapsedNanos() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public long getEndBucketElapsedNanos() {
            return this.endBucketElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEndBucketElapsedNanos(long value) {
            this.bitField0_ |= 2;
            this.endBucketElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearEndBucketElapsedNanos() {
            this.bitField0_ &= -3;
            this.endBucketElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        @Deprecated
        public boolean hasValue() {
            return (this.bitField0_ & 4) == 4;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        @Deprecated
        public long getValue() {
            return this.value_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValue(long value) {
            this.bitField0_ |= 4;
            this.value_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValue() {
            this.bitField0_ &= -5;
            this.value_ = 0;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        @Deprecated
        public boolean hasValueLong() {
            return this.singleValueCase_ == 7;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        @Deprecated
        public long getValueLong() {
            if (this.singleValueCase_ == 7) {
                return ((Long) this.singleValue_).longValue();
            }
            return 0;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueLong(long value) {
            this.singleValueCase_ = 7;
            this.singleValue_ = Long.valueOf(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueLong() {
            if (this.singleValueCase_ == 7) {
                this.singleValueCase_ = 0;
                this.singleValue_ = null;
            }
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        @Deprecated
        public boolean hasValueDouble() {
            return this.singleValueCase_ == 8;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        @Deprecated
        public double getValueDouble() {
            if (this.singleValueCase_ == 8) {
                return ((Double) this.singleValue_).doubleValue();
            }
            return 0.0d;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueDouble(double value) {
            this.singleValueCase_ = 8;
            this.singleValue_ = Double.valueOf(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueDouble() {
            if (this.singleValueCase_ == 8) {
                this.singleValueCase_ = 0;
                this.singleValue_ = null;
            }
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public List<Value> getValuesList() {
            return this.values_;
        }

        public List<? extends ValueOrBuilder> getValuesOrBuilderList() {
            return this.values_;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public int getValuesCount() {
            return this.values_.size();
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public Value getValues(int index) {
            return this.values_.get(index);
        }

        public ValueOrBuilder getValuesOrBuilder(int index) {
            return this.values_.get(index);
        }

        private void ensureValuesIsMutable() {
            if (!this.values_.isModifiable()) {
                this.values_ = GeneratedMessageLite.mutableCopy(this.values_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValues(int index, Value value) {
            if (value != null) {
                ensureValuesIsMutable();
                this.values_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValues(int index, Value.Builder builderForValue) {
            ensureValuesIsMutable();
            this.values_.set(index, (Value) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addValues(Value value) {
            if (value != null) {
                ensureValuesIsMutable();
                this.values_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addValues(int index, Value value) {
            if (value != null) {
                ensureValuesIsMutable();
                this.values_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addValues(Value.Builder builderForValue) {
            ensureValuesIsMutable();
            this.values_.add((Value) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addValues(int index, Value.Builder builderForValue) {
            ensureValuesIsMutable();
            this.values_.add(index, (Value) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllValues(Iterable<? extends Value> values) {
            ensureValuesIsMutable();
            AbstractMessageLite.addAll(values, this.values_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValues() {
            this.values_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeValues(int index) {
            ensureValuesIsMutable();
            this.values_.remove(index);
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public boolean hasBucketNum() {
            return (this.bitField0_ & 32) == 32;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public long getBucketNum() {
            return this.bucketNum_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketNum(long value) {
            this.bitField0_ |= 32;
            this.bucketNum_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearBucketNum() {
            this.bitField0_ &= -33;
            this.bucketNum_ = 0;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public boolean hasStartBucketElapsedMillis() {
            return (this.bitField0_ & 64) == 64;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public long getStartBucketElapsedMillis() {
            return this.startBucketElapsedMillis_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStartBucketElapsedMillis(long value) {
            this.bitField0_ |= 64;
            this.startBucketElapsedMillis_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStartBucketElapsedMillis() {
            this.bitField0_ &= -65;
            this.startBucketElapsedMillis_ = 0;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public boolean hasEndBucketElapsedMillis() {
            return (this.bitField0_ & 128) == 128;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public long getEndBucketElapsedMillis() {
            return this.endBucketElapsedMillis_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEndBucketElapsedMillis(long value) {
            this.bitField0_ |= 128;
            this.endBucketElapsedMillis_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearEndBucketElapsedMillis() {
            this.bitField0_ &= -129;
            this.endBucketElapsedMillis_ = 0;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public boolean hasConditionTrueNanos() {
            return (this.bitField0_ & 256) == 256;
        }

        @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
        public long getConditionTrueNanos() {
            return this.conditionTrueNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setConditionTrueNanos(long value) {
            this.bitField0_ |= 256;
            this.conditionTrueNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearConditionTrueNanos() {
            this.bitField0_ &= -257;
            this.conditionTrueNanos_ = 0;
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeInt64(1, this.startBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeInt64(2, this.endBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 4) == 4) {
                output.writeInt64(3, this.value_);
            }
            if ((this.bitField0_ & 32) == 32) {
                output.writeInt64(4, this.bucketNum_);
            }
            if ((this.bitField0_ & 64) == 64) {
                output.writeInt64(5, this.startBucketElapsedMillis_);
            }
            if ((this.bitField0_ & 128) == 128) {
                output.writeInt64(6, this.endBucketElapsedMillis_);
            }
            if (this.singleValueCase_ == 7) {
                output.writeInt64(7, ((Long) this.singleValue_).longValue());
            }
            if (this.singleValueCase_ == 8) {
                output.writeDouble(8, ((Double) this.singleValue_).doubleValue());
            }
            for (int i = 0; i < this.values_.size(); i++) {
                output.writeMessage(9, this.values_.get(i));
            }
            if ((this.bitField0_ & 256) == 256) {
                output.writeInt64(10, this.conditionTrueNanos_);
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeInt64Size(1, this.startBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeInt64Size(2, this.endBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 4) == 4) {
                size2 += CodedOutputStream.computeInt64Size(3, this.value_);
            }
            if ((this.bitField0_ & 32) == 32) {
                size2 += CodedOutputStream.computeInt64Size(4, this.bucketNum_);
            }
            if ((this.bitField0_ & 64) == 64) {
                size2 += CodedOutputStream.computeInt64Size(5, this.startBucketElapsedMillis_);
            }
            if ((this.bitField0_ & 128) == 128) {
                size2 += CodedOutputStream.computeInt64Size(6, this.endBucketElapsedMillis_);
            }
            if (this.singleValueCase_ == 7) {
                size2 += CodedOutputStream.computeInt64Size(7, ((Long) this.singleValue_).longValue());
            }
            if (this.singleValueCase_ == 8) {
                size2 += CodedOutputStream.computeDoubleSize(8, ((Double) this.singleValue_).doubleValue());
            }
            for (int i = 0; i < this.values_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(9, this.values_.get(i));
            }
            if ((this.bitField0_ & 256) == 256) {
                size2 += CodedOutputStream.computeInt64Size(10, this.conditionTrueNanos_);
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static ValueBucketInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ValueBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static ValueBucketInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ValueBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static ValueBucketInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ValueBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static ValueBucketInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ValueBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static ValueBucketInfo parseFrom(InputStream input) throws IOException {
            return (ValueBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static ValueBucketInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ValueBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static ValueBucketInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (ValueBucketInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static ValueBucketInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ValueBucketInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static ValueBucketInfo parseFrom(CodedInputStream input) throws IOException {
            return (ValueBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static ValueBucketInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ValueBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ValueBucketInfo prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<ValueBucketInfo, Builder> implements ValueBucketInfoOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(ValueBucketInfo.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public SingleValueCase getSingleValueCase() {
                return ((ValueBucketInfo) this.instance).getSingleValueCase();
            }

            public Builder clearSingleValue() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearSingleValue();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public boolean hasStartBucketElapsedNanos() {
                return ((ValueBucketInfo) this.instance).hasStartBucketElapsedNanos();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public long getStartBucketElapsedNanos() {
                return ((ValueBucketInfo) this.instance).getStartBucketElapsedNanos();
            }

            public Builder setStartBucketElapsedNanos(long value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setStartBucketElapsedNanos(value);
                return this;
            }

            public Builder clearStartBucketElapsedNanos() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearStartBucketElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public boolean hasEndBucketElapsedNanos() {
                return ((ValueBucketInfo) this.instance).hasEndBucketElapsedNanos();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public long getEndBucketElapsedNanos() {
                return ((ValueBucketInfo) this.instance).getEndBucketElapsedNanos();
            }

            public Builder setEndBucketElapsedNanos(long value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setEndBucketElapsedNanos(value);
                return this;
            }

            public Builder clearEndBucketElapsedNanos() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearEndBucketElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            @Deprecated
            public boolean hasValue() {
                return ((ValueBucketInfo) this.instance).hasValue();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            @Deprecated
            public long getValue() {
                return ((ValueBucketInfo) this.instance).getValue();
            }

            @Deprecated
            public Builder setValue(long value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setValue(value);
                return this;
            }

            @Deprecated
            public Builder clearValue() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearValue();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            @Deprecated
            public boolean hasValueLong() {
                return ((ValueBucketInfo) this.instance).hasValueLong();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            @Deprecated
            public long getValueLong() {
                return ((ValueBucketInfo) this.instance).getValueLong();
            }

            @Deprecated
            public Builder setValueLong(long value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setValueLong(value);
                return this;
            }

            @Deprecated
            public Builder clearValueLong() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearValueLong();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            @Deprecated
            public boolean hasValueDouble() {
                return ((ValueBucketInfo) this.instance).hasValueDouble();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            @Deprecated
            public double getValueDouble() {
                return ((ValueBucketInfo) this.instance).getValueDouble();
            }

            @Deprecated
            public Builder setValueDouble(double value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setValueDouble(value);
                return this;
            }

            @Deprecated
            public Builder clearValueDouble() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearValueDouble();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public List<Value> getValuesList() {
                return Collections.unmodifiableList(((ValueBucketInfo) this.instance).getValuesList());
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public int getValuesCount() {
                return ((ValueBucketInfo) this.instance).getValuesCount();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public Value getValues(int index) {
                return ((ValueBucketInfo) this.instance).getValues(index);
            }

            public Builder setValues(int index, Value value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setValues((ValueBucketInfo) index, (int) value);
                return this;
            }

            public Builder setValues(int index, Value.Builder builderForValue) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setValues((ValueBucketInfo) index, (int) builderForValue);
                return this;
            }

            public Builder addValues(Value value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).addValues((ValueBucketInfo) value);
                return this;
            }

            public Builder addValues(int index, Value value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).addValues((ValueBucketInfo) index, (int) value);
                return this;
            }

            public Builder addValues(Value.Builder builderForValue) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).addValues((ValueBucketInfo) builderForValue);
                return this;
            }

            public Builder addValues(int index, Value.Builder builderForValue) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).addValues((ValueBucketInfo) index, (int) builderForValue);
                return this;
            }

            public Builder addAllValues(Iterable<? extends Value> values) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).addAllValues(values);
                return this;
            }

            public Builder clearValues() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearValues();
                return this;
            }

            public Builder removeValues(int index) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).removeValues(index);
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public boolean hasBucketNum() {
                return ((ValueBucketInfo) this.instance).hasBucketNum();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public long getBucketNum() {
                return ((ValueBucketInfo) this.instance).getBucketNum();
            }

            public Builder setBucketNum(long value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setBucketNum(value);
                return this;
            }

            public Builder clearBucketNum() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearBucketNum();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public boolean hasStartBucketElapsedMillis() {
                return ((ValueBucketInfo) this.instance).hasStartBucketElapsedMillis();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public long getStartBucketElapsedMillis() {
                return ((ValueBucketInfo) this.instance).getStartBucketElapsedMillis();
            }

            public Builder setStartBucketElapsedMillis(long value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setStartBucketElapsedMillis(value);
                return this;
            }

            public Builder clearStartBucketElapsedMillis() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearStartBucketElapsedMillis();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public boolean hasEndBucketElapsedMillis() {
                return ((ValueBucketInfo) this.instance).hasEndBucketElapsedMillis();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public long getEndBucketElapsedMillis() {
                return ((ValueBucketInfo) this.instance).getEndBucketElapsedMillis();
            }

            public Builder setEndBucketElapsedMillis(long value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setEndBucketElapsedMillis(value);
                return this;
            }

            public Builder clearEndBucketElapsedMillis() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearEndBucketElapsedMillis();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public boolean hasConditionTrueNanos() {
                return ((ValueBucketInfo) this.instance).hasConditionTrueNanos();
            }

            @Override // com.android.os.StatsLog.ValueBucketInfoOrBuilder
            public long getConditionTrueNanos() {
                return ((ValueBucketInfo) this.instance).getConditionTrueNanos();
            }

            public Builder setConditionTrueNanos(long value) {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).setConditionTrueNanos(value);
                return this;
            }

            public Builder clearConditionTrueNanos() {
                copyOnWrite();
                ((ValueBucketInfo) this.instance).clearConditionTrueNanos();
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            boolean z = true;
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new ValueBucketInfo();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.values_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    ValueBucketInfo other = (ValueBucketInfo) arg1;
                    this.startBucketElapsedNanos_ = visitor.visitLong(hasStartBucketElapsedNanos(), this.startBucketElapsedNanos_, other.hasStartBucketElapsedNanos(), other.startBucketElapsedNanos_);
                    this.endBucketElapsedNanos_ = visitor.visitLong(hasEndBucketElapsedNanos(), this.endBucketElapsedNanos_, other.hasEndBucketElapsedNanos(), other.endBucketElapsedNanos_);
                    this.value_ = visitor.visitLong(hasValue(), this.value_, other.hasValue(), other.value_);
                    this.values_ = visitor.visitList(this.values_, other.values_);
                    this.bucketNum_ = visitor.visitLong(hasBucketNum(), this.bucketNum_, other.hasBucketNum(), other.bucketNum_);
                    this.startBucketElapsedMillis_ = visitor.visitLong(hasStartBucketElapsedMillis(), this.startBucketElapsedMillis_, other.hasStartBucketElapsedMillis(), other.startBucketElapsedMillis_);
                    this.endBucketElapsedMillis_ = visitor.visitLong(hasEndBucketElapsedMillis(), this.endBucketElapsedMillis_, other.hasEndBucketElapsedMillis(), other.endBucketElapsedMillis_);
                    this.conditionTrueNanos_ = visitor.visitLong(hasConditionTrueNanos(), this.conditionTrueNanos_, other.hasConditionTrueNanos(), other.conditionTrueNanos_);
                    int i = AnonymousClass1.$SwitchMap$com$android$os$StatsLog$ValueBucketInfo$SingleValueCase[other.getSingleValueCase().ordinal()];
                    if (i == 1) {
                        if (this.singleValueCase_ != 7) {
                            z = false;
                        }
                        this.singleValue_ = visitor.visitOneofLong(z, this.singleValue_, other.singleValue_);
                    } else if (i == 2) {
                        if (this.singleValueCase_ != 8) {
                            z = false;
                        }
                        this.singleValue_ = visitor.visitOneofDouble(z, this.singleValue_, other.singleValue_);
                    } else if (i == 3) {
                        if (this.singleValueCase_ == 0) {
                            z = false;
                        }
                        visitor.visitOneofNotSet(z);
                    }
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        int i2 = other.singleValueCase_;
                        if (i2 != 0) {
                            this.singleValueCase_ = i2;
                        }
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                case 8:
                                    this.bitField0_ |= 1;
                                    this.startBucketElapsedNanos_ = input.readInt64();
                                    break;
                                case 16:
                                    this.bitField0_ |= 2;
                                    this.endBucketElapsedNanos_ = input.readInt64();
                                    break;
                                case 24:
                                    this.bitField0_ |= 4;
                                    this.value_ = input.readInt64();
                                    break;
                                case 32:
                                    this.bitField0_ |= 32;
                                    this.bucketNum_ = input.readInt64();
                                    break;
                                case 40:
                                    this.bitField0_ |= 64;
                                    this.startBucketElapsedMillis_ = input.readInt64();
                                    break;
                                case 48:
                                    this.bitField0_ |= 128;
                                    this.endBucketElapsedMillis_ = input.readInt64();
                                    break;
                                case 56:
                                    this.singleValueCase_ = 7;
                                    this.singleValue_ = Long.valueOf(input.readInt64());
                                    break;
                                case 65:
                                    this.singleValueCase_ = 8;
                                    this.singleValue_ = Double.valueOf(input.readDouble());
                                    break;
                                case 74:
                                    if (!this.values_.isModifiable()) {
                                        this.values_ = GeneratedMessageLite.mutableCopy(this.values_);
                                    }
                                    this.values_.add((Value) input.readMessage(Value.parser(), extensionRegistry));
                                    break;
                                case 80:
                                    this.bitField0_ |= 256;
                                    this.conditionTrueNanos_ = input.readInt64();
                                    break;
                                default:
                                    if (parseUnknownField(tag, input)) {
                                        break;
                                    } else {
                                        done = true;
                                        break;
                                    }
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (ValueBucketInfo.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static ValueBucketInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ValueBucketInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class ValueMetricData extends GeneratedMessageLite<ValueMetricData, Builder> implements ValueMetricDataOrBuilder {
        public static final int BUCKET_INFO_FIELD_NUMBER = 3;
        private static final ValueMetricData DEFAULT_INSTANCE = new ValueMetricData();
        public static final int DIMENSIONS_IN_CONDITION_FIELD_NUMBER = 2;
        public static final int DIMENSIONS_IN_WHAT_FIELD_NUMBER = 1;
        public static final int DIMENSION_LEAF_VALUES_IN_CONDITION_FIELD_NUMBER = 5;
        public static final int DIMENSION_LEAF_VALUES_IN_WHAT_FIELD_NUMBER = 4;
        private static volatile Parser<ValueMetricData> PARSER;
        private int bitField0_;
        private Internal.ProtobufList<ValueBucketInfo> bucketInfo_ = emptyProtobufList();
        private Internal.ProtobufList<DimensionsValue> dimensionLeafValuesInCondition_ = emptyProtobufList();
        private Internal.ProtobufList<DimensionsValue> dimensionLeafValuesInWhat_ = emptyProtobufList();
        private DimensionsValue dimensionsInCondition_;
        private DimensionsValue dimensionsInWhat_;

        private ValueMetricData() {
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public boolean hasDimensionsInWhat() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public DimensionsValue getDimensionsInWhat() {
            DimensionsValue dimensionsValue = this.dimensionsInWhat_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInWhat(DimensionsValue value) {
            if (value != null) {
                this.dimensionsInWhat_ = value;
                this.bitField0_ |= 1;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInWhat(DimensionsValue.Builder builderForValue) {
            this.dimensionsInWhat_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsInWhat(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsInWhat_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsInWhat_ = value;
            } else {
                this.dimensionsInWhat_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsInWhat_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsInWhat() {
            this.dimensionsInWhat_ = null;
            this.bitField0_ &= -2;
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public boolean hasDimensionsInCondition() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public DimensionsValue getDimensionsInCondition() {
            DimensionsValue dimensionsValue = this.dimensionsInCondition_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInCondition(DimensionsValue value) {
            if (value != null) {
                this.dimensionsInCondition_ = value;
                this.bitField0_ |= 2;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInCondition(DimensionsValue.Builder builderForValue) {
            this.dimensionsInCondition_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsInCondition(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsInCondition_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsInCondition_ = value;
            } else {
                this.dimensionsInCondition_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsInCondition_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsInCondition() {
            this.dimensionsInCondition_ = null;
            this.bitField0_ &= -3;
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public List<ValueBucketInfo> getBucketInfoList() {
            return this.bucketInfo_;
        }

        public List<? extends ValueBucketInfoOrBuilder> getBucketInfoOrBuilderList() {
            return this.bucketInfo_;
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public int getBucketInfoCount() {
            return this.bucketInfo_.size();
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public ValueBucketInfo getBucketInfo(int index) {
            return this.bucketInfo_.get(index);
        }

        public ValueBucketInfoOrBuilder getBucketInfoOrBuilder(int index) {
            return this.bucketInfo_.get(index);
        }

        private void ensureBucketInfoIsMutable() {
            if (!this.bucketInfo_.isModifiable()) {
                this.bucketInfo_ = GeneratedMessageLite.mutableCopy(this.bucketInfo_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketInfo(int index, ValueBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketInfo(int index, ValueBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.set(index, (ValueBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(ValueBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(int index, ValueBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(ValueBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.add((ValueBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(int index, ValueBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.add(index, (ValueBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllBucketInfo(Iterable<? extends ValueBucketInfo> values) {
            ensureBucketInfoIsMutable();
            AbstractMessageLite.addAll(values, this.bucketInfo_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearBucketInfo() {
            this.bucketInfo_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeBucketInfo(int index) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.remove(index);
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public List<DimensionsValue> getDimensionLeafValuesInWhatList() {
            return this.dimensionLeafValuesInWhat_;
        }

        public List<? extends DimensionsValueOrBuilder> getDimensionLeafValuesInWhatOrBuilderList() {
            return this.dimensionLeafValuesInWhat_;
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public int getDimensionLeafValuesInWhatCount() {
            return this.dimensionLeafValuesInWhat_.size();
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public DimensionsValue getDimensionLeafValuesInWhat(int index) {
            return this.dimensionLeafValuesInWhat_.get(index);
        }

        public DimensionsValueOrBuilder getDimensionLeafValuesInWhatOrBuilder(int index) {
            return this.dimensionLeafValuesInWhat_.get(index);
        }

        private void ensureDimensionLeafValuesInWhatIsMutable() {
            if (!this.dimensionLeafValuesInWhat_.isModifiable()) {
                this.dimensionLeafValuesInWhat_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInWhat_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInWhat(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.set(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.add((DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.add(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDimensionLeafValuesInWhat(Iterable<? extends DimensionsValue> values) {
            ensureDimensionLeafValuesInWhatIsMutable();
            AbstractMessageLite.addAll(values, this.dimensionLeafValuesInWhat_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionLeafValuesInWhat() {
            this.dimensionLeafValuesInWhat_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDimensionLeafValuesInWhat(int index) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.remove(index);
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public List<DimensionsValue> getDimensionLeafValuesInConditionList() {
            return this.dimensionLeafValuesInCondition_;
        }

        public List<? extends DimensionsValueOrBuilder> getDimensionLeafValuesInConditionOrBuilderList() {
            return this.dimensionLeafValuesInCondition_;
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public int getDimensionLeafValuesInConditionCount() {
            return this.dimensionLeafValuesInCondition_.size();
        }

        @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
        public DimensionsValue getDimensionLeafValuesInCondition(int index) {
            return this.dimensionLeafValuesInCondition_.get(index);
        }

        public DimensionsValueOrBuilder getDimensionLeafValuesInConditionOrBuilder(int index) {
            return this.dimensionLeafValuesInCondition_.get(index);
        }

        private void ensureDimensionLeafValuesInConditionIsMutable() {
            if (!this.dimensionLeafValuesInCondition_.isModifiable()) {
                this.dimensionLeafValuesInCondition_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInCondition_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInCondition(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.set(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.add((DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.add(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDimensionLeafValuesInCondition(Iterable<? extends DimensionsValue> values) {
            ensureDimensionLeafValuesInConditionIsMutable();
            AbstractMessageLite.addAll(values, this.dimensionLeafValuesInCondition_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionLeafValuesInCondition() {
            this.dimensionLeafValuesInCondition_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDimensionLeafValuesInCondition(int index) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.remove(index);
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeMessage(1, getDimensionsInWhat());
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeMessage(2, getDimensionsInCondition());
            }
            for (int i = 0; i < this.bucketInfo_.size(); i++) {
                output.writeMessage(3, this.bucketInfo_.get(i));
            }
            for (int i2 = 0; i2 < this.dimensionLeafValuesInWhat_.size(); i2++) {
                output.writeMessage(4, this.dimensionLeafValuesInWhat_.get(i2));
            }
            for (int i3 = 0; i3 < this.dimensionLeafValuesInCondition_.size(); i3++) {
                output.writeMessage(5, this.dimensionLeafValuesInCondition_.get(i3));
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeMessageSize(1, getDimensionsInWhat());
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeMessageSize(2, getDimensionsInCondition());
            }
            for (int i = 0; i < this.bucketInfo_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(3, this.bucketInfo_.get(i));
            }
            for (int i2 = 0; i2 < this.dimensionLeafValuesInWhat_.size(); i2++) {
                size2 += CodedOutputStream.computeMessageSize(4, this.dimensionLeafValuesInWhat_.get(i2));
            }
            for (int i3 = 0; i3 < this.dimensionLeafValuesInCondition_.size(); i3++) {
                size2 += CodedOutputStream.computeMessageSize(5, this.dimensionLeafValuesInCondition_.get(i3));
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static ValueMetricData parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ValueMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static ValueMetricData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ValueMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static ValueMetricData parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ValueMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static ValueMetricData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ValueMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static ValueMetricData parseFrom(InputStream input) throws IOException {
            return (ValueMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static ValueMetricData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ValueMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static ValueMetricData parseDelimitedFrom(InputStream input) throws IOException {
            return (ValueMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static ValueMetricData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ValueMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static ValueMetricData parseFrom(CodedInputStream input) throws IOException {
            return (ValueMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static ValueMetricData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ValueMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ValueMetricData prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<ValueMetricData, Builder> implements ValueMetricDataOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(ValueMetricData.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public boolean hasDimensionsInWhat() {
                return ((ValueMetricData) this.instance).hasDimensionsInWhat();
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public DimensionsValue getDimensionsInWhat() {
                return ((ValueMetricData) this.instance).getDimensionsInWhat();
            }

            public Builder setDimensionsInWhat(DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setDimensionsInWhat((ValueMetricData) value);
                return this;
            }

            public Builder setDimensionsInWhat(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setDimensionsInWhat((ValueMetricData) builderForValue);
                return this;
            }

            public Builder mergeDimensionsInWhat(DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).mergeDimensionsInWhat(value);
                return this;
            }

            public Builder clearDimensionsInWhat() {
                copyOnWrite();
                ((ValueMetricData) this.instance).clearDimensionsInWhat();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public boolean hasDimensionsInCondition() {
                return ((ValueMetricData) this.instance).hasDimensionsInCondition();
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public DimensionsValue getDimensionsInCondition() {
                return ((ValueMetricData) this.instance).getDimensionsInCondition();
            }

            public Builder setDimensionsInCondition(DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setDimensionsInCondition((ValueMetricData) value);
                return this;
            }

            public Builder setDimensionsInCondition(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setDimensionsInCondition((ValueMetricData) builderForValue);
                return this;
            }

            public Builder mergeDimensionsInCondition(DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).mergeDimensionsInCondition(value);
                return this;
            }

            public Builder clearDimensionsInCondition() {
                copyOnWrite();
                ((ValueMetricData) this.instance).clearDimensionsInCondition();
                return this;
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public List<ValueBucketInfo> getBucketInfoList() {
                return Collections.unmodifiableList(((ValueMetricData) this.instance).getBucketInfoList());
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public int getBucketInfoCount() {
                return ((ValueMetricData) this.instance).getBucketInfoCount();
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public ValueBucketInfo getBucketInfo(int index) {
                return ((ValueMetricData) this.instance).getBucketInfo(index);
            }

            public Builder setBucketInfo(int index, ValueBucketInfo value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setBucketInfo((ValueMetricData) index, (int) value);
                return this;
            }

            public Builder setBucketInfo(int index, ValueBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setBucketInfo((ValueMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addBucketInfo(ValueBucketInfo value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addBucketInfo((ValueMetricData) value);
                return this;
            }

            public Builder addBucketInfo(int index, ValueBucketInfo value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addBucketInfo((ValueMetricData) index, (int) value);
                return this;
            }

            public Builder addBucketInfo(ValueBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addBucketInfo((ValueMetricData) builderForValue);
                return this;
            }

            public Builder addBucketInfo(int index, ValueBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addBucketInfo((ValueMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllBucketInfo(Iterable<? extends ValueBucketInfo> values) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addAllBucketInfo(values);
                return this;
            }

            public Builder clearBucketInfo() {
                copyOnWrite();
                ((ValueMetricData) this.instance).clearBucketInfo();
                return this;
            }

            public Builder removeBucketInfo(int index) {
                copyOnWrite();
                ((ValueMetricData) this.instance).removeBucketInfo(index);
                return this;
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public List<DimensionsValue> getDimensionLeafValuesInWhatList() {
                return Collections.unmodifiableList(((ValueMetricData) this.instance).getDimensionLeafValuesInWhatList());
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public int getDimensionLeafValuesInWhatCount() {
                return ((ValueMetricData) this.instance).getDimensionLeafValuesInWhatCount();
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public DimensionsValue getDimensionLeafValuesInWhat(int index) {
                return ((ValueMetricData) this.instance).getDimensionLeafValuesInWhat(index);
            }

            public Builder setDimensionLeafValuesInWhat(int index, DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setDimensionLeafValuesInWhat((ValueMetricData) index, (int) value);
                return this;
            }

            public Builder setDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setDimensionLeafValuesInWhat((ValueMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addDimensionLeafValuesInWhat((ValueMetricData) value);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(int index, DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addDimensionLeafValuesInWhat((ValueMetricData) index, (int) value);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addDimensionLeafValuesInWhat((ValueMetricData) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addDimensionLeafValuesInWhat((ValueMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDimensionLeafValuesInWhat(Iterable<? extends DimensionsValue> values) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addAllDimensionLeafValuesInWhat(values);
                return this;
            }

            public Builder clearDimensionLeafValuesInWhat() {
                copyOnWrite();
                ((ValueMetricData) this.instance).clearDimensionLeafValuesInWhat();
                return this;
            }

            public Builder removeDimensionLeafValuesInWhat(int index) {
                copyOnWrite();
                ((ValueMetricData) this.instance).removeDimensionLeafValuesInWhat(index);
                return this;
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public List<DimensionsValue> getDimensionLeafValuesInConditionList() {
                return Collections.unmodifiableList(((ValueMetricData) this.instance).getDimensionLeafValuesInConditionList());
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public int getDimensionLeafValuesInConditionCount() {
                return ((ValueMetricData) this.instance).getDimensionLeafValuesInConditionCount();
            }

            @Override // com.android.os.StatsLog.ValueMetricDataOrBuilder
            public DimensionsValue getDimensionLeafValuesInCondition(int index) {
                return ((ValueMetricData) this.instance).getDimensionLeafValuesInCondition(index);
            }

            public Builder setDimensionLeafValuesInCondition(int index, DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setDimensionLeafValuesInCondition((ValueMetricData) index, (int) value);
                return this;
            }

            public Builder setDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).setDimensionLeafValuesInCondition((ValueMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addDimensionLeafValuesInCondition((ValueMetricData) value);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(int index, DimensionsValue value) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addDimensionLeafValuesInCondition((ValueMetricData) index, (int) value);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addDimensionLeafValuesInCondition((ValueMetricData) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addDimensionLeafValuesInCondition((ValueMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDimensionLeafValuesInCondition(Iterable<? extends DimensionsValue> values) {
                copyOnWrite();
                ((ValueMetricData) this.instance).addAllDimensionLeafValuesInCondition(values);
                return this;
            }

            public Builder clearDimensionLeafValuesInCondition() {
                copyOnWrite();
                ((ValueMetricData) this.instance).clearDimensionLeafValuesInCondition();
                return this;
            }

            public Builder removeDimensionLeafValuesInCondition(int index) {
                copyOnWrite();
                ((ValueMetricData) this.instance).removeDimensionLeafValuesInCondition(index);
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new ValueMetricData();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.bucketInfo_.makeImmutable();
                    this.dimensionLeafValuesInWhat_.makeImmutable();
                    this.dimensionLeafValuesInCondition_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    ValueMetricData other = (ValueMetricData) arg1;
                    this.dimensionsInWhat_ = (DimensionsValue) visitor.visitMessage(this.dimensionsInWhat_, other.dimensionsInWhat_);
                    this.dimensionsInCondition_ = (DimensionsValue) visitor.visitMessage(this.dimensionsInCondition_, other.dimensionsInCondition_);
                    this.bucketInfo_ = visitor.visitList(this.bucketInfo_, other.bucketInfo_);
                    this.dimensionLeafValuesInWhat_ = visitor.visitList(this.dimensionLeafValuesInWhat_, other.dimensionLeafValuesInWhat_);
                    this.dimensionLeafValuesInCondition_ = visitor.visitList(this.dimensionLeafValuesInCondition_, other.dimensionLeafValuesInCondition_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 10) {
                                DimensionsValue.Builder subBuilder = null;
                                if ((this.bitField0_ & 1) == 1) {
                                    subBuilder = (DimensionsValue.Builder) this.dimensionsInWhat_.toBuilder();
                                }
                                this.dimensionsInWhat_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom((GeneratedMessageLite) this.dimensionsInWhat_);
                                    this.dimensionsInWhat_ = (DimensionsValue) subBuilder.buildPartial();
                                }
                                this.bitField0_ |= 1;
                            } else if (tag == 18) {
                                DimensionsValue.Builder subBuilder2 = null;
                                if ((this.bitField0_ & 2) == 2) {
                                    subBuilder2 = (DimensionsValue.Builder) this.dimensionsInCondition_.toBuilder();
                                }
                                this.dimensionsInCondition_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                if (subBuilder2 != null) {
                                    subBuilder2.mergeFrom((GeneratedMessageLite) this.dimensionsInCondition_);
                                    this.dimensionsInCondition_ = (DimensionsValue) subBuilder2.buildPartial();
                                }
                                this.bitField0_ |= 2;
                            } else if (tag == 26) {
                                if (!this.bucketInfo_.isModifiable()) {
                                    this.bucketInfo_ = GeneratedMessageLite.mutableCopy(this.bucketInfo_);
                                }
                                this.bucketInfo_.add((ValueBucketInfo) input.readMessage(ValueBucketInfo.parser(), extensionRegistry));
                            } else if (tag == 34) {
                                if (!this.dimensionLeafValuesInWhat_.isModifiable()) {
                                    this.dimensionLeafValuesInWhat_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInWhat_);
                                }
                                this.dimensionLeafValuesInWhat_.add((DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry));
                            } else if (tag == 42) {
                                if (!this.dimensionLeafValuesInCondition_.isModifiable()) {
                                    this.dimensionLeafValuesInCondition_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInCondition_);
                                }
                                this.dimensionLeafValuesInCondition_.add((DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry));
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (ValueMetricData.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static ValueMetricData getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ValueMetricData> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class GaugeBucketInfo extends GeneratedMessageLite<GaugeBucketInfo, Builder> implements GaugeBucketInfoOrBuilder {
        public static final int ATOM_FIELD_NUMBER = 3;
        public static final int BUCKET_NUM_FIELD_NUMBER = 6;
        private static final GaugeBucketInfo DEFAULT_INSTANCE = new GaugeBucketInfo();
        public static final int ELAPSED_TIMESTAMP_NANOS_FIELD_NUMBER = 4;
        public static final int END_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 8;
        public static final int END_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 2;
        private static volatile Parser<GaugeBucketInfo> PARSER = null;
        public static final int START_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 7;
        public static final int START_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 1;
        public static final int WALL_CLOCK_TIMESTAMP_NANOS_FIELD_NUMBER = 5;
        private Internal.ProtobufList<AtomsProto.Atom> atom_ = emptyProtobufList();
        private int bitField0_;
        private long bucketNum_ = 0;
        private Internal.LongList elapsedTimestampNanos_ = emptyLongList();
        private long endBucketElapsedMillis_ = 0;
        private long endBucketElapsedNanos_ = 0;
        private long startBucketElapsedMillis_ = 0;
        private long startBucketElapsedNanos_ = 0;
        private Internal.LongList wallClockTimestampNanos_ = emptyLongList();

        private GaugeBucketInfo() {
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public boolean hasStartBucketElapsedNanos() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public long getStartBucketElapsedNanos() {
            return this.startBucketElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStartBucketElapsedNanos(long value) {
            this.bitField0_ |= 1;
            this.startBucketElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStartBucketElapsedNanos() {
            this.bitField0_ &= -2;
            this.startBucketElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public boolean hasEndBucketElapsedNanos() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public long getEndBucketElapsedNanos() {
            return this.endBucketElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEndBucketElapsedNanos(long value) {
            this.bitField0_ |= 2;
            this.endBucketElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearEndBucketElapsedNanos() {
            this.bitField0_ &= -3;
            this.endBucketElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public List<AtomsProto.Atom> getAtomList() {
            return this.atom_;
        }

        public List<? extends AtomsProto.AtomOrBuilder> getAtomOrBuilderList() {
            return this.atom_;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public int getAtomCount() {
            return this.atom_.size();
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public AtomsProto.Atom getAtom(int index) {
            return this.atom_.get(index);
        }

        public AtomsProto.AtomOrBuilder getAtomOrBuilder(int index) {
            return this.atom_.get(index);
        }

        private void ensureAtomIsMutable() {
            if (!this.atom_.isModifiable()) {
                this.atom_ = GeneratedMessageLite.mutableCopy(this.atom_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAtom(int index, AtomsProto.Atom value) {
            if (value != null) {
                ensureAtomIsMutable();
                this.atom_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAtom(int index, AtomsProto.Atom.Builder builderForValue) {
            ensureAtomIsMutable();
            this.atom_.set(index, (AtomsProto.Atom) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtom(AtomsProto.Atom value) {
            if (value != null) {
                ensureAtomIsMutable();
                this.atom_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtom(int index, AtomsProto.Atom value) {
            if (value != null) {
                ensureAtomIsMutable();
                this.atom_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtom(AtomsProto.Atom.Builder builderForValue) {
            ensureAtomIsMutable();
            this.atom_.add((AtomsProto.Atom) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtom(int index, AtomsProto.Atom.Builder builderForValue) {
            ensureAtomIsMutable();
            this.atom_.add(index, (AtomsProto.Atom) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllAtom(Iterable<? extends AtomsProto.Atom> values) {
            ensureAtomIsMutable();
            AbstractMessageLite.addAll(values, this.atom_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearAtom() {
            this.atom_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeAtom(int index) {
            ensureAtomIsMutable();
            this.atom_.remove(index);
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public List<Long> getElapsedTimestampNanosList() {
            return this.elapsedTimestampNanos_;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public int getElapsedTimestampNanosCount() {
            return this.elapsedTimestampNanos_.size();
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public long getElapsedTimestampNanos(int index) {
            return this.elapsedTimestampNanos_.getLong(index);
        }

        private void ensureElapsedTimestampNanosIsMutable() {
            if (!this.elapsedTimestampNanos_.isModifiable()) {
                this.elapsedTimestampNanos_ = GeneratedMessageLite.mutableCopy(this.elapsedTimestampNanos_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setElapsedTimestampNanos(int index, long value) {
            ensureElapsedTimestampNanosIsMutable();
            this.elapsedTimestampNanos_.setLong(index, value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addElapsedTimestampNanos(long value) {
            ensureElapsedTimestampNanosIsMutable();
            this.elapsedTimestampNanos_.addLong(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllElapsedTimestampNanos(Iterable<? extends Long> values) {
            ensureElapsedTimestampNanosIsMutable();
            AbstractMessageLite.addAll(values, this.elapsedTimestampNanos_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearElapsedTimestampNanos() {
            this.elapsedTimestampNanos_ = emptyLongList();
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        @Deprecated
        public List<Long> getWallClockTimestampNanosList() {
            return this.wallClockTimestampNanos_;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        @Deprecated
        public int getWallClockTimestampNanosCount() {
            return this.wallClockTimestampNanos_.size();
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        @Deprecated
        public long getWallClockTimestampNanos(int index) {
            return this.wallClockTimestampNanos_.getLong(index);
        }

        private void ensureWallClockTimestampNanosIsMutable() {
            if (!this.wallClockTimestampNanos_.isModifiable()) {
                this.wallClockTimestampNanos_ = GeneratedMessageLite.mutableCopy(this.wallClockTimestampNanos_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setWallClockTimestampNanos(int index, long value) {
            ensureWallClockTimestampNanosIsMutable();
            this.wallClockTimestampNanos_.setLong(index, value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addWallClockTimestampNanos(long value) {
            ensureWallClockTimestampNanosIsMutable();
            this.wallClockTimestampNanos_.addLong(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllWallClockTimestampNanos(Iterable<? extends Long> values) {
            ensureWallClockTimestampNanosIsMutable();
            AbstractMessageLite.addAll(values, this.wallClockTimestampNanos_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearWallClockTimestampNanos() {
            this.wallClockTimestampNanos_ = emptyLongList();
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public boolean hasBucketNum() {
            return (this.bitField0_ & 4) == 4;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public long getBucketNum() {
            return this.bucketNum_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketNum(long value) {
            this.bitField0_ |= 4;
            this.bucketNum_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearBucketNum() {
            this.bitField0_ &= -5;
            this.bucketNum_ = 0;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public boolean hasStartBucketElapsedMillis() {
            return (this.bitField0_ & 8) == 8;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public long getStartBucketElapsedMillis() {
            return this.startBucketElapsedMillis_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStartBucketElapsedMillis(long value) {
            this.bitField0_ |= 8;
            this.startBucketElapsedMillis_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStartBucketElapsedMillis() {
            this.bitField0_ &= -9;
            this.startBucketElapsedMillis_ = 0;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public boolean hasEndBucketElapsedMillis() {
            return (this.bitField0_ & 16) == 16;
        }

        @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
        public long getEndBucketElapsedMillis() {
            return this.endBucketElapsedMillis_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEndBucketElapsedMillis(long value) {
            this.bitField0_ |= 16;
            this.endBucketElapsedMillis_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearEndBucketElapsedMillis() {
            this.bitField0_ &= -17;
            this.endBucketElapsedMillis_ = 0;
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeInt64(1, this.startBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeInt64(2, this.endBucketElapsedNanos_);
            }
            for (int i = 0; i < this.atom_.size(); i++) {
                output.writeMessage(3, this.atom_.get(i));
            }
            for (int i2 = 0; i2 < this.elapsedTimestampNanos_.size(); i2++) {
                output.writeInt64(4, this.elapsedTimestampNanos_.getLong(i2));
            }
            for (int i3 = 0; i3 < this.wallClockTimestampNanos_.size(); i3++) {
                output.writeInt64(5, this.wallClockTimestampNanos_.getLong(i3));
            }
            if ((this.bitField0_ & 4) == 4) {
                output.writeInt64(6, this.bucketNum_);
            }
            if ((this.bitField0_ & 8) == 8) {
                output.writeInt64(7, this.startBucketElapsedMillis_);
            }
            if ((this.bitField0_ & 16) == 16) {
                output.writeInt64(8, this.endBucketElapsedMillis_);
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeInt64Size(1, this.startBucketElapsedNanos_);
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeInt64Size(2, this.endBucketElapsedNanos_);
            }
            for (int i = 0; i < this.atom_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(3, this.atom_.get(i));
            }
            int dataSize = 0;
            for (int i2 = 0; i2 < this.elapsedTimestampNanos_.size(); i2++) {
                dataSize += CodedOutputStream.computeInt64SizeNoTag(this.elapsedTimestampNanos_.getLong(i2));
            }
            int size3 = size2 + dataSize + (getElapsedTimestampNanosList().size() * 1);
            int dataSize2 = 0;
            for (int i3 = 0; i3 < this.wallClockTimestampNanos_.size(); i3++) {
                dataSize2 += CodedOutputStream.computeInt64SizeNoTag(this.wallClockTimestampNanos_.getLong(i3));
            }
            int size4 = size3 + dataSize2 + (getWallClockTimestampNanosList().size() * 1);
            if ((this.bitField0_ & 4) == 4) {
                size4 += CodedOutputStream.computeInt64Size(6, this.bucketNum_);
            }
            if ((this.bitField0_ & 8) == 8) {
                size4 += CodedOutputStream.computeInt64Size(7, this.startBucketElapsedMillis_);
            }
            if ((this.bitField0_ & 16) == 16) {
                size4 += CodedOutputStream.computeInt64Size(8, this.endBucketElapsedMillis_);
            }
            int size5 = size4 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size5;
            return size5;
        }

        public static GaugeBucketInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GaugeBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static GaugeBucketInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GaugeBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static GaugeBucketInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GaugeBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static GaugeBucketInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GaugeBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static GaugeBucketInfo parseFrom(InputStream input) throws IOException {
            return (GaugeBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static GaugeBucketInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GaugeBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static GaugeBucketInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (GaugeBucketInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static GaugeBucketInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GaugeBucketInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static GaugeBucketInfo parseFrom(CodedInputStream input) throws IOException {
            return (GaugeBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static GaugeBucketInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GaugeBucketInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(GaugeBucketInfo prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<GaugeBucketInfo, Builder> implements GaugeBucketInfoOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(GaugeBucketInfo.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public boolean hasStartBucketElapsedNanos() {
                return ((GaugeBucketInfo) this.instance).hasStartBucketElapsedNanos();
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public long getStartBucketElapsedNanos() {
                return ((GaugeBucketInfo) this.instance).getStartBucketElapsedNanos();
            }

            public Builder setStartBucketElapsedNanos(long value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).setStartBucketElapsedNanos(value);
                return this;
            }

            public Builder clearStartBucketElapsedNanos() {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).clearStartBucketElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public boolean hasEndBucketElapsedNanos() {
                return ((GaugeBucketInfo) this.instance).hasEndBucketElapsedNanos();
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public long getEndBucketElapsedNanos() {
                return ((GaugeBucketInfo) this.instance).getEndBucketElapsedNanos();
            }

            public Builder setEndBucketElapsedNanos(long value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).setEndBucketElapsedNanos(value);
                return this;
            }

            public Builder clearEndBucketElapsedNanos() {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).clearEndBucketElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public List<AtomsProto.Atom> getAtomList() {
                return Collections.unmodifiableList(((GaugeBucketInfo) this.instance).getAtomList());
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public int getAtomCount() {
                return ((GaugeBucketInfo) this.instance).getAtomCount();
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public AtomsProto.Atom getAtom(int index) {
                return ((GaugeBucketInfo) this.instance).getAtom(index);
            }

            public Builder setAtom(int index, AtomsProto.Atom value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).setAtom((GaugeBucketInfo) index, (int) value);
                return this;
            }

            public Builder setAtom(int index, AtomsProto.Atom.Builder builderForValue) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).setAtom((GaugeBucketInfo) index, (int) builderForValue);
                return this;
            }

            public Builder addAtom(AtomsProto.Atom value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).addAtom((GaugeBucketInfo) value);
                return this;
            }

            public Builder addAtom(int index, AtomsProto.Atom value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).addAtom((GaugeBucketInfo) index, (int) value);
                return this;
            }

            public Builder addAtom(AtomsProto.Atom.Builder builderForValue) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).addAtom((GaugeBucketInfo) builderForValue);
                return this;
            }

            public Builder addAtom(int index, AtomsProto.Atom.Builder builderForValue) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).addAtom((GaugeBucketInfo) index, (int) builderForValue);
                return this;
            }

            public Builder addAllAtom(Iterable<? extends AtomsProto.Atom> values) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).addAllAtom(values);
                return this;
            }

            public Builder clearAtom() {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).clearAtom();
                return this;
            }

            public Builder removeAtom(int index) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).removeAtom(index);
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public List<Long> getElapsedTimestampNanosList() {
                return Collections.unmodifiableList(((GaugeBucketInfo) this.instance).getElapsedTimestampNanosList());
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public int getElapsedTimestampNanosCount() {
                return ((GaugeBucketInfo) this.instance).getElapsedTimestampNanosCount();
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public long getElapsedTimestampNanos(int index) {
                return ((GaugeBucketInfo) this.instance).getElapsedTimestampNanos(index);
            }

            public Builder setElapsedTimestampNanos(int index, long value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).setElapsedTimestampNanos(index, value);
                return this;
            }

            public Builder addElapsedTimestampNanos(long value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).addElapsedTimestampNanos(value);
                return this;
            }

            public Builder addAllElapsedTimestampNanos(Iterable<? extends Long> values) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).addAllElapsedTimestampNanos(values);
                return this;
            }

            public Builder clearElapsedTimestampNanos() {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).clearElapsedTimestampNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            @Deprecated
            public List<Long> getWallClockTimestampNanosList() {
                return Collections.unmodifiableList(((GaugeBucketInfo) this.instance).getWallClockTimestampNanosList());
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            @Deprecated
            public int getWallClockTimestampNanosCount() {
                return ((GaugeBucketInfo) this.instance).getWallClockTimestampNanosCount();
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            @Deprecated
            public long getWallClockTimestampNanos(int index) {
                return ((GaugeBucketInfo) this.instance).getWallClockTimestampNanos(index);
            }

            @Deprecated
            public Builder setWallClockTimestampNanos(int index, long value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).setWallClockTimestampNanos(index, value);
                return this;
            }

            @Deprecated
            public Builder addWallClockTimestampNanos(long value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).addWallClockTimestampNanos(value);
                return this;
            }

            @Deprecated
            public Builder addAllWallClockTimestampNanos(Iterable<? extends Long> values) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).addAllWallClockTimestampNanos(values);
                return this;
            }

            @Deprecated
            public Builder clearWallClockTimestampNanos() {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).clearWallClockTimestampNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public boolean hasBucketNum() {
                return ((GaugeBucketInfo) this.instance).hasBucketNum();
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public long getBucketNum() {
                return ((GaugeBucketInfo) this.instance).getBucketNum();
            }

            public Builder setBucketNum(long value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).setBucketNum(value);
                return this;
            }

            public Builder clearBucketNum() {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).clearBucketNum();
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public boolean hasStartBucketElapsedMillis() {
                return ((GaugeBucketInfo) this.instance).hasStartBucketElapsedMillis();
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public long getStartBucketElapsedMillis() {
                return ((GaugeBucketInfo) this.instance).getStartBucketElapsedMillis();
            }

            public Builder setStartBucketElapsedMillis(long value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).setStartBucketElapsedMillis(value);
                return this;
            }

            public Builder clearStartBucketElapsedMillis() {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).clearStartBucketElapsedMillis();
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public boolean hasEndBucketElapsedMillis() {
                return ((GaugeBucketInfo) this.instance).hasEndBucketElapsedMillis();
            }

            @Override // com.android.os.StatsLog.GaugeBucketInfoOrBuilder
            public long getEndBucketElapsedMillis() {
                return ((GaugeBucketInfo) this.instance).getEndBucketElapsedMillis();
            }

            public Builder setEndBucketElapsedMillis(long value) {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).setEndBucketElapsedMillis(value);
                return this;
            }

            public Builder clearEndBucketElapsedMillis() {
                copyOnWrite();
                ((GaugeBucketInfo) this.instance).clearEndBucketElapsedMillis();
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new GaugeBucketInfo();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.atom_.makeImmutable();
                    this.elapsedTimestampNanos_.makeImmutable();
                    this.wallClockTimestampNanos_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    GaugeBucketInfo other = (GaugeBucketInfo) arg1;
                    this.startBucketElapsedNanos_ = visitor.visitLong(hasStartBucketElapsedNanos(), this.startBucketElapsedNanos_, other.hasStartBucketElapsedNanos(), other.startBucketElapsedNanos_);
                    this.endBucketElapsedNanos_ = visitor.visitLong(hasEndBucketElapsedNanos(), this.endBucketElapsedNanos_, other.hasEndBucketElapsedNanos(), other.endBucketElapsedNanos_);
                    this.atom_ = visitor.visitList(this.atom_, other.atom_);
                    this.elapsedTimestampNanos_ = visitor.visitLongList(this.elapsedTimestampNanos_, other.elapsedTimestampNanos_);
                    this.wallClockTimestampNanos_ = visitor.visitLongList(this.wallClockTimestampNanos_, other.wallClockTimestampNanos_);
                    this.bucketNum_ = visitor.visitLong(hasBucketNum(), this.bucketNum_, other.hasBucketNum(), other.bucketNum_);
                    this.startBucketElapsedMillis_ = visitor.visitLong(hasStartBucketElapsedMillis(), this.startBucketElapsedMillis_, other.hasStartBucketElapsedMillis(), other.startBucketElapsedMillis_);
                    this.endBucketElapsedMillis_ = visitor.visitLong(hasEndBucketElapsedMillis(), this.endBucketElapsedMillis_, other.hasEndBucketElapsedMillis(), other.endBucketElapsedMillis_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                case 8:
                                    this.bitField0_ |= 1;
                                    this.startBucketElapsedNanos_ = input.readInt64();
                                    break;
                                case 16:
                                    this.bitField0_ |= 2;
                                    this.endBucketElapsedNanos_ = input.readInt64();
                                    break;
                                case 26:
                                    if (!this.atom_.isModifiable()) {
                                        this.atom_ = GeneratedMessageLite.mutableCopy(this.atom_);
                                    }
                                    this.atom_.add((AtomsProto.Atom) input.readMessage(AtomsProto.Atom.parser(), extensionRegistry));
                                    break;
                                case 32:
                                    if (!this.elapsedTimestampNanos_.isModifiable()) {
                                        this.elapsedTimestampNanos_ = GeneratedMessageLite.mutableCopy(this.elapsedTimestampNanos_);
                                    }
                                    this.elapsedTimestampNanos_.addLong(input.readInt64());
                                    break;
                                case 34:
                                    int limit = input.pushLimit(input.readRawVarint32());
                                    if (!this.elapsedTimestampNanos_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        this.elapsedTimestampNanos_ = GeneratedMessageLite.mutableCopy(this.elapsedTimestampNanos_);
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        this.elapsedTimestampNanos_.addLong(input.readInt64());
                                    }
                                    input.popLimit(limit);
                                    break;
                                case 40:
                                    if (!this.wallClockTimestampNanos_.isModifiable()) {
                                        this.wallClockTimestampNanos_ = GeneratedMessageLite.mutableCopy(this.wallClockTimestampNanos_);
                                    }
                                    this.wallClockTimestampNanos_.addLong(input.readInt64());
                                    break;
                                case 42:
                                    int limit2 = input.pushLimit(input.readRawVarint32());
                                    if (!this.wallClockTimestampNanos_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        this.wallClockTimestampNanos_ = GeneratedMessageLite.mutableCopy(this.wallClockTimestampNanos_);
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        this.wallClockTimestampNanos_.addLong(input.readInt64());
                                    }
                                    input.popLimit(limit2);
                                    break;
                                case 48:
                                    this.bitField0_ |= 4;
                                    this.bucketNum_ = input.readInt64();
                                    break;
                                case 56:
                                    this.bitField0_ |= 8;
                                    this.startBucketElapsedMillis_ = input.readInt64();
                                    break;
                                case 64:
                                    this.bitField0_ |= 16;
                                    this.endBucketElapsedMillis_ = input.readInt64();
                                    break;
                                default:
                                    if (parseUnknownField(tag, input)) {
                                        break;
                                    } else {
                                        done = true;
                                        break;
                                    }
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (GaugeBucketInfo.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static GaugeBucketInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<GaugeBucketInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class GaugeMetricData extends GeneratedMessageLite<GaugeMetricData, Builder> implements GaugeMetricDataOrBuilder {
        public static final int BUCKET_INFO_FIELD_NUMBER = 3;
        private static final GaugeMetricData DEFAULT_INSTANCE = new GaugeMetricData();
        public static final int DIMENSIONS_IN_CONDITION_FIELD_NUMBER = 2;
        public static final int DIMENSIONS_IN_WHAT_FIELD_NUMBER = 1;
        public static final int DIMENSION_LEAF_VALUES_IN_CONDITION_FIELD_NUMBER = 5;
        public static final int DIMENSION_LEAF_VALUES_IN_WHAT_FIELD_NUMBER = 4;
        private static volatile Parser<GaugeMetricData> PARSER;
        private int bitField0_;
        private Internal.ProtobufList<GaugeBucketInfo> bucketInfo_ = emptyProtobufList();
        private Internal.ProtobufList<DimensionsValue> dimensionLeafValuesInCondition_ = emptyProtobufList();
        private Internal.ProtobufList<DimensionsValue> dimensionLeafValuesInWhat_ = emptyProtobufList();
        private DimensionsValue dimensionsInCondition_;
        private DimensionsValue dimensionsInWhat_;

        private GaugeMetricData() {
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public boolean hasDimensionsInWhat() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public DimensionsValue getDimensionsInWhat() {
            DimensionsValue dimensionsValue = this.dimensionsInWhat_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInWhat(DimensionsValue value) {
            if (value != null) {
                this.dimensionsInWhat_ = value;
                this.bitField0_ |= 1;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInWhat(DimensionsValue.Builder builderForValue) {
            this.dimensionsInWhat_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsInWhat(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsInWhat_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsInWhat_ = value;
            } else {
                this.dimensionsInWhat_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsInWhat_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsInWhat() {
            this.dimensionsInWhat_ = null;
            this.bitField0_ &= -2;
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public boolean hasDimensionsInCondition() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public DimensionsValue getDimensionsInCondition() {
            DimensionsValue dimensionsValue = this.dimensionsInCondition_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInCondition(DimensionsValue value) {
            if (value != null) {
                this.dimensionsInCondition_ = value;
                this.bitField0_ |= 2;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsInCondition(DimensionsValue.Builder builderForValue) {
            this.dimensionsInCondition_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsInCondition(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsInCondition_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsInCondition_ = value;
            } else {
                this.dimensionsInCondition_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsInCondition_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsInCondition() {
            this.dimensionsInCondition_ = null;
            this.bitField0_ &= -3;
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public List<GaugeBucketInfo> getBucketInfoList() {
            return this.bucketInfo_;
        }

        public List<? extends GaugeBucketInfoOrBuilder> getBucketInfoOrBuilderList() {
            return this.bucketInfo_;
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public int getBucketInfoCount() {
            return this.bucketInfo_.size();
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public GaugeBucketInfo getBucketInfo(int index) {
            return this.bucketInfo_.get(index);
        }

        public GaugeBucketInfoOrBuilder getBucketInfoOrBuilder(int index) {
            return this.bucketInfo_.get(index);
        }

        private void ensureBucketInfoIsMutable() {
            if (!this.bucketInfo_.isModifiable()) {
                this.bucketInfo_ = GeneratedMessageLite.mutableCopy(this.bucketInfo_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketInfo(int index, GaugeBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketInfo(int index, GaugeBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.set(index, (GaugeBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(GaugeBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(int index, GaugeBucketInfo value) {
            if (value != null) {
                ensureBucketInfoIsMutable();
                this.bucketInfo_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(GaugeBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.add((GaugeBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addBucketInfo(int index, GaugeBucketInfo.Builder builderForValue) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.add(index, (GaugeBucketInfo) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllBucketInfo(Iterable<? extends GaugeBucketInfo> values) {
            ensureBucketInfoIsMutable();
            AbstractMessageLite.addAll(values, this.bucketInfo_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearBucketInfo() {
            this.bucketInfo_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeBucketInfo(int index) {
            ensureBucketInfoIsMutable();
            this.bucketInfo_.remove(index);
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public List<DimensionsValue> getDimensionLeafValuesInWhatList() {
            return this.dimensionLeafValuesInWhat_;
        }

        public List<? extends DimensionsValueOrBuilder> getDimensionLeafValuesInWhatOrBuilderList() {
            return this.dimensionLeafValuesInWhat_;
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public int getDimensionLeafValuesInWhatCount() {
            return this.dimensionLeafValuesInWhat_.size();
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public DimensionsValue getDimensionLeafValuesInWhat(int index) {
            return this.dimensionLeafValuesInWhat_.get(index);
        }

        public DimensionsValueOrBuilder getDimensionLeafValuesInWhatOrBuilder(int index) {
            return this.dimensionLeafValuesInWhat_.get(index);
        }

        private void ensureDimensionLeafValuesInWhatIsMutable() {
            if (!this.dimensionLeafValuesInWhat_.isModifiable()) {
                this.dimensionLeafValuesInWhat_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInWhat_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInWhat(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.set(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInWhatIsMutable();
                this.dimensionLeafValuesInWhat_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.add((DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.add(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDimensionLeafValuesInWhat(Iterable<? extends DimensionsValue> values) {
            ensureDimensionLeafValuesInWhatIsMutable();
            AbstractMessageLite.addAll(values, this.dimensionLeafValuesInWhat_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionLeafValuesInWhat() {
            this.dimensionLeafValuesInWhat_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDimensionLeafValuesInWhat(int index) {
            ensureDimensionLeafValuesInWhatIsMutable();
            this.dimensionLeafValuesInWhat_.remove(index);
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public List<DimensionsValue> getDimensionLeafValuesInConditionList() {
            return this.dimensionLeafValuesInCondition_;
        }

        public List<? extends DimensionsValueOrBuilder> getDimensionLeafValuesInConditionOrBuilderList() {
            return this.dimensionLeafValuesInCondition_;
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public int getDimensionLeafValuesInConditionCount() {
            return this.dimensionLeafValuesInCondition_.size();
        }

        @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
        public DimensionsValue getDimensionLeafValuesInCondition(int index) {
            return this.dimensionLeafValuesInCondition_.get(index);
        }

        public DimensionsValueOrBuilder getDimensionLeafValuesInConditionOrBuilder(int index) {
            return this.dimensionLeafValuesInCondition_.get(index);
        }

        private void ensureDimensionLeafValuesInConditionIsMutable() {
            if (!this.dimensionLeafValuesInCondition_.isModifiable()) {
                this.dimensionLeafValuesInCondition_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInCondition_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInCondition(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.set(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(int index, DimensionsValue value) {
            if (value != null) {
                ensureDimensionLeafValuesInConditionIsMutable();
                this.dimensionLeafValuesInCondition_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.add((DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.add(index, (DimensionsValue) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDimensionLeafValuesInCondition(Iterable<? extends DimensionsValue> values) {
            ensureDimensionLeafValuesInConditionIsMutable();
            AbstractMessageLite.addAll(values, this.dimensionLeafValuesInCondition_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionLeafValuesInCondition() {
            this.dimensionLeafValuesInCondition_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDimensionLeafValuesInCondition(int index) {
            ensureDimensionLeafValuesInConditionIsMutable();
            this.dimensionLeafValuesInCondition_.remove(index);
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeMessage(1, getDimensionsInWhat());
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeMessage(2, getDimensionsInCondition());
            }
            for (int i = 0; i < this.bucketInfo_.size(); i++) {
                output.writeMessage(3, this.bucketInfo_.get(i));
            }
            for (int i2 = 0; i2 < this.dimensionLeafValuesInWhat_.size(); i2++) {
                output.writeMessage(4, this.dimensionLeafValuesInWhat_.get(i2));
            }
            for (int i3 = 0; i3 < this.dimensionLeafValuesInCondition_.size(); i3++) {
                output.writeMessage(5, this.dimensionLeafValuesInCondition_.get(i3));
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeMessageSize(1, getDimensionsInWhat());
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeMessageSize(2, getDimensionsInCondition());
            }
            for (int i = 0; i < this.bucketInfo_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(3, this.bucketInfo_.get(i));
            }
            for (int i2 = 0; i2 < this.dimensionLeafValuesInWhat_.size(); i2++) {
                size2 += CodedOutputStream.computeMessageSize(4, this.dimensionLeafValuesInWhat_.get(i2));
            }
            for (int i3 = 0; i3 < this.dimensionLeafValuesInCondition_.size(); i3++) {
                size2 += CodedOutputStream.computeMessageSize(5, this.dimensionLeafValuesInCondition_.get(i3));
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static GaugeMetricData parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (GaugeMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static GaugeMetricData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GaugeMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static GaugeMetricData parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (GaugeMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static GaugeMetricData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (GaugeMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static GaugeMetricData parseFrom(InputStream input) throws IOException {
            return (GaugeMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static GaugeMetricData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GaugeMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static GaugeMetricData parseDelimitedFrom(InputStream input) throws IOException {
            return (GaugeMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static GaugeMetricData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GaugeMetricData) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static GaugeMetricData parseFrom(CodedInputStream input) throws IOException {
            return (GaugeMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static GaugeMetricData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (GaugeMetricData) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(GaugeMetricData prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<GaugeMetricData, Builder> implements GaugeMetricDataOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(GaugeMetricData.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public boolean hasDimensionsInWhat() {
                return ((GaugeMetricData) this.instance).hasDimensionsInWhat();
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public DimensionsValue getDimensionsInWhat() {
                return ((GaugeMetricData) this.instance).getDimensionsInWhat();
            }

            public Builder setDimensionsInWhat(DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setDimensionsInWhat((GaugeMetricData) value);
                return this;
            }

            public Builder setDimensionsInWhat(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setDimensionsInWhat((GaugeMetricData) builderForValue);
                return this;
            }

            public Builder mergeDimensionsInWhat(DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).mergeDimensionsInWhat(value);
                return this;
            }

            public Builder clearDimensionsInWhat() {
                copyOnWrite();
                ((GaugeMetricData) this.instance).clearDimensionsInWhat();
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public boolean hasDimensionsInCondition() {
                return ((GaugeMetricData) this.instance).hasDimensionsInCondition();
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public DimensionsValue getDimensionsInCondition() {
                return ((GaugeMetricData) this.instance).getDimensionsInCondition();
            }

            public Builder setDimensionsInCondition(DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setDimensionsInCondition((GaugeMetricData) value);
                return this;
            }

            public Builder setDimensionsInCondition(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setDimensionsInCondition((GaugeMetricData) builderForValue);
                return this;
            }

            public Builder mergeDimensionsInCondition(DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).mergeDimensionsInCondition(value);
                return this;
            }

            public Builder clearDimensionsInCondition() {
                copyOnWrite();
                ((GaugeMetricData) this.instance).clearDimensionsInCondition();
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public List<GaugeBucketInfo> getBucketInfoList() {
                return Collections.unmodifiableList(((GaugeMetricData) this.instance).getBucketInfoList());
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public int getBucketInfoCount() {
                return ((GaugeMetricData) this.instance).getBucketInfoCount();
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public GaugeBucketInfo getBucketInfo(int index) {
                return ((GaugeMetricData) this.instance).getBucketInfo(index);
            }

            public Builder setBucketInfo(int index, GaugeBucketInfo value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setBucketInfo((GaugeMetricData) index, (int) value);
                return this;
            }

            public Builder setBucketInfo(int index, GaugeBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setBucketInfo((GaugeMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addBucketInfo(GaugeBucketInfo value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addBucketInfo((GaugeMetricData) value);
                return this;
            }

            public Builder addBucketInfo(int index, GaugeBucketInfo value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addBucketInfo((GaugeMetricData) index, (int) value);
                return this;
            }

            public Builder addBucketInfo(GaugeBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addBucketInfo((GaugeMetricData) builderForValue);
                return this;
            }

            public Builder addBucketInfo(int index, GaugeBucketInfo.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addBucketInfo((GaugeMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllBucketInfo(Iterable<? extends GaugeBucketInfo> values) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addAllBucketInfo(values);
                return this;
            }

            public Builder clearBucketInfo() {
                copyOnWrite();
                ((GaugeMetricData) this.instance).clearBucketInfo();
                return this;
            }

            public Builder removeBucketInfo(int index) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).removeBucketInfo(index);
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public List<DimensionsValue> getDimensionLeafValuesInWhatList() {
                return Collections.unmodifiableList(((GaugeMetricData) this.instance).getDimensionLeafValuesInWhatList());
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public int getDimensionLeafValuesInWhatCount() {
                return ((GaugeMetricData) this.instance).getDimensionLeafValuesInWhatCount();
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public DimensionsValue getDimensionLeafValuesInWhat(int index) {
                return ((GaugeMetricData) this.instance).getDimensionLeafValuesInWhat(index);
            }

            public Builder setDimensionLeafValuesInWhat(int index, DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setDimensionLeafValuesInWhat((GaugeMetricData) index, (int) value);
                return this;
            }

            public Builder setDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setDimensionLeafValuesInWhat((GaugeMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addDimensionLeafValuesInWhat((GaugeMetricData) value);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(int index, DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addDimensionLeafValuesInWhat((GaugeMetricData) index, (int) value);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addDimensionLeafValuesInWhat((GaugeMetricData) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInWhat(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addDimensionLeafValuesInWhat((GaugeMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDimensionLeafValuesInWhat(Iterable<? extends DimensionsValue> values) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addAllDimensionLeafValuesInWhat(values);
                return this;
            }

            public Builder clearDimensionLeafValuesInWhat() {
                copyOnWrite();
                ((GaugeMetricData) this.instance).clearDimensionLeafValuesInWhat();
                return this;
            }

            public Builder removeDimensionLeafValuesInWhat(int index) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).removeDimensionLeafValuesInWhat(index);
                return this;
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public List<DimensionsValue> getDimensionLeafValuesInConditionList() {
                return Collections.unmodifiableList(((GaugeMetricData) this.instance).getDimensionLeafValuesInConditionList());
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public int getDimensionLeafValuesInConditionCount() {
                return ((GaugeMetricData) this.instance).getDimensionLeafValuesInConditionCount();
            }

            @Override // com.android.os.StatsLog.GaugeMetricDataOrBuilder
            public DimensionsValue getDimensionLeafValuesInCondition(int index) {
                return ((GaugeMetricData) this.instance).getDimensionLeafValuesInCondition(index);
            }

            public Builder setDimensionLeafValuesInCondition(int index, DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setDimensionLeafValuesInCondition((GaugeMetricData) index, (int) value);
                return this;
            }

            public Builder setDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).setDimensionLeafValuesInCondition((GaugeMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addDimensionLeafValuesInCondition((GaugeMetricData) value);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(int index, DimensionsValue value) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addDimensionLeafValuesInCondition((GaugeMetricData) index, (int) value);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addDimensionLeafValuesInCondition((GaugeMetricData) builderForValue);
                return this;
            }

            public Builder addDimensionLeafValuesInCondition(int index, DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addDimensionLeafValuesInCondition((GaugeMetricData) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDimensionLeafValuesInCondition(Iterable<? extends DimensionsValue> values) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).addAllDimensionLeafValuesInCondition(values);
                return this;
            }

            public Builder clearDimensionLeafValuesInCondition() {
                copyOnWrite();
                ((GaugeMetricData) this.instance).clearDimensionLeafValuesInCondition();
                return this;
            }

            public Builder removeDimensionLeafValuesInCondition(int index) {
                copyOnWrite();
                ((GaugeMetricData) this.instance).removeDimensionLeafValuesInCondition(index);
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new GaugeMetricData();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.bucketInfo_.makeImmutable();
                    this.dimensionLeafValuesInWhat_.makeImmutable();
                    this.dimensionLeafValuesInCondition_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    GaugeMetricData other = (GaugeMetricData) arg1;
                    this.dimensionsInWhat_ = (DimensionsValue) visitor.visitMessage(this.dimensionsInWhat_, other.dimensionsInWhat_);
                    this.dimensionsInCondition_ = (DimensionsValue) visitor.visitMessage(this.dimensionsInCondition_, other.dimensionsInCondition_);
                    this.bucketInfo_ = visitor.visitList(this.bucketInfo_, other.bucketInfo_);
                    this.dimensionLeafValuesInWhat_ = visitor.visitList(this.dimensionLeafValuesInWhat_, other.dimensionLeafValuesInWhat_);
                    this.dimensionLeafValuesInCondition_ = visitor.visitList(this.dimensionLeafValuesInCondition_, other.dimensionLeafValuesInCondition_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 10) {
                                DimensionsValue.Builder subBuilder = null;
                                if ((this.bitField0_ & 1) == 1) {
                                    subBuilder = (DimensionsValue.Builder) this.dimensionsInWhat_.toBuilder();
                                }
                                this.dimensionsInWhat_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom((GeneratedMessageLite) this.dimensionsInWhat_);
                                    this.dimensionsInWhat_ = (DimensionsValue) subBuilder.buildPartial();
                                }
                                this.bitField0_ |= 1;
                            } else if (tag == 18) {
                                DimensionsValue.Builder subBuilder2 = null;
                                if ((this.bitField0_ & 2) == 2) {
                                    subBuilder2 = (DimensionsValue.Builder) this.dimensionsInCondition_.toBuilder();
                                }
                                this.dimensionsInCondition_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                if (subBuilder2 != null) {
                                    subBuilder2.mergeFrom((GeneratedMessageLite) this.dimensionsInCondition_);
                                    this.dimensionsInCondition_ = (DimensionsValue) subBuilder2.buildPartial();
                                }
                                this.bitField0_ |= 2;
                            } else if (tag == 26) {
                                if (!this.bucketInfo_.isModifiable()) {
                                    this.bucketInfo_ = GeneratedMessageLite.mutableCopy(this.bucketInfo_);
                                }
                                this.bucketInfo_.add((GaugeBucketInfo) input.readMessage(GaugeBucketInfo.parser(), extensionRegistry));
                            } else if (tag == 34) {
                                if (!this.dimensionLeafValuesInWhat_.isModifiable()) {
                                    this.dimensionLeafValuesInWhat_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInWhat_);
                                }
                                this.dimensionLeafValuesInWhat_.add((DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry));
                            } else if (tag == 42) {
                                if (!this.dimensionLeafValuesInCondition_.isModifiable()) {
                                    this.dimensionLeafValuesInCondition_ = GeneratedMessageLite.mutableCopy(this.dimensionLeafValuesInCondition_);
                                }
                                this.dimensionLeafValuesInCondition_.add((DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry));
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (GaugeMetricData.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static GaugeMetricData getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<GaugeMetricData> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class StatsLogReport extends GeneratedMessageLite<StatsLogReport, Builder> implements StatsLogReportOrBuilder {
        public static final int BUCKET_SIZE_NANO_SECONDS_FIELD_NUMBER = 10;
        public static final int COUNT_METRICS_FIELD_NUMBER = 5;
        private static final StatsLogReport DEFAULT_INSTANCE = new StatsLogReport();
        public static final int DIMENSIONS_PATH_IN_CONDITION_FIELD_NUMBER = 12;
        public static final int DIMENSIONS_PATH_IN_WHAT_FIELD_NUMBER = 11;
        public static final int DURATION_METRICS_FIELD_NUMBER = 6;
        public static final int EVENT_METRICS_FIELD_NUMBER = 4;
        public static final int GAUGE_METRICS_FIELD_NUMBER = 8;
        public static final int IS_ACTIVE_FIELD_NUMBER = 14;
        public static final int METRIC_ID_FIELD_NUMBER = 1;
        private static volatile Parser<StatsLogReport> PARSER = null;
        public static final int TIME_BASE_ELAPSED_NANO_SECONDS_FIELD_NUMBER = 9;
        public static final int VALUE_METRICS_FIELD_NUMBER = 7;
        private int bitField0_;
        private long bucketSizeNanoSeconds_ = 0;
        private int dataCase_ = 0;
        private Object data_;
        private DimensionsValue dimensionsPathInCondition_;
        private DimensionsValue dimensionsPathInWhat_;
        private boolean isActive_ = false;
        private long metricId_ = 0;
        private long timeBaseElapsedNanoSeconds_ = 0;

        public interface CountMetricDataWrapperOrBuilder extends MessageLiteOrBuilder {
            CountMetricData getData(int i);

            int getDataCount();

            List<CountMetricData> getDataList();
        }

        public interface DurationMetricDataWrapperOrBuilder extends MessageLiteOrBuilder {
            DurationMetricData getData(int i);

            int getDataCount();

            List<DurationMetricData> getDataList();
        }

        public interface EventMetricDataWrapperOrBuilder extends MessageLiteOrBuilder {
            EventMetricData getData(int i);

            int getDataCount();

            List<EventMetricData> getDataList();
        }

        public interface GaugeMetricDataWrapperOrBuilder extends MessageLiteOrBuilder {
            GaugeMetricData getData(int i);

            int getDataCount();

            List<GaugeMetricData> getDataList();

            SkippedBuckets getSkipped(int i);

            int getSkippedCount();

            List<SkippedBuckets> getSkippedList();
        }

        public interface SkippedBucketsOrBuilder extends MessageLiteOrBuilder {
            long getEndBucketElapsedMillis();

            long getEndBucketElapsedNanos();

            long getStartBucketElapsedMillis();

            long getStartBucketElapsedNanos();

            boolean hasEndBucketElapsedMillis();

            boolean hasEndBucketElapsedNanos();

            boolean hasStartBucketElapsedMillis();

            boolean hasStartBucketElapsedNanos();
        }

        public interface ValueMetricDataWrapperOrBuilder extends MessageLiteOrBuilder {
            ValueMetricData getData(int i);

            int getDataCount();

            List<ValueMetricData> getDataList();

            SkippedBuckets getSkipped(int i);

            int getSkippedCount();

            List<SkippedBuckets> getSkippedList();
        }

        private StatsLogReport() {
        }

        public static final class SkippedBuckets extends GeneratedMessageLite<SkippedBuckets, Builder> implements SkippedBucketsOrBuilder {
            private static final SkippedBuckets DEFAULT_INSTANCE = new SkippedBuckets();
            public static final int END_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 4;
            public static final int END_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 2;
            private static volatile Parser<SkippedBuckets> PARSER = null;
            public static final int START_BUCKET_ELAPSED_MILLIS_FIELD_NUMBER = 3;
            public static final int START_BUCKET_ELAPSED_NANOS_FIELD_NUMBER = 1;
            private int bitField0_;
            private long endBucketElapsedMillis_ = 0;
            private long endBucketElapsedNanos_ = 0;
            private long startBucketElapsedMillis_ = 0;
            private long startBucketElapsedNanos_ = 0;

            private SkippedBuckets() {
            }

            @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
            public boolean hasStartBucketElapsedNanos() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
            public long getStartBucketElapsedNanos() {
                return this.startBucketElapsedNanos_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setStartBucketElapsedNanos(long value) {
                this.bitField0_ |= 1;
                this.startBucketElapsedNanos_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearStartBucketElapsedNanos() {
                this.bitField0_ &= -2;
                this.startBucketElapsedNanos_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
            public boolean hasEndBucketElapsedNanos() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
            public long getEndBucketElapsedNanos() {
                return this.endBucketElapsedNanos_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setEndBucketElapsedNanos(long value) {
                this.bitField0_ |= 2;
                this.endBucketElapsedNanos_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearEndBucketElapsedNanos() {
                this.bitField0_ &= -3;
                this.endBucketElapsedNanos_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
            public boolean hasStartBucketElapsedMillis() {
                return (this.bitField0_ & 4) == 4;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
            public long getStartBucketElapsedMillis() {
                return this.startBucketElapsedMillis_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setStartBucketElapsedMillis(long value) {
                this.bitField0_ |= 4;
                this.startBucketElapsedMillis_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearStartBucketElapsedMillis() {
                this.bitField0_ &= -5;
                this.startBucketElapsedMillis_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
            public boolean hasEndBucketElapsedMillis() {
                return (this.bitField0_ & 8) == 8;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
            public long getEndBucketElapsedMillis() {
                return this.endBucketElapsedMillis_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setEndBucketElapsedMillis(long value) {
                this.bitField0_ |= 8;
                this.endBucketElapsedMillis_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearEndBucketElapsedMillis() {
                this.bitField0_ &= -9;
                this.endBucketElapsedMillis_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt64(1, this.startBucketElapsedNanos_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt64(2, this.endBucketElapsedNanos_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    output.writeInt64(3, this.startBucketElapsedMillis_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    output.writeInt64(4, this.endBucketElapsedMillis_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt64Size(1, this.startBucketElapsedNanos_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt64Size(2, this.endBucketElapsedNanos_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    size2 += CodedOutputStream.computeInt64Size(3, this.startBucketElapsedMillis_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    size2 += CodedOutputStream.computeInt64Size(4, this.endBucketElapsedMillis_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static SkippedBuckets parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (SkippedBuckets) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static SkippedBuckets parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (SkippedBuckets) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static SkippedBuckets parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (SkippedBuckets) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static SkippedBuckets parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (SkippedBuckets) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static SkippedBuckets parseFrom(InputStream input) throws IOException {
                return (SkippedBuckets) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static SkippedBuckets parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (SkippedBuckets) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static SkippedBuckets parseDelimitedFrom(InputStream input) throws IOException {
                return (SkippedBuckets) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static SkippedBuckets parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (SkippedBuckets) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static SkippedBuckets parseFrom(CodedInputStream input) throws IOException {
                return (SkippedBuckets) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static SkippedBuckets parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (SkippedBuckets) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(SkippedBuckets prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<SkippedBuckets, Builder> implements SkippedBucketsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(SkippedBuckets.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
                public boolean hasStartBucketElapsedNanos() {
                    return ((SkippedBuckets) this.instance).hasStartBucketElapsedNanos();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
                public long getStartBucketElapsedNanos() {
                    return ((SkippedBuckets) this.instance).getStartBucketElapsedNanos();
                }

                public Builder setStartBucketElapsedNanos(long value) {
                    copyOnWrite();
                    ((SkippedBuckets) this.instance).setStartBucketElapsedNanos(value);
                    return this;
                }

                public Builder clearStartBucketElapsedNanos() {
                    copyOnWrite();
                    ((SkippedBuckets) this.instance).clearStartBucketElapsedNanos();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
                public boolean hasEndBucketElapsedNanos() {
                    return ((SkippedBuckets) this.instance).hasEndBucketElapsedNanos();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
                public long getEndBucketElapsedNanos() {
                    return ((SkippedBuckets) this.instance).getEndBucketElapsedNanos();
                }

                public Builder setEndBucketElapsedNanos(long value) {
                    copyOnWrite();
                    ((SkippedBuckets) this.instance).setEndBucketElapsedNanos(value);
                    return this;
                }

                public Builder clearEndBucketElapsedNanos() {
                    copyOnWrite();
                    ((SkippedBuckets) this.instance).clearEndBucketElapsedNanos();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
                public boolean hasStartBucketElapsedMillis() {
                    return ((SkippedBuckets) this.instance).hasStartBucketElapsedMillis();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
                public long getStartBucketElapsedMillis() {
                    return ((SkippedBuckets) this.instance).getStartBucketElapsedMillis();
                }

                public Builder setStartBucketElapsedMillis(long value) {
                    copyOnWrite();
                    ((SkippedBuckets) this.instance).setStartBucketElapsedMillis(value);
                    return this;
                }

                public Builder clearStartBucketElapsedMillis() {
                    copyOnWrite();
                    ((SkippedBuckets) this.instance).clearStartBucketElapsedMillis();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
                public boolean hasEndBucketElapsedMillis() {
                    return ((SkippedBuckets) this.instance).hasEndBucketElapsedMillis();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.SkippedBucketsOrBuilder
                public long getEndBucketElapsedMillis() {
                    return ((SkippedBuckets) this.instance).getEndBucketElapsedMillis();
                }

                public Builder setEndBucketElapsedMillis(long value) {
                    copyOnWrite();
                    ((SkippedBuckets) this.instance).setEndBucketElapsedMillis(value);
                    return this;
                }

                public Builder clearEndBucketElapsedMillis() {
                    copyOnWrite();
                    ((SkippedBuckets) this.instance).clearEndBucketElapsedMillis();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new SkippedBuckets();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        SkippedBuckets other = (SkippedBuckets) arg1;
                        this.startBucketElapsedNanos_ = visitor.visitLong(hasStartBucketElapsedNanos(), this.startBucketElapsedNanos_, other.hasStartBucketElapsedNanos(), other.startBucketElapsedNanos_);
                        this.endBucketElapsedNanos_ = visitor.visitLong(hasEndBucketElapsedNanos(), this.endBucketElapsedNanos_, other.hasEndBucketElapsedNanos(), other.endBucketElapsedNanos_);
                        this.startBucketElapsedMillis_ = visitor.visitLong(hasStartBucketElapsedMillis(), this.startBucketElapsedMillis_, other.hasStartBucketElapsedMillis(), other.startBucketElapsedMillis_);
                        this.endBucketElapsedMillis_ = visitor.visitLong(hasEndBucketElapsedMillis(), this.endBucketElapsedMillis_, other.hasEndBucketElapsedMillis(), other.endBucketElapsedMillis_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.startBucketElapsedNanos_ = input.readInt64();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.endBucketElapsedNanos_ = input.readInt64();
                                } else if (tag == 24) {
                                    this.bitField0_ |= 4;
                                    this.startBucketElapsedMillis_ = input.readInt64();
                                } else if (tag == 32) {
                                    this.bitField0_ = 8 | this.bitField0_;
                                    this.endBucketElapsedMillis_ = input.readInt64();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (SkippedBuckets.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static SkippedBuckets getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<SkippedBuckets> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class EventMetricDataWrapper extends GeneratedMessageLite<EventMetricDataWrapper, Builder> implements EventMetricDataWrapperOrBuilder {
            public static final int DATA_FIELD_NUMBER = 1;
            private static final EventMetricDataWrapper DEFAULT_INSTANCE = new EventMetricDataWrapper();
            private static volatile Parser<EventMetricDataWrapper> PARSER;
            private Internal.ProtobufList<EventMetricData> data_ = emptyProtobufList();

            private EventMetricDataWrapper() {
            }

            @Override // com.android.os.StatsLog.StatsLogReport.EventMetricDataWrapperOrBuilder
            public List<EventMetricData> getDataList() {
                return this.data_;
            }

            public List<? extends EventMetricDataOrBuilder> getDataOrBuilderList() {
                return this.data_;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.EventMetricDataWrapperOrBuilder
            public int getDataCount() {
                return this.data_.size();
            }

            @Override // com.android.os.StatsLog.StatsLogReport.EventMetricDataWrapperOrBuilder
            public EventMetricData getData(int index) {
                return this.data_.get(index);
            }

            public EventMetricDataOrBuilder getDataOrBuilder(int index) {
                return this.data_.get(index);
            }

            private void ensureDataIsMutable() {
                if (!this.data_.isModifiable()) {
                    this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, EventMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, EventMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.set(index, (EventMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(EventMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, EventMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(EventMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add((EventMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, EventMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add(index, (EventMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllData(Iterable<? extends EventMetricData> values) {
                ensureDataIsMutable();
                AbstractMessageLite.addAll(values, this.data_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearData() {
                this.data_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeData(int index) {
                ensureDataIsMutable();
                this.data_.remove(index);
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                for (int i = 0; i < this.data_.size(); i++) {
                    output.writeMessage(1, this.data_.get(i));
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                for (int i = 0; i < this.data_.size(); i++) {
                    size2 += CodedOutputStream.computeMessageSize(1, this.data_.get(i));
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static EventMetricDataWrapper parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (EventMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static EventMetricDataWrapper parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (EventMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static EventMetricDataWrapper parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (EventMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static EventMetricDataWrapper parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (EventMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static EventMetricDataWrapper parseFrom(InputStream input) throws IOException {
                return (EventMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static EventMetricDataWrapper parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (EventMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static EventMetricDataWrapper parseDelimitedFrom(InputStream input) throws IOException {
                return (EventMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static EventMetricDataWrapper parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (EventMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static EventMetricDataWrapper parseFrom(CodedInputStream input) throws IOException {
                return (EventMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static EventMetricDataWrapper parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (EventMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(EventMetricDataWrapper prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<EventMetricDataWrapper, Builder> implements EventMetricDataWrapperOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(EventMetricDataWrapper.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsLogReport.EventMetricDataWrapperOrBuilder
                public List<EventMetricData> getDataList() {
                    return Collections.unmodifiableList(((EventMetricDataWrapper) this.instance).getDataList());
                }

                @Override // com.android.os.StatsLog.StatsLogReport.EventMetricDataWrapperOrBuilder
                public int getDataCount() {
                    return ((EventMetricDataWrapper) this.instance).getDataCount();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.EventMetricDataWrapperOrBuilder
                public EventMetricData getData(int index) {
                    return ((EventMetricDataWrapper) this.instance).getData(index);
                }

                public Builder setData(int index, EventMetricData value) {
                    copyOnWrite();
                    ((EventMetricDataWrapper) this.instance).setData((EventMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder setData(int index, EventMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((EventMetricDataWrapper) this.instance).setData((EventMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addData(EventMetricData value) {
                    copyOnWrite();
                    ((EventMetricDataWrapper) this.instance).addData((EventMetricDataWrapper) value);
                    return this;
                }

                public Builder addData(int index, EventMetricData value) {
                    copyOnWrite();
                    ((EventMetricDataWrapper) this.instance).addData((EventMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder addData(EventMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((EventMetricDataWrapper) this.instance).addData((EventMetricDataWrapper) builderForValue);
                    return this;
                }

                public Builder addData(int index, EventMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((EventMetricDataWrapper) this.instance).addData((EventMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllData(Iterable<? extends EventMetricData> values) {
                    copyOnWrite();
                    ((EventMetricDataWrapper) this.instance).addAllData(values);
                    return this;
                }

                public Builder clearData() {
                    copyOnWrite();
                    ((EventMetricDataWrapper) this.instance).clearData();
                    return this;
                }

                public Builder removeData(int index) {
                    copyOnWrite();
                    ((EventMetricDataWrapper) this.instance).removeData(index);
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new EventMetricDataWrapper();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        this.data_.makeImmutable();
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        this.data_ = ((GeneratedMessageLite.Visitor) arg0).visitList(this.data_, ((EventMetricDataWrapper) arg1).data_);
                        GeneratedMessageLite.MergeFromVisitor mergeFromVisitor = GeneratedMessageLite.MergeFromVisitor.INSTANCE;
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 10) {
                                    if (!this.data_.isModifiable()) {
                                        this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                                    }
                                    this.data_.add((EventMetricData) input.readMessage(EventMetricData.parser(), extensionRegistry));
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (EventMetricDataWrapper.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static EventMetricDataWrapper getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<EventMetricDataWrapper> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class CountMetricDataWrapper extends GeneratedMessageLite<CountMetricDataWrapper, Builder> implements CountMetricDataWrapperOrBuilder {
            public static final int DATA_FIELD_NUMBER = 1;
            private static final CountMetricDataWrapper DEFAULT_INSTANCE = new CountMetricDataWrapper();
            private static volatile Parser<CountMetricDataWrapper> PARSER;
            private Internal.ProtobufList<CountMetricData> data_ = emptyProtobufList();

            private CountMetricDataWrapper() {
            }

            @Override // com.android.os.StatsLog.StatsLogReport.CountMetricDataWrapperOrBuilder
            public List<CountMetricData> getDataList() {
                return this.data_;
            }

            public List<? extends CountMetricDataOrBuilder> getDataOrBuilderList() {
                return this.data_;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.CountMetricDataWrapperOrBuilder
            public int getDataCount() {
                return this.data_.size();
            }

            @Override // com.android.os.StatsLog.StatsLogReport.CountMetricDataWrapperOrBuilder
            public CountMetricData getData(int index) {
                return this.data_.get(index);
            }

            public CountMetricDataOrBuilder getDataOrBuilder(int index) {
                return this.data_.get(index);
            }

            private void ensureDataIsMutable() {
                if (!this.data_.isModifiable()) {
                    this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, CountMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, CountMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.set(index, (CountMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(CountMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, CountMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(CountMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add((CountMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, CountMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add(index, (CountMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllData(Iterable<? extends CountMetricData> values) {
                ensureDataIsMutable();
                AbstractMessageLite.addAll(values, this.data_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearData() {
                this.data_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeData(int index) {
                ensureDataIsMutable();
                this.data_.remove(index);
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                for (int i = 0; i < this.data_.size(); i++) {
                    output.writeMessage(1, this.data_.get(i));
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                for (int i = 0; i < this.data_.size(); i++) {
                    size2 += CodedOutputStream.computeMessageSize(1, this.data_.get(i));
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static CountMetricDataWrapper parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (CountMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static CountMetricDataWrapper parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (CountMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static CountMetricDataWrapper parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (CountMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static CountMetricDataWrapper parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (CountMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static CountMetricDataWrapper parseFrom(InputStream input) throws IOException {
                return (CountMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static CountMetricDataWrapper parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (CountMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static CountMetricDataWrapper parseDelimitedFrom(InputStream input) throws IOException {
                return (CountMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static CountMetricDataWrapper parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (CountMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static CountMetricDataWrapper parseFrom(CodedInputStream input) throws IOException {
                return (CountMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static CountMetricDataWrapper parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (CountMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(CountMetricDataWrapper prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<CountMetricDataWrapper, Builder> implements CountMetricDataWrapperOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(CountMetricDataWrapper.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsLogReport.CountMetricDataWrapperOrBuilder
                public List<CountMetricData> getDataList() {
                    return Collections.unmodifiableList(((CountMetricDataWrapper) this.instance).getDataList());
                }

                @Override // com.android.os.StatsLog.StatsLogReport.CountMetricDataWrapperOrBuilder
                public int getDataCount() {
                    return ((CountMetricDataWrapper) this.instance).getDataCount();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.CountMetricDataWrapperOrBuilder
                public CountMetricData getData(int index) {
                    return ((CountMetricDataWrapper) this.instance).getData(index);
                }

                public Builder setData(int index, CountMetricData value) {
                    copyOnWrite();
                    ((CountMetricDataWrapper) this.instance).setData((CountMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder setData(int index, CountMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((CountMetricDataWrapper) this.instance).setData((CountMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addData(CountMetricData value) {
                    copyOnWrite();
                    ((CountMetricDataWrapper) this.instance).addData((CountMetricDataWrapper) value);
                    return this;
                }

                public Builder addData(int index, CountMetricData value) {
                    copyOnWrite();
                    ((CountMetricDataWrapper) this.instance).addData((CountMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder addData(CountMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((CountMetricDataWrapper) this.instance).addData((CountMetricDataWrapper) builderForValue);
                    return this;
                }

                public Builder addData(int index, CountMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((CountMetricDataWrapper) this.instance).addData((CountMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllData(Iterable<? extends CountMetricData> values) {
                    copyOnWrite();
                    ((CountMetricDataWrapper) this.instance).addAllData(values);
                    return this;
                }

                public Builder clearData() {
                    copyOnWrite();
                    ((CountMetricDataWrapper) this.instance).clearData();
                    return this;
                }

                public Builder removeData(int index) {
                    copyOnWrite();
                    ((CountMetricDataWrapper) this.instance).removeData(index);
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new CountMetricDataWrapper();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        this.data_.makeImmutable();
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        this.data_ = ((GeneratedMessageLite.Visitor) arg0).visitList(this.data_, ((CountMetricDataWrapper) arg1).data_);
                        GeneratedMessageLite.MergeFromVisitor mergeFromVisitor = GeneratedMessageLite.MergeFromVisitor.INSTANCE;
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 10) {
                                    if (!this.data_.isModifiable()) {
                                        this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                                    }
                                    this.data_.add((CountMetricData) input.readMessage(CountMetricData.parser(), extensionRegistry));
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (CountMetricDataWrapper.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static CountMetricDataWrapper getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<CountMetricDataWrapper> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class DurationMetricDataWrapper extends GeneratedMessageLite<DurationMetricDataWrapper, Builder> implements DurationMetricDataWrapperOrBuilder {
            public static final int DATA_FIELD_NUMBER = 1;
            private static final DurationMetricDataWrapper DEFAULT_INSTANCE = new DurationMetricDataWrapper();
            private static volatile Parser<DurationMetricDataWrapper> PARSER;
            private Internal.ProtobufList<DurationMetricData> data_ = emptyProtobufList();

            private DurationMetricDataWrapper() {
            }

            @Override // com.android.os.StatsLog.StatsLogReport.DurationMetricDataWrapperOrBuilder
            public List<DurationMetricData> getDataList() {
                return this.data_;
            }

            public List<? extends DurationMetricDataOrBuilder> getDataOrBuilderList() {
                return this.data_;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.DurationMetricDataWrapperOrBuilder
            public int getDataCount() {
                return this.data_.size();
            }

            @Override // com.android.os.StatsLog.StatsLogReport.DurationMetricDataWrapperOrBuilder
            public DurationMetricData getData(int index) {
                return this.data_.get(index);
            }

            public DurationMetricDataOrBuilder getDataOrBuilder(int index) {
                return this.data_.get(index);
            }

            private void ensureDataIsMutable() {
                if (!this.data_.isModifiable()) {
                    this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, DurationMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, DurationMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.set(index, (DurationMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(DurationMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, DurationMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(DurationMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add((DurationMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, DurationMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add(index, (DurationMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllData(Iterable<? extends DurationMetricData> values) {
                ensureDataIsMutable();
                AbstractMessageLite.addAll(values, this.data_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearData() {
                this.data_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeData(int index) {
                ensureDataIsMutable();
                this.data_.remove(index);
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                for (int i = 0; i < this.data_.size(); i++) {
                    output.writeMessage(1, this.data_.get(i));
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                for (int i = 0; i < this.data_.size(); i++) {
                    size2 += CodedOutputStream.computeMessageSize(1, this.data_.get(i));
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static DurationMetricDataWrapper parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (DurationMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static DurationMetricDataWrapper parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (DurationMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static DurationMetricDataWrapper parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (DurationMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static DurationMetricDataWrapper parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (DurationMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static DurationMetricDataWrapper parseFrom(InputStream input) throws IOException {
                return (DurationMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static DurationMetricDataWrapper parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (DurationMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static DurationMetricDataWrapper parseDelimitedFrom(InputStream input) throws IOException {
                return (DurationMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static DurationMetricDataWrapper parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (DurationMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static DurationMetricDataWrapper parseFrom(CodedInputStream input) throws IOException {
                return (DurationMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static DurationMetricDataWrapper parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (DurationMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(DurationMetricDataWrapper prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<DurationMetricDataWrapper, Builder> implements DurationMetricDataWrapperOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(DurationMetricDataWrapper.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsLogReport.DurationMetricDataWrapperOrBuilder
                public List<DurationMetricData> getDataList() {
                    return Collections.unmodifiableList(((DurationMetricDataWrapper) this.instance).getDataList());
                }

                @Override // com.android.os.StatsLog.StatsLogReport.DurationMetricDataWrapperOrBuilder
                public int getDataCount() {
                    return ((DurationMetricDataWrapper) this.instance).getDataCount();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.DurationMetricDataWrapperOrBuilder
                public DurationMetricData getData(int index) {
                    return ((DurationMetricDataWrapper) this.instance).getData(index);
                }

                public Builder setData(int index, DurationMetricData value) {
                    copyOnWrite();
                    ((DurationMetricDataWrapper) this.instance).setData((DurationMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder setData(int index, DurationMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((DurationMetricDataWrapper) this.instance).setData((DurationMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addData(DurationMetricData value) {
                    copyOnWrite();
                    ((DurationMetricDataWrapper) this.instance).addData((DurationMetricDataWrapper) value);
                    return this;
                }

                public Builder addData(int index, DurationMetricData value) {
                    copyOnWrite();
                    ((DurationMetricDataWrapper) this.instance).addData((DurationMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder addData(DurationMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((DurationMetricDataWrapper) this.instance).addData((DurationMetricDataWrapper) builderForValue);
                    return this;
                }

                public Builder addData(int index, DurationMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((DurationMetricDataWrapper) this.instance).addData((DurationMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllData(Iterable<? extends DurationMetricData> values) {
                    copyOnWrite();
                    ((DurationMetricDataWrapper) this.instance).addAllData(values);
                    return this;
                }

                public Builder clearData() {
                    copyOnWrite();
                    ((DurationMetricDataWrapper) this.instance).clearData();
                    return this;
                }

                public Builder removeData(int index) {
                    copyOnWrite();
                    ((DurationMetricDataWrapper) this.instance).removeData(index);
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new DurationMetricDataWrapper();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        this.data_.makeImmutable();
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        this.data_ = ((GeneratedMessageLite.Visitor) arg0).visitList(this.data_, ((DurationMetricDataWrapper) arg1).data_);
                        GeneratedMessageLite.MergeFromVisitor mergeFromVisitor = GeneratedMessageLite.MergeFromVisitor.INSTANCE;
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 10) {
                                    if (!this.data_.isModifiable()) {
                                        this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                                    }
                                    this.data_.add((DurationMetricData) input.readMessage(DurationMetricData.parser(), extensionRegistry));
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (DurationMetricDataWrapper.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static DurationMetricDataWrapper getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<DurationMetricDataWrapper> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class ValueMetricDataWrapper extends GeneratedMessageLite<ValueMetricDataWrapper, Builder> implements ValueMetricDataWrapperOrBuilder {
            public static final int DATA_FIELD_NUMBER = 1;
            private static final ValueMetricDataWrapper DEFAULT_INSTANCE = new ValueMetricDataWrapper();
            private static volatile Parser<ValueMetricDataWrapper> PARSER = null;
            public static final int SKIPPED_FIELD_NUMBER = 2;
            private Internal.ProtobufList<ValueMetricData> data_ = emptyProtobufList();
            private Internal.ProtobufList<SkippedBuckets> skipped_ = emptyProtobufList();

            private ValueMetricDataWrapper() {
            }

            @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
            public List<ValueMetricData> getDataList() {
                return this.data_;
            }

            public List<? extends ValueMetricDataOrBuilder> getDataOrBuilderList() {
                return this.data_;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
            public int getDataCount() {
                return this.data_.size();
            }

            @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
            public ValueMetricData getData(int index) {
                return this.data_.get(index);
            }

            public ValueMetricDataOrBuilder getDataOrBuilder(int index) {
                return this.data_.get(index);
            }

            private void ensureDataIsMutable() {
                if (!this.data_.isModifiable()) {
                    this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, ValueMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, ValueMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.set(index, (ValueMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(ValueMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, ValueMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(ValueMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add((ValueMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, ValueMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add(index, (ValueMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllData(Iterable<? extends ValueMetricData> values) {
                ensureDataIsMutable();
                AbstractMessageLite.addAll(values, this.data_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearData() {
                this.data_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeData(int index) {
                ensureDataIsMutable();
                this.data_.remove(index);
            }

            @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
            public List<SkippedBuckets> getSkippedList() {
                return this.skipped_;
            }

            public List<? extends SkippedBucketsOrBuilder> getSkippedOrBuilderList() {
                return this.skipped_;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
            public int getSkippedCount() {
                return this.skipped_.size();
            }

            @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
            public SkippedBuckets getSkipped(int index) {
                return this.skipped_.get(index);
            }

            public SkippedBucketsOrBuilder getSkippedOrBuilder(int index) {
                return this.skipped_.get(index);
            }

            private void ensureSkippedIsMutable() {
                if (!this.skipped_.isModifiable()) {
                    this.skipped_ = GeneratedMessageLite.mutableCopy(this.skipped_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setSkipped(int index, SkippedBuckets value) {
                if (value != null) {
                    ensureSkippedIsMutable();
                    this.skipped_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setSkipped(int index, SkippedBuckets.Builder builderForValue) {
                ensureSkippedIsMutable();
                this.skipped_.set(index, (SkippedBuckets) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addSkipped(SkippedBuckets value) {
                if (value != null) {
                    ensureSkippedIsMutable();
                    this.skipped_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addSkipped(int index, SkippedBuckets value) {
                if (value != null) {
                    ensureSkippedIsMutable();
                    this.skipped_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addSkipped(SkippedBuckets.Builder builderForValue) {
                ensureSkippedIsMutable();
                this.skipped_.add((SkippedBuckets) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addSkipped(int index, SkippedBuckets.Builder builderForValue) {
                ensureSkippedIsMutable();
                this.skipped_.add(index, (SkippedBuckets) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllSkipped(Iterable<? extends SkippedBuckets> values) {
                ensureSkippedIsMutable();
                AbstractMessageLite.addAll(values, this.skipped_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearSkipped() {
                this.skipped_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeSkipped(int index) {
                ensureSkippedIsMutable();
                this.skipped_.remove(index);
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                for (int i = 0; i < this.data_.size(); i++) {
                    output.writeMessage(1, this.data_.get(i));
                }
                for (int i2 = 0; i2 < this.skipped_.size(); i2++) {
                    output.writeMessage(2, this.skipped_.get(i2));
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                for (int i = 0; i < this.data_.size(); i++) {
                    size2 += CodedOutputStream.computeMessageSize(1, this.data_.get(i));
                }
                for (int i2 = 0; i2 < this.skipped_.size(); i2++) {
                    size2 += CodedOutputStream.computeMessageSize(2, this.skipped_.get(i2));
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static ValueMetricDataWrapper parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (ValueMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ValueMetricDataWrapper parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ValueMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ValueMetricDataWrapper parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (ValueMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ValueMetricDataWrapper parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ValueMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ValueMetricDataWrapper parseFrom(InputStream input) throws IOException {
                return (ValueMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ValueMetricDataWrapper parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ValueMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ValueMetricDataWrapper parseDelimitedFrom(InputStream input) throws IOException {
                return (ValueMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static ValueMetricDataWrapper parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ValueMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ValueMetricDataWrapper parseFrom(CodedInputStream input) throws IOException {
                return (ValueMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ValueMetricDataWrapper parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ValueMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(ValueMetricDataWrapper prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<ValueMetricDataWrapper, Builder> implements ValueMetricDataWrapperOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(ValueMetricDataWrapper.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
                public List<ValueMetricData> getDataList() {
                    return Collections.unmodifiableList(((ValueMetricDataWrapper) this.instance).getDataList());
                }

                @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
                public int getDataCount() {
                    return ((ValueMetricDataWrapper) this.instance).getDataCount();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
                public ValueMetricData getData(int index) {
                    return ((ValueMetricDataWrapper) this.instance).getData(index);
                }

                public Builder setData(int index, ValueMetricData value) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).setData((ValueMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder setData(int index, ValueMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).setData((ValueMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addData(ValueMetricData value) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addData((ValueMetricDataWrapper) value);
                    return this;
                }

                public Builder addData(int index, ValueMetricData value) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addData((ValueMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder addData(ValueMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addData((ValueMetricDataWrapper) builderForValue);
                    return this;
                }

                public Builder addData(int index, ValueMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addData((ValueMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllData(Iterable<? extends ValueMetricData> values) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addAllData(values);
                    return this;
                }

                public Builder clearData() {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).clearData();
                    return this;
                }

                public Builder removeData(int index) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).removeData(index);
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
                public List<SkippedBuckets> getSkippedList() {
                    return Collections.unmodifiableList(((ValueMetricDataWrapper) this.instance).getSkippedList());
                }

                @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
                public int getSkippedCount() {
                    return ((ValueMetricDataWrapper) this.instance).getSkippedCount();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.ValueMetricDataWrapperOrBuilder
                public SkippedBuckets getSkipped(int index) {
                    return ((ValueMetricDataWrapper) this.instance).getSkipped(index);
                }

                public Builder setSkipped(int index, SkippedBuckets value) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).setSkipped((ValueMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder setSkipped(int index, SkippedBuckets.Builder builderForValue) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).setSkipped((ValueMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addSkipped(SkippedBuckets value) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addSkipped((ValueMetricDataWrapper) value);
                    return this;
                }

                public Builder addSkipped(int index, SkippedBuckets value) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addSkipped((ValueMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder addSkipped(SkippedBuckets.Builder builderForValue) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addSkipped((ValueMetricDataWrapper) builderForValue);
                    return this;
                }

                public Builder addSkipped(int index, SkippedBuckets.Builder builderForValue) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addSkipped((ValueMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllSkipped(Iterable<? extends SkippedBuckets> values) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).addAllSkipped(values);
                    return this;
                }

                public Builder clearSkipped() {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).clearSkipped();
                    return this;
                }

                public Builder removeSkipped(int index) {
                    copyOnWrite();
                    ((ValueMetricDataWrapper) this.instance).removeSkipped(index);
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new ValueMetricDataWrapper();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        this.data_.makeImmutable();
                        this.skipped_.makeImmutable();
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        ValueMetricDataWrapper other = (ValueMetricDataWrapper) arg1;
                        this.data_ = visitor.visitList(this.data_, other.data_);
                        this.skipped_ = visitor.visitList(this.skipped_, other.skipped_);
                        GeneratedMessageLite.MergeFromVisitor mergeFromVisitor = GeneratedMessageLite.MergeFromVisitor.INSTANCE;
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 10) {
                                    if (!this.data_.isModifiable()) {
                                        this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                                    }
                                    this.data_.add((ValueMetricData) input.readMessage(ValueMetricData.parser(), extensionRegistry));
                                } else if (tag == 18) {
                                    if (!this.skipped_.isModifiable()) {
                                        this.skipped_ = GeneratedMessageLite.mutableCopy(this.skipped_);
                                    }
                                    this.skipped_.add((SkippedBuckets) input.readMessage(SkippedBuckets.parser(), extensionRegistry));
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (ValueMetricDataWrapper.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static ValueMetricDataWrapper getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<ValueMetricDataWrapper> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class GaugeMetricDataWrapper extends GeneratedMessageLite<GaugeMetricDataWrapper, Builder> implements GaugeMetricDataWrapperOrBuilder {
            public static final int DATA_FIELD_NUMBER = 1;
            private static final GaugeMetricDataWrapper DEFAULT_INSTANCE = new GaugeMetricDataWrapper();
            private static volatile Parser<GaugeMetricDataWrapper> PARSER = null;
            public static final int SKIPPED_FIELD_NUMBER = 2;
            private Internal.ProtobufList<GaugeMetricData> data_ = emptyProtobufList();
            private Internal.ProtobufList<SkippedBuckets> skipped_ = emptyProtobufList();

            private GaugeMetricDataWrapper() {
            }

            @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
            public List<GaugeMetricData> getDataList() {
                return this.data_;
            }

            public List<? extends GaugeMetricDataOrBuilder> getDataOrBuilderList() {
                return this.data_;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
            public int getDataCount() {
                return this.data_.size();
            }

            @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
            public GaugeMetricData getData(int index) {
                return this.data_.get(index);
            }

            public GaugeMetricDataOrBuilder getDataOrBuilder(int index) {
                return this.data_.get(index);
            }

            private void ensureDataIsMutable() {
                if (!this.data_.isModifiable()) {
                    this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, GaugeMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setData(int index, GaugeMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.set(index, (GaugeMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(GaugeMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, GaugeMetricData value) {
                if (value != null) {
                    ensureDataIsMutable();
                    this.data_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(GaugeMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add((GaugeMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addData(int index, GaugeMetricData.Builder builderForValue) {
                ensureDataIsMutable();
                this.data_.add(index, (GaugeMetricData) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllData(Iterable<? extends GaugeMetricData> values) {
                ensureDataIsMutable();
                AbstractMessageLite.addAll(values, this.data_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearData() {
                this.data_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeData(int index) {
                ensureDataIsMutable();
                this.data_.remove(index);
            }

            @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
            public List<SkippedBuckets> getSkippedList() {
                return this.skipped_;
            }

            public List<? extends SkippedBucketsOrBuilder> getSkippedOrBuilderList() {
                return this.skipped_;
            }

            @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
            public int getSkippedCount() {
                return this.skipped_.size();
            }

            @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
            public SkippedBuckets getSkipped(int index) {
                return this.skipped_.get(index);
            }

            public SkippedBucketsOrBuilder getSkippedOrBuilder(int index) {
                return this.skipped_.get(index);
            }

            private void ensureSkippedIsMutable() {
                if (!this.skipped_.isModifiable()) {
                    this.skipped_ = GeneratedMessageLite.mutableCopy(this.skipped_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setSkipped(int index, SkippedBuckets value) {
                if (value != null) {
                    ensureSkippedIsMutable();
                    this.skipped_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setSkipped(int index, SkippedBuckets.Builder builderForValue) {
                ensureSkippedIsMutable();
                this.skipped_.set(index, (SkippedBuckets) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addSkipped(SkippedBuckets value) {
                if (value != null) {
                    ensureSkippedIsMutable();
                    this.skipped_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addSkipped(int index, SkippedBuckets value) {
                if (value != null) {
                    ensureSkippedIsMutable();
                    this.skipped_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addSkipped(SkippedBuckets.Builder builderForValue) {
                ensureSkippedIsMutable();
                this.skipped_.add((SkippedBuckets) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addSkipped(int index, SkippedBuckets.Builder builderForValue) {
                ensureSkippedIsMutable();
                this.skipped_.add(index, (SkippedBuckets) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllSkipped(Iterable<? extends SkippedBuckets> values) {
                ensureSkippedIsMutable();
                AbstractMessageLite.addAll(values, this.skipped_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearSkipped() {
                this.skipped_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeSkipped(int index) {
                ensureSkippedIsMutable();
                this.skipped_.remove(index);
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                for (int i = 0; i < this.data_.size(); i++) {
                    output.writeMessage(1, this.data_.get(i));
                }
                for (int i2 = 0; i2 < this.skipped_.size(); i2++) {
                    output.writeMessage(2, this.skipped_.get(i2));
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                for (int i = 0; i < this.data_.size(); i++) {
                    size2 += CodedOutputStream.computeMessageSize(1, this.data_.get(i));
                }
                for (int i2 = 0; i2 < this.skipped_.size(); i2++) {
                    size2 += CodedOutputStream.computeMessageSize(2, this.skipped_.get(i2));
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static GaugeMetricDataWrapper parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (GaugeMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static GaugeMetricDataWrapper parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (GaugeMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static GaugeMetricDataWrapper parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (GaugeMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static GaugeMetricDataWrapper parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (GaugeMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static GaugeMetricDataWrapper parseFrom(InputStream input) throws IOException {
                return (GaugeMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static GaugeMetricDataWrapper parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (GaugeMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static GaugeMetricDataWrapper parseDelimitedFrom(InputStream input) throws IOException {
                return (GaugeMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static GaugeMetricDataWrapper parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (GaugeMetricDataWrapper) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static GaugeMetricDataWrapper parseFrom(CodedInputStream input) throws IOException {
                return (GaugeMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static GaugeMetricDataWrapper parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (GaugeMetricDataWrapper) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(GaugeMetricDataWrapper prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<GaugeMetricDataWrapper, Builder> implements GaugeMetricDataWrapperOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(GaugeMetricDataWrapper.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
                public List<GaugeMetricData> getDataList() {
                    return Collections.unmodifiableList(((GaugeMetricDataWrapper) this.instance).getDataList());
                }

                @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
                public int getDataCount() {
                    return ((GaugeMetricDataWrapper) this.instance).getDataCount();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
                public GaugeMetricData getData(int index) {
                    return ((GaugeMetricDataWrapper) this.instance).getData(index);
                }

                public Builder setData(int index, GaugeMetricData value) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).setData((GaugeMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder setData(int index, GaugeMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).setData((GaugeMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addData(GaugeMetricData value) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addData((GaugeMetricDataWrapper) value);
                    return this;
                }

                public Builder addData(int index, GaugeMetricData value) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addData((GaugeMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder addData(GaugeMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addData((GaugeMetricDataWrapper) builderForValue);
                    return this;
                }

                public Builder addData(int index, GaugeMetricData.Builder builderForValue) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addData((GaugeMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllData(Iterable<? extends GaugeMetricData> values) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addAllData(values);
                    return this;
                }

                public Builder clearData() {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).clearData();
                    return this;
                }

                public Builder removeData(int index) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).removeData(index);
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
                public List<SkippedBuckets> getSkippedList() {
                    return Collections.unmodifiableList(((GaugeMetricDataWrapper) this.instance).getSkippedList());
                }

                @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
                public int getSkippedCount() {
                    return ((GaugeMetricDataWrapper) this.instance).getSkippedCount();
                }

                @Override // com.android.os.StatsLog.StatsLogReport.GaugeMetricDataWrapperOrBuilder
                public SkippedBuckets getSkipped(int index) {
                    return ((GaugeMetricDataWrapper) this.instance).getSkipped(index);
                }

                public Builder setSkipped(int index, SkippedBuckets value) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).setSkipped((GaugeMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder setSkipped(int index, SkippedBuckets.Builder builderForValue) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).setSkipped((GaugeMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addSkipped(SkippedBuckets value) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addSkipped((GaugeMetricDataWrapper) value);
                    return this;
                }

                public Builder addSkipped(int index, SkippedBuckets value) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addSkipped((GaugeMetricDataWrapper) index, (int) value);
                    return this;
                }

                public Builder addSkipped(SkippedBuckets.Builder builderForValue) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addSkipped((GaugeMetricDataWrapper) builderForValue);
                    return this;
                }

                public Builder addSkipped(int index, SkippedBuckets.Builder builderForValue) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addSkipped((GaugeMetricDataWrapper) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllSkipped(Iterable<? extends SkippedBuckets> values) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).addAllSkipped(values);
                    return this;
                }

                public Builder clearSkipped() {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).clearSkipped();
                    return this;
                }

                public Builder removeSkipped(int index) {
                    copyOnWrite();
                    ((GaugeMetricDataWrapper) this.instance).removeSkipped(index);
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new GaugeMetricDataWrapper();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        this.data_.makeImmutable();
                        this.skipped_.makeImmutable();
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        GaugeMetricDataWrapper other = (GaugeMetricDataWrapper) arg1;
                        this.data_ = visitor.visitList(this.data_, other.data_);
                        this.skipped_ = visitor.visitList(this.skipped_, other.skipped_);
                        GeneratedMessageLite.MergeFromVisitor mergeFromVisitor = GeneratedMessageLite.MergeFromVisitor.INSTANCE;
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 10) {
                                    if (!this.data_.isModifiable()) {
                                        this.data_ = GeneratedMessageLite.mutableCopy(this.data_);
                                    }
                                    this.data_.add((GaugeMetricData) input.readMessage(GaugeMetricData.parser(), extensionRegistry));
                                } else if (tag == 18) {
                                    if (!this.skipped_.isModifiable()) {
                                        this.skipped_ = GeneratedMessageLite.mutableCopy(this.skipped_);
                                    }
                                    this.skipped_.add((SkippedBuckets) input.readMessage(SkippedBuckets.parser(), extensionRegistry));
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (GaugeMetricDataWrapper.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static GaugeMetricDataWrapper getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<GaugeMetricDataWrapper> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public enum DataCase implements Internal.EnumLite {
            EVENT_METRICS(4),
            COUNT_METRICS(5),
            DURATION_METRICS(6),
            VALUE_METRICS(7),
            GAUGE_METRICS(8),
            DATA_NOT_SET(0);
            
            private final int value;

            private DataCase(int value2) {
                this.value = value2;
            }

            @Deprecated
            public static DataCase valueOf(int value2) {
                return forNumber(value2);
            }

            public static DataCase forNumber(int value2) {
                if (value2 == 0) {
                    return DATA_NOT_SET;
                }
                switch (value2) {
                    case 4:
                        return EVENT_METRICS;
                    case 5:
                        return COUNT_METRICS;
                    case 6:
                        return DURATION_METRICS;
                    case 7:
                        return VALUE_METRICS;
                    case 8:
                        return GAUGE_METRICS;
                    default:
                        return null;
                }
            }

            @Override // com.google.protobuf.Internal.EnumLite
            public int getNumber() {
                return this.value;
            }
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public DataCase getDataCase() {
            return DataCase.forNumber(this.dataCase_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearData() {
            this.dataCase_ = 0;
            this.data_ = null;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasMetricId() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public long getMetricId() {
            return this.metricId_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setMetricId(long value) {
            this.bitField0_ |= 1;
            this.metricId_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearMetricId() {
            this.bitField0_ &= -2;
            this.metricId_ = 0;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasEventMetrics() {
            return this.dataCase_ == 4;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public EventMetricDataWrapper getEventMetrics() {
            if (this.dataCase_ == 4) {
                return (EventMetricDataWrapper) this.data_;
            }
            return EventMetricDataWrapper.getDefaultInstance();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEventMetrics(EventMetricDataWrapper value) {
            if (value != null) {
                this.data_ = value;
                this.dataCase_ = 4;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setEventMetrics(EventMetricDataWrapper.Builder builderForValue) {
            this.data_ = builderForValue.build();
            this.dataCase_ = 4;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeEventMetrics(EventMetricDataWrapper value) {
            if (this.dataCase_ != 4 || this.data_ == EventMetricDataWrapper.getDefaultInstance()) {
                this.data_ = value;
            } else {
                this.data_ = ((EventMetricDataWrapper.Builder) EventMetricDataWrapper.newBuilder((EventMetricDataWrapper) this.data_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.dataCase_ = 4;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearEventMetrics() {
            if (this.dataCase_ == 4) {
                this.dataCase_ = 0;
                this.data_ = null;
            }
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasCountMetrics() {
            return this.dataCase_ == 5;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public CountMetricDataWrapper getCountMetrics() {
            if (this.dataCase_ == 5) {
                return (CountMetricDataWrapper) this.data_;
            }
            return CountMetricDataWrapper.getDefaultInstance();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setCountMetrics(CountMetricDataWrapper value) {
            if (value != null) {
                this.data_ = value;
                this.dataCase_ = 5;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setCountMetrics(CountMetricDataWrapper.Builder builderForValue) {
            this.data_ = builderForValue.build();
            this.dataCase_ = 5;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeCountMetrics(CountMetricDataWrapper value) {
            if (this.dataCase_ != 5 || this.data_ == CountMetricDataWrapper.getDefaultInstance()) {
                this.data_ = value;
            } else {
                this.data_ = ((CountMetricDataWrapper.Builder) CountMetricDataWrapper.newBuilder((CountMetricDataWrapper) this.data_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.dataCase_ = 5;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearCountMetrics() {
            if (this.dataCase_ == 5) {
                this.dataCase_ = 0;
                this.data_ = null;
            }
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasDurationMetrics() {
            return this.dataCase_ == 6;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public DurationMetricDataWrapper getDurationMetrics() {
            if (this.dataCase_ == 6) {
                return (DurationMetricDataWrapper) this.data_;
            }
            return DurationMetricDataWrapper.getDefaultInstance();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDurationMetrics(DurationMetricDataWrapper value) {
            if (value != null) {
                this.data_ = value;
                this.dataCase_ = 6;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDurationMetrics(DurationMetricDataWrapper.Builder builderForValue) {
            this.data_ = builderForValue.build();
            this.dataCase_ = 6;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDurationMetrics(DurationMetricDataWrapper value) {
            if (this.dataCase_ != 6 || this.data_ == DurationMetricDataWrapper.getDefaultInstance()) {
                this.data_ = value;
            } else {
                this.data_ = ((DurationMetricDataWrapper.Builder) DurationMetricDataWrapper.newBuilder((DurationMetricDataWrapper) this.data_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.dataCase_ = 6;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDurationMetrics() {
            if (this.dataCase_ == 6) {
                this.dataCase_ = 0;
                this.data_ = null;
            }
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasValueMetrics() {
            return this.dataCase_ == 7;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public ValueMetricDataWrapper getValueMetrics() {
            if (this.dataCase_ == 7) {
                return (ValueMetricDataWrapper) this.data_;
            }
            return ValueMetricDataWrapper.getDefaultInstance();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueMetrics(ValueMetricDataWrapper value) {
            if (value != null) {
                this.data_ = value;
                this.dataCase_ = 7;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setValueMetrics(ValueMetricDataWrapper.Builder builderForValue) {
            this.data_ = builderForValue.build();
            this.dataCase_ = 7;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeValueMetrics(ValueMetricDataWrapper value) {
            if (this.dataCase_ != 7 || this.data_ == ValueMetricDataWrapper.getDefaultInstance()) {
                this.data_ = value;
            } else {
                this.data_ = ((ValueMetricDataWrapper.Builder) ValueMetricDataWrapper.newBuilder((ValueMetricDataWrapper) this.data_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.dataCase_ = 7;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValueMetrics() {
            if (this.dataCase_ == 7) {
                this.dataCase_ = 0;
                this.data_ = null;
            }
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasGaugeMetrics() {
            return this.dataCase_ == 8;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public GaugeMetricDataWrapper getGaugeMetrics() {
            if (this.dataCase_ == 8) {
                return (GaugeMetricDataWrapper) this.data_;
            }
            return GaugeMetricDataWrapper.getDefaultInstance();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setGaugeMetrics(GaugeMetricDataWrapper value) {
            if (value != null) {
                this.data_ = value;
                this.dataCase_ = 8;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setGaugeMetrics(GaugeMetricDataWrapper.Builder builderForValue) {
            this.data_ = builderForValue.build();
            this.dataCase_ = 8;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeGaugeMetrics(GaugeMetricDataWrapper value) {
            if (this.dataCase_ != 8 || this.data_ == GaugeMetricDataWrapper.getDefaultInstance()) {
                this.data_ = value;
            } else {
                this.data_ = ((GaugeMetricDataWrapper.Builder) GaugeMetricDataWrapper.newBuilder((GaugeMetricDataWrapper) this.data_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.dataCase_ = 8;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearGaugeMetrics() {
            if (this.dataCase_ == 8) {
                this.dataCase_ = 0;
                this.data_ = null;
            }
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasTimeBaseElapsedNanoSeconds() {
            return (this.bitField0_ & 64) == 64;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public long getTimeBaseElapsedNanoSeconds() {
            return this.timeBaseElapsedNanoSeconds_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setTimeBaseElapsedNanoSeconds(long value) {
            this.bitField0_ |= 64;
            this.timeBaseElapsedNanoSeconds_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearTimeBaseElapsedNanoSeconds() {
            this.bitField0_ &= -65;
            this.timeBaseElapsedNanoSeconds_ = 0;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasBucketSizeNanoSeconds() {
            return (this.bitField0_ & 128) == 128;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public long getBucketSizeNanoSeconds() {
            return this.bucketSizeNanoSeconds_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setBucketSizeNanoSeconds(long value) {
            this.bitField0_ |= 128;
            this.bucketSizeNanoSeconds_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearBucketSizeNanoSeconds() {
            this.bitField0_ &= -129;
            this.bucketSizeNanoSeconds_ = 0;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasDimensionsPathInWhat() {
            return (this.bitField0_ & 256) == 256;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public DimensionsValue getDimensionsPathInWhat() {
            DimensionsValue dimensionsValue = this.dimensionsPathInWhat_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsPathInWhat(DimensionsValue value) {
            if (value != null) {
                this.dimensionsPathInWhat_ = value;
                this.bitField0_ |= 256;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsPathInWhat(DimensionsValue.Builder builderForValue) {
            this.dimensionsPathInWhat_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 256;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsPathInWhat(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsPathInWhat_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsPathInWhat_ = value;
            } else {
                this.dimensionsPathInWhat_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsPathInWhat_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 256;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsPathInWhat() {
            this.dimensionsPathInWhat_ = null;
            this.bitField0_ &= -257;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasDimensionsPathInCondition() {
            return (this.bitField0_ & 512) == 512;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public DimensionsValue getDimensionsPathInCondition() {
            DimensionsValue dimensionsValue = this.dimensionsPathInCondition_;
            return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsPathInCondition(DimensionsValue value) {
            if (value != null) {
                this.dimensionsPathInCondition_ = value;
                this.bitField0_ |= 512;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDimensionsPathInCondition(DimensionsValue.Builder builderForValue) {
            this.dimensionsPathInCondition_ = (DimensionsValue) builderForValue.build();
            this.bitField0_ |= 512;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeDimensionsPathInCondition(DimensionsValue value) {
            DimensionsValue dimensionsValue = this.dimensionsPathInCondition_;
            if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                this.dimensionsPathInCondition_ = value;
            } else {
                this.dimensionsPathInCondition_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionsPathInCondition_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 512;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDimensionsPathInCondition() {
            this.dimensionsPathInCondition_ = null;
            this.bitField0_ &= -513;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean hasIsActive() {
            return (this.bitField0_ & 1024) == 1024;
        }

        @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
        public boolean getIsActive() {
            return this.isActive_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setIsActive(boolean value) {
            this.bitField0_ |= 1024;
            this.isActive_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearIsActive() {
            this.bitField0_ &= -1025;
            this.isActive_ = false;
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeInt64(1, this.metricId_);
            }
            if (this.dataCase_ == 4) {
                output.writeMessage(4, (EventMetricDataWrapper) this.data_);
            }
            if (this.dataCase_ == 5) {
                output.writeMessage(5, (CountMetricDataWrapper) this.data_);
            }
            if (this.dataCase_ == 6) {
                output.writeMessage(6, (DurationMetricDataWrapper) this.data_);
            }
            if (this.dataCase_ == 7) {
                output.writeMessage(7, (ValueMetricDataWrapper) this.data_);
            }
            if (this.dataCase_ == 8) {
                output.writeMessage(8, (GaugeMetricDataWrapper) this.data_);
            }
            if ((this.bitField0_ & 64) == 64) {
                output.writeInt64(9, this.timeBaseElapsedNanoSeconds_);
            }
            if ((this.bitField0_ & 128) == 128) {
                output.writeInt64(10, this.bucketSizeNanoSeconds_);
            }
            if ((this.bitField0_ & 256) == 256) {
                output.writeMessage(11, getDimensionsPathInWhat());
            }
            if ((this.bitField0_ & 512) == 512) {
                output.writeMessage(12, getDimensionsPathInCondition());
            }
            if ((this.bitField0_ & 1024) == 1024) {
                output.writeBool(14, this.isActive_);
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeInt64Size(1, this.metricId_);
            }
            if (this.dataCase_ == 4) {
                size2 += CodedOutputStream.computeMessageSize(4, (EventMetricDataWrapper) this.data_);
            }
            if (this.dataCase_ == 5) {
                size2 += CodedOutputStream.computeMessageSize(5, (CountMetricDataWrapper) this.data_);
            }
            if (this.dataCase_ == 6) {
                size2 += CodedOutputStream.computeMessageSize(6, (DurationMetricDataWrapper) this.data_);
            }
            if (this.dataCase_ == 7) {
                size2 += CodedOutputStream.computeMessageSize(7, (ValueMetricDataWrapper) this.data_);
            }
            if (this.dataCase_ == 8) {
                size2 += CodedOutputStream.computeMessageSize(8, (GaugeMetricDataWrapper) this.data_);
            }
            if ((this.bitField0_ & 64) == 64) {
                size2 += CodedOutputStream.computeInt64Size(9, this.timeBaseElapsedNanoSeconds_);
            }
            if ((this.bitField0_ & 128) == 128) {
                size2 += CodedOutputStream.computeInt64Size(10, this.bucketSizeNanoSeconds_);
            }
            if ((this.bitField0_ & 256) == 256) {
                size2 += CodedOutputStream.computeMessageSize(11, getDimensionsPathInWhat());
            }
            if ((this.bitField0_ & 512) == 512) {
                size2 += CodedOutputStream.computeMessageSize(12, getDimensionsPathInCondition());
            }
            if ((this.bitField0_ & 1024) == 1024) {
                size2 += CodedOutputStream.computeBoolSize(14, this.isActive_);
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static StatsLogReport parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (StatsLogReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static StatsLogReport parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (StatsLogReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static StatsLogReport parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (StatsLogReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static StatsLogReport parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (StatsLogReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static StatsLogReport parseFrom(InputStream input) throws IOException {
            return (StatsLogReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static StatsLogReport parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (StatsLogReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static StatsLogReport parseDelimitedFrom(InputStream input) throws IOException {
            return (StatsLogReport) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static StatsLogReport parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (StatsLogReport) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static StatsLogReport parseFrom(CodedInputStream input) throws IOException {
            return (StatsLogReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static StatsLogReport parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (StatsLogReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(StatsLogReport prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<StatsLogReport, Builder> implements StatsLogReportOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(StatsLogReport.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public DataCase getDataCase() {
                return ((StatsLogReport) this.instance).getDataCase();
            }

            public Builder clearData() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearData();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasMetricId() {
                return ((StatsLogReport) this.instance).hasMetricId();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public long getMetricId() {
                return ((StatsLogReport) this.instance).getMetricId();
            }

            public Builder setMetricId(long value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setMetricId(value);
                return this;
            }

            public Builder clearMetricId() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearMetricId();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasEventMetrics() {
                return ((StatsLogReport) this.instance).hasEventMetrics();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public EventMetricDataWrapper getEventMetrics() {
                return ((StatsLogReport) this.instance).getEventMetrics();
            }

            public Builder setEventMetrics(EventMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setEventMetrics((StatsLogReport) value);
                return this;
            }

            public Builder setEventMetrics(EventMetricDataWrapper.Builder builderForValue) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setEventMetrics((StatsLogReport) builderForValue);
                return this;
            }

            public Builder mergeEventMetrics(EventMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).mergeEventMetrics(value);
                return this;
            }

            public Builder clearEventMetrics() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearEventMetrics();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasCountMetrics() {
                return ((StatsLogReport) this.instance).hasCountMetrics();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public CountMetricDataWrapper getCountMetrics() {
                return ((StatsLogReport) this.instance).getCountMetrics();
            }

            public Builder setCountMetrics(CountMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setCountMetrics((StatsLogReport) value);
                return this;
            }

            public Builder setCountMetrics(CountMetricDataWrapper.Builder builderForValue) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setCountMetrics((StatsLogReport) builderForValue);
                return this;
            }

            public Builder mergeCountMetrics(CountMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).mergeCountMetrics(value);
                return this;
            }

            public Builder clearCountMetrics() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearCountMetrics();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasDurationMetrics() {
                return ((StatsLogReport) this.instance).hasDurationMetrics();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public DurationMetricDataWrapper getDurationMetrics() {
                return ((StatsLogReport) this.instance).getDurationMetrics();
            }

            public Builder setDurationMetrics(DurationMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setDurationMetrics((StatsLogReport) value);
                return this;
            }

            public Builder setDurationMetrics(DurationMetricDataWrapper.Builder builderForValue) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setDurationMetrics((StatsLogReport) builderForValue);
                return this;
            }

            public Builder mergeDurationMetrics(DurationMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).mergeDurationMetrics(value);
                return this;
            }

            public Builder clearDurationMetrics() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearDurationMetrics();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasValueMetrics() {
                return ((StatsLogReport) this.instance).hasValueMetrics();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public ValueMetricDataWrapper getValueMetrics() {
                return ((StatsLogReport) this.instance).getValueMetrics();
            }

            public Builder setValueMetrics(ValueMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setValueMetrics((StatsLogReport) value);
                return this;
            }

            public Builder setValueMetrics(ValueMetricDataWrapper.Builder builderForValue) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setValueMetrics((StatsLogReport) builderForValue);
                return this;
            }

            public Builder mergeValueMetrics(ValueMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).mergeValueMetrics(value);
                return this;
            }

            public Builder clearValueMetrics() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearValueMetrics();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasGaugeMetrics() {
                return ((StatsLogReport) this.instance).hasGaugeMetrics();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public GaugeMetricDataWrapper getGaugeMetrics() {
                return ((StatsLogReport) this.instance).getGaugeMetrics();
            }

            public Builder setGaugeMetrics(GaugeMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setGaugeMetrics((StatsLogReport) value);
                return this;
            }

            public Builder setGaugeMetrics(GaugeMetricDataWrapper.Builder builderForValue) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setGaugeMetrics((StatsLogReport) builderForValue);
                return this;
            }

            public Builder mergeGaugeMetrics(GaugeMetricDataWrapper value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).mergeGaugeMetrics(value);
                return this;
            }

            public Builder clearGaugeMetrics() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearGaugeMetrics();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasTimeBaseElapsedNanoSeconds() {
                return ((StatsLogReport) this.instance).hasTimeBaseElapsedNanoSeconds();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public long getTimeBaseElapsedNanoSeconds() {
                return ((StatsLogReport) this.instance).getTimeBaseElapsedNanoSeconds();
            }

            public Builder setTimeBaseElapsedNanoSeconds(long value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setTimeBaseElapsedNanoSeconds(value);
                return this;
            }

            public Builder clearTimeBaseElapsedNanoSeconds() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearTimeBaseElapsedNanoSeconds();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasBucketSizeNanoSeconds() {
                return ((StatsLogReport) this.instance).hasBucketSizeNanoSeconds();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public long getBucketSizeNanoSeconds() {
                return ((StatsLogReport) this.instance).getBucketSizeNanoSeconds();
            }

            public Builder setBucketSizeNanoSeconds(long value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setBucketSizeNanoSeconds(value);
                return this;
            }

            public Builder clearBucketSizeNanoSeconds() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearBucketSizeNanoSeconds();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasDimensionsPathInWhat() {
                return ((StatsLogReport) this.instance).hasDimensionsPathInWhat();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public DimensionsValue getDimensionsPathInWhat() {
                return ((StatsLogReport) this.instance).getDimensionsPathInWhat();
            }

            public Builder setDimensionsPathInWhat(DimensionsValue value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setDimensionsPathInWhat((StatsLogReport) value);
                return this;
            }

            public Builder setDimensionsPathInWhat(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setDimensionsPathInWhat((StatsLogReport) builderForValue);
                return this;
            }

            public Builder mergeDimensionsPathInWhat(DimensionsValue value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).mergeDimensionsPathInWhat(value);
                return this;
            }

            public Builder clearDimensionsPathInWhat() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearDimensionsPathInWhat();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasDimensionsPathInCondition() {
                return ((StatsLogReport) this.instance).hasDimensionsPathInCondition();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public DimensionsValue getDimensionsPathInCondition() {
                return ((StatsLogReport) this.instance).getDimensionsPathInCondition();
            }

            public Builder setDimensionsPathInCondition(DimensionsValue value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setDimensionsPathInCondition((StatsLogReport) value);
                return this;
            }

            public Builder setDimensionsPathInCondition(DimensionsValue.Builder builderForValue) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setDimensionsPathInCondition((StatsLogReport) builderForValue);
                return this;
            }

            public Builder mergeDimensionsPathInCondition(DimensionsValue value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).mergeDimensionsPathInCondition(value);
                return this;
            }

            public Builder clearDimensionsPathInCondition() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearDimensionsPathInCondition();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean hasIsActive() {
                return ((StatsLogReport) this.instance).hasIsActive();
            }

            @Override // com.android.os.StatsLog.StatsLogReportOrBuilder
            public boolean getIsActive() {
                return ((StatsLogReport) this.instance).getIsActive();
            }

            public Builder setIsActive(boolean value) {
                copyOnWrite();
                ((StatsLogReport) this.instance).setIsActive(value);
                return this;
            }

            public Builder clearIsActive() {
                copyOnWrite();
                ((StatsLogReport) this.instance).clearIsActive();
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            boolean z = true;
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new StatsLogReport();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    StatsLogReport other = (StatsLogReport) arg1;
                    this.metricId_ = visitor.visitLong(hasMetricId(), this.metricId_, other.hasMetricId(), other.metricId_);
                    this.timeBaseElapsedNanoSeconds_ = visitor.visitLong(hasTimeBaseElapsedNanoSeconds(), this.timeBaseElapsedNanoSeconds_, other.hasTimeBaseElapsedNanoSeconds(), other.timeBaseElapsedNanoSeconds_);
                    this.bucketSizeNanoSeconds_ = visitor.visitLong(hasBucketSizeNanoSeconds(), this.bucketSizeNanoSeconds_, other.hasBucketSizeNanoSeconds(), other.bucketSizeNanoSeconds_);
                    this.dimensionsPathInWhat_ = (DimensionsValue) visitor.visitMessage(this.dimensionsPathInWhat_, other.dimensionsPathInWhat_);
                    this.dimensionsPathInCondition_ = (DimensionsValue) visitor.visitMessage(this.dimensionsPathInCondition_, other.dimensionsPathInCondition_);
                    this.isActive_ = visitor.visitBoolean(hasIsActive(), this.isActive_, other.hasIsActive(), other.isActive_);
                    switch (other.getDataCase()) {
                        case EVENT_METRICS:
                            if (this.dataCase_ != 4) {
                                z = false;
                            }
                            this.data_ = visitor.visitOneofMessage(z, this.data_, other.data_);
                            break;
                        case COUNT_METRICS:
                            if (this.dataCase_ != 5) {
                                z = false;
                            }
                            this.data_ = visitor.visitOneofMessage(z, this.data_, other.data_);
                            break;
                        case DURATION_METRICS:
                            if (this.dataCase_ != 6) {
                                z = false;
                            }
                            this.data_ = visitor.visitOneofMessage(z, this.data_, other.data_);
                            break;
                        case VALUE_METRICS:
                            if (this.dataCase_ != 7) {
                                z = false;
                            }
                            this.data_ = visitor.visitOneofMessage(z, this.data_, other.data_);
                            break;
                        case GAUGE_METRICS:
                            if (this.dataCase_ != 8) {
                                z = false;
                            }
                            this.data_ = visitor.visitOneofMessage(z, this.data_, other.data_);
                            break;
                        case DATA_NOT_SET:
                            if (this.dataCase_ == 0) {
                                z = false;
                            }
                            visitor.visitOneofNotSet(z);
                            break;
                    }
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        int i = other.dataCase_;
                        if (i != 0) {
                            this.dataCase_ = i;
                        }
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                case 8:
                                    this.bitField0_ |= 1;
                                    this.metricId_ = input.readInt64();
                                    break;
                                case 34:
                                    EventMetricDataWrapper.Builder subBuilder = null;
                                    if (this.dataCase_ == 4) {
                                        subBuilder = (EventMetricDataWrapper.Builder) ((EventMetricDataWrapper) this.data_).toBuilder();
                                    }
                                    this.data_ = input.readMessage(EventMetricDataWrapper.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom((GeneratedMessageLite) ((EventMetricDataWrapper) this.data_));
                                        this.data_ = subBuilder.buildPartial();
                                    }
                                    this.dataCase_ = 4;
                                    break;
                                case 42:
                                    CountMetricDataWrapper.Builder subBuilder2 = null;
                                    if (this.dataCase_ == 5) {
                                        subBuilder2 = (CountMetricDataWrapper.Builder) ((CountMetricDataWrapper) this.data_).toBuilder();
                                    }
                                    this.data_ = input.readMessage(CountMetricDataWrapper.parser(), extensionRegistry);
                                    if (subBuilder2 != null) {
                                        subBuilder2.mergeFrom((GeneratedMessageLite) ((CountMetricDataWrapper) this.data_));
                                        this.data_ = subBuilder2.buildPartial();
                                    }
                                    this.dataCase_ = 5;
                                    break;
                                case 50:
                                    DurationMetricDataWrapper.Builder subBuilder3 = null;
                                    if (this.dataCase_ == 6) {
                                        subBuilder3 = (DurationMetricDataWrapper.Builder) ((DurationMetricDataWrapper) this.data_).toBuilder();
                                    }
                                    this.data_ = input.readMessage(DurationMetricDataWrapper.parser(), extensionRegistry);
                                    if (subBuilder3 != null) {
                                        subBuilder3.mergeFrom((GeneratedMessageLite) ((DurationMetricDataWrapper) this.data_));
                                        this.data_ = subBuilder3.buildPartial();
                                    }
                                    this.dataCase_ = 6;
                                    break;
                                case 58:
                                    ValueMetricDataWrapper.Builder subBuilder4 = null;
                                    if (this.dataCase_ == 7) {
                                        subBuilder4 = (ValueMetricDataWrapper.Builder) ((ValueMetricDataWrapper) this.data_).toBuilder();
                                    }
                                    this.data_ = input.readMessage(ValueMetricDataWrapper.parser(), extensionRegistry);
                                    if (subBuilder4 != null) {
                                        subBuilder4.mergeFrom((GeneratedMessageLite) ((ValueMetricDataWrapper) this.data_));
                                        this.data_ = subBuilder4.buildPartial();
                                    }
                                    this.dataCase_ = 7;
                                    break;
                                case 66:
                                    GaugeMetricDataWrapper.Builder subBuilder5 = null;
                                    if (this.dataCase_ == 8) {
                                        subBuilder5 = (GaugeMetricDataWrapper.Builder) ((GaugeMetricDataWrapper) this.data_).toBuilder();
                                    }
                                    this.data_ = input.readMessage(GaugeMetricDataWrapper.parser(), extensionRegistry);
                                    if (subBuilder5 != null) {
                                        subBuilder5.mergeFrom((GeneratedMessageLite) ((GaugeMetricDataWrapper) this.data_));
                                        this.data_ = subBuilder5.buildPartial();
                                    }
                                    this.dataCase_ = 8;
                                    break;
                                case 72:
                                    this.bitField0_ |= 64;
                                    this.timeBaseElapsedNanoSeconds_ = input.readInt64();
                                    break;
                                case 80:
                                    this.bitField0_ |= 128;
                                    this.bucketSizeNanoSeconds_ = input.readInt64();
                                    break;
                                case 90:
                                    DimensionsValue.Builder subBuilder6 = null;
                                    if ((this.bitField0_ & 256) == 256) {
                                        subBuilder6 = (DimensionsValue.Builder) this.dimensionsPathInWhat_.toBuilder();
                                    }
                                    this.dimensionsPathInWhat_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                    if (subBuilder6 != null) {
                                        subBuilder6.mergeFrom((GeneratedMessageLite) this.dimensionsPathInWhat_);
                                        this.dimensionsPathInWhat_ = (DimensionsValue) subBuilder6.buildPartial();
                                    }
                                    this.bitField0_ |= 256;
                                    break;
                                case 98:
                                    DimensionsValue.Builder subBuilder7 = null;
                                    if ((this.bitField0_ & 512) == 512) {
                                        subBuilder7 = (DimensionsValue.Builder) this.dimensionsPathInCondition_.toBuilder();
                                    }
                                    this.dimensionsPathInCondition_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                    if (subBuilder7 != null) {
                                        subBuilder7.mergeFrom((GeneratedMessageLite) this.dimensionsPathInCondition_);
                                        this.dimensionsPathInCondition_ = (DimensionsValue) subBuilder7.buildPartial();
                                    }
                                    this.bitField0_ |= 512;
                                    break;
                                case 112:
                                    this.bitField0_ |= 1024;
                                    this.isActive_ = input.readBool();
                                    break;
                                default:
                                    if (parseUnknownField(tag, input)) {
                                        break;
                                    } else {
                                        done = true;
                                        break;
                                    }
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (StatsLogReport.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static StatsLogReport getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<StatsLogReport> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class UidMapping extends GeneratedMessageLite<UidMapping, Builder> implements UidMappingOrBuilder {
        public static final int CHANGES_FIELD_NUMBER = 2;
        private static final UidMapping DEFAULT_INSTANCE = new UidMapping();
        private static volatile Parser<UidMapping> PARSER = null;
        public static final int SNAPSHOTS_FIELD_NUMBER = 1;
        private Internal.ProtobufList<Change> changes_ = emptyProtobufList();
        private Internal.ProtobufList<PackageInfoSnapshot> snapshots_ = emptyProtobufList();

        public interface ChangeOrBuilder extends MessageLiteOrBuilder {
            String getApp();

            ByteString getAppBytes();

            long getAppHash();

            boolean getDeletion();

            long getElapsedTimestampNanos();

            long getNewVersion();

            String getNewVersionString();

            ByteString getNewVersionStringBytes();

            long getNewVersionStringHash();

            long getPrevVersion();

            String getPrevVersionString();

            ByteString getPrevVersionStringBytes();

            long getPrevVersionStringHash();

            int getUid();

            boolean hasApp();

            boolean hasAppHash();

            boolean hasDeletion();

            boolean hasElapsedTimestampNanos();

            boolean hasNewVersion();

            boolean hasNewVersionString();

            boolean hasNewVersionStringHash();

            boolean hasPrevVersion();

            boolean hasPrevVersionString();

            boolean hasPrevVersionStringHash();

            boolean hasUid();
        }

        public interface PackageInfoSnapshotOrBuilder extends MessageLiteOrBuilder {
            long getElapsedTimestampNanos();

            PackageInfoSnapshot.PackageInfo getPackageInfo(int i);

            int getPackageInfoCount();

            List<PackageInfoSnapshot.PackageInfo> getPackageInfoList();

            boolean hasElapsedTimestampNanos();
        }

        private UidMapping() {
        }

        public static final class PackageInfoSnapshot extends GeneratedMessageLite<PackageInfoSnapshot, Builder> implements PackageInfoSnapshotOrBuilder {
            private static final PackageInfoSnapshot DEFAULT_INSTANCE = new PackageInfoSnapshot();
            public static final int ELAPSED_TIMESTAMP_NANOS_FIELD_NUMBER = 1;
            public static final int PACKAGE_INFO_FIELD_NUMBER = 2;
            private static volatile Parser<PackageInfoSnapshot> PARSER;
            private int bitField0_;
            private long elapsedTimestampNanos_ = 0;
            private Internal.ProtobufList<PackageInfo> packageInfo_ = emptyProtobufList();

            public interface PackageInfoOrBuilder extends MessageLiteOrBuilder {
                boolean getDeleted();

                String getInstaller();

                ByteString getInstallerBytes();

                long getInstallerHash();

                String getName();

                ByteString getNameBytes();

                long getNameHash();

                int getUid();

                long getVersion();

                String getVersionString();

                ByteString getVersionStringBytes();

                long getVersionStringHash();

                boolean hasDeleted();

                boolean hasInstaller();

                boolean hasInstallerHash();

                boolean hasName();

                boolean hasNameHash();

                boolean hasUid();

                boolean hasVersion();

                boolean hasVersionString();

                boolean hasVersionStringHash();
            }

            private PackageInfoSnapshot() {
            }

            public static final class PackageInfo extends GeneratedMessageLite<PackageInfo, Builder> implements PackageInfoOrBuilder {
                private static final PackageInfo DEFAULT_INSTANCE = new PackageInfo();
                public static final int DELETED_FIELD_NUMBER = 4;
                public static final int INSTALLER_FIELD_NUMBER = 8;
                public static final int INSTALLER_HASH_FIELD_NUMBER = 9;
                public static final int NAME_FIELD_NUMBER = 1;
                public static final int NAME_HASH_FIELD_NUMBER = 5;
                private static volatile Parser<PackageInfo> PARSER = null;
                public static final int UID_FIELD_NUMBER = 3;
                public static final int VERSION_FIELD_NUMBER = 2;
                public static final int VERSION_STRING_FIELD_NUMBER = 6;
                public static final int VERSION_STRING_HASH_FIELD_NUMBER = 7;
                private int bitField0_;
                private boolean deleted_ = false;
                private long installerHash_ = 0;
                private String installer_ = "";
                private long nameHash_ = 0;
                private String name_ = "";
                private int uid_ = 0;
                private long versionStringHash_ = 0;
                private String versionString_ = "";
                private long version_ = 0;

                private PackageInfo() {
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean hasName() {
                    return (this.bitField0_ & 1) == 1;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public String getName() {
                    return this.name_;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public ByteString getNameBytes() {
                    return ByteString.copyFromUtf8(this.name_);
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setName(String value) {
                    if (value != null) {
                        this.bitField0_ |= 1;
                        this.name_ = value;
                        return;
                    }
                    throw new NullPointerException();
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearName() {
                    this.bitField0_ &= -2;
                    this.name_ = getDefaultInstance().getName();
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setNameBytes(ByteString value) {
                    if (value != null) {
                        this.bitField0_ |= 1;
                        this.name_ = value.toStringUtf8();
                        return;
                    }
                    throw new NullPointerException();
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean hasVersion() {
                    return (this.bitField0_ & 2) == 2;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public long getVersion() {
                    return this.version_;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setVersion(long value) {
                    this.bitField0_ |= 2;
                    this.version_ = value;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearVersion() {
                    this.bitField0_ &= -3;
                    this.version_ = 0;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean hasUid() {
                    return (this.bitField0_ & 4) == 4;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public int getUid() {
                    return this.uid_;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setUid(int value) {
                    this.bitField0_ |= 4;
                    this.uid_ = value;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearUid() {
                    this.bitField0_ &= -5;
                    this.uid_ = 0;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean hasDeleted() {
                    return (this.bitField0_ & 8) == 8;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean getDeleted() {
                    return this.deleted_;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setDeleted(boolean value) {
                    this.bitField0_ |= 8;
                    this.deleted_ = value;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearDeleted() {
                    this.bitField0_ &= -9;
                    this.deleted_ = false;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean hasNameHash() {
                    return (this.bitField0_ & 16) == 16;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public long getNameHash() {
                    return this.nameHash_;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setNameHash(long value) {
                    this.bitField0_ |= 16;
                    this.nameHash_ = value;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearNameHash() {
                    this.bitField0_ &= -17;
                    this.nameHash_ = 0;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean hasVersionString() {
                    return (this.bitField0_ & 32) == 32;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public String getVersionString() {
                    return this.versionString_;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public ByteString getVersionStringBytes() {
                    return ByteString.copyFromUtf8(this.versionString_);
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setVersionString(String value) {
                    if (value != null) {
                        this.bitField0_ |= 32;
                        this.versionString_ = value;
                        return;
                    }
                    throw new NullPointerException();
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearVersionString() {
                    this.bitField0_ &= -33;
                    this.versionString_ = getDefaultInstance().getVersionString();
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setVersionStringBytes(ByteString value) {
                    if (value != null) {
                        this.bitField0_ |= 32;
                        this.versionString_ = value.toStringUtf8();
                        return;
                    }
                    throw new NullPointerException();
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean hasVersionStringHash() {
                    return (this.bitField0_ & 64) == 64;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public long getVersionStringHash() {
                    return this.versionStringHash_;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setVersionStringHash(long value) {
                    this.bitField0_ |= 64;
                    this.versionStringHash_ = value;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearVersionStringHash() {
                    this.bitField0_ &= -65;
                    this.versionStringHash_ = 0;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean hasInstaller() {
                    return (this.bitField0_ & 128) == 128;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public String getInstaller() {
                    return this.installer_;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public ByteString getInstallerBytes() {
                    return ByteString.copyFromUtf8(this.installer_);
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setInstaller(String value) {
                    if (value != null) {
                        this.bitField0_ |= 128;
                        this.installer_ = value;
                        return;
                    }
                    throw new NullPointerException();
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearInstaller() {
                    this.bitField0_ &= -129;
                    this.installer_ = getDefaultInstance().getInstaller();
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setInstallerBytes(ByteString value) {
                    if (value != null) {
                        this.bitField0_ |= 128;
                        this.installer_ = value.toStringUtf8();
                        return;
                    }
                    throw new NullPointerException();
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public boolean hasInstallerHash() {
                    return (this.bitField0_ & 256) == 256;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                public long getInstallerHash() {
                    return this.installerHash_;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setInstallerHash(long value) {
                    this.bitField0_ |= 256;
                    this.installerHash_ = value;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearInstallerHash() {
                    this.bitField0_ &= -257;
                    this.installerHash_ = 0;
                }

                @Override // com.google.protobuf.MessageLite
                public void writeTo(CodedOutputStream output) throws IOException {
                    if ((this.bitField0_ & 1) == 1) {
                        output.writeString(1, getName());
                    }
                    if ((this.bitField0_ & 2) == 2) {
                        output.writeInt64(2, this.version_);
                    }
                    if ((this.bitField0_ & 4) == 4) {
                        output.writeInt32(3, this.uid_);
                    }
                    if ((this.bitField0_ & 8) == 8) {
                        output.writeBool(4, this.deleted_);
                    }
                    if ((this.bitField0_ & 16) == 16) {
                        output.writeUInt64(5, this.nameHash_);
                    }
                    if ((this.bitField0_ & 32) == 32) {
                        output.writeString(6, getVersionString());
                    }
                    if ((this.bitField0_ & 64) == 64) {
                        output.writeUInt64(7, this.versionStringHash_);
                    }
                    if ((this.bitField0_ & 128) == 128) {
                        output.writeString(8, getInstaller());
                    }
                    if ((this.bitField0_ & 256) == 256) {
                        output.writeUInt64(9, this.installerHash_);
                    }
                    this.unknownFields.writeTo(output);
                }

                @Override // com.google.protobuf.MessageLite
                public int getSerializedSize() {
                    int size = this.memoizedSerializedSize;
                    if (size != -1) {
                        return size;
                    }
                    int size2 = 0;
                    if ((this.bitField0_ & 1) == 1) {
                        size2 = 0 + CodedOutputStream.computeStringSize(1, getName());
                    }
                    if ((this.bitField0_ & 2) == 2) {
                        size2 += CodedOutputStream.computeInt64Size(2, this.version_);
                    }
                    if ((this.bitField0_ & 4) == 4) {
                        size2 += CodedOutputStream.computeInt32Size(3, this.uid_);
                    }
                    if ((this.bitField0_ & 8) == 8) {
                        size2 += CodedOutputStream.computeBoolSize(4, this.deleted_);
                    }
                    if ((this.bitField0_ & 16) == 16) {
                        size2 += CodedOutputStream.computeUInt64Size(5, this.nameHash_);
                    }
                    if ((this.bitField0_ & 32) == 32) {
                        size2 += CodedOutputStream.computeStringSize(6, getVersionString());
                    }
                    if ((this.bitField0_ & 64) == 64) {
                        size2 += CodedOutputStream.computeUInt64Size(7, this.versionStringHash_);
                    }
                    if ((this.bitField0_ & 128) == 128) {
                        size2 += CodedOutputStream.computeStringSize(8, getInstaller());
                    }
                    if ((this.bitField0_ & 256) == 256) {
                        size2 += CodedOutputStream.computeUInt64Size(9, this.installerHash_);
                    }
                    int size3 = size2 + this.unknownFields.getSerializedSize();
                    this.memoizedSerializedSize = size3;
                    return size3;
                }

                public static PackageInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (PackageInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
                }

                public static PackageInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (PackageInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
                }

                public static PackageInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (PackageInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
                }

                public static PackageInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (PackageInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
                }

                public static PackageInfo parseFrom(InputStream input) throws IOException {
                    return (PackageInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
                }

                public static PackageInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (PackageInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
                }

                public static PackageInfo parseDelimitedFrom(InputStream input) throws IOException {
                    return (PackageInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input);
                }

                public static PackageInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (PackageInfo) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
                }

                public static PackageInfo parseFrom(CodedInputStream input) throws IOException {
                    return (PackageInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
                }

                public static PackageInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (PackageInfo) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
                }

                public static Builder newBuilder() {
                    return (Builder) DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(PackageInfo prototype) {
                    return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
                }

                public static final class Builder extends GeneratedMessageLite.Builder<PackageInfo, Builder> implements PackageInfoOrBuilder {
                    /* synthetic */ Builder(AnonymousClass1 x0) {
                        this();
                    }

                    private Builder() {
                        super(PackageInfo.DEFAULT_INSTANCE);
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean hasName() {
                        return ((PackageInfo) this.instance).hasName();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public String getName() {
                        return ((PackageInfo) this.instance).getName();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public ByteString getNameBytes() {
                        return ((PackageInfo) this.instance).getNameBytes();
                    }

                    public Builder setName(String value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setName(value);
                        return this;
                    }

                    public Builder clearName() {
                        copyOnWrite();
                        ((PackageInfo) this.instance).clearName();
                        return this;
                    }

                    public Builder setNameBytes(ByteString value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setNameBytes(value);
                        return this;
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean hasVersion() {
                        return ((PackageInfo) this.instance).hasVersion();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public long getVersion() {
                        return ((PackageInfo) this.instance).getVersion();
                    }

                    public Builder setVersion(long value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setVersion(value);
                        return this;
                    }

                    public Builder clearVersion() {
                        copyOnWrite();
                        ((PackageInfo) this.instance).clearVersion();
                        return this;
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean hasUid() {
                        return ((PackageInfo) this.instance).hasUid();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public int getUid() {
                        return ((PackageInfo) this.instance).getUid();
                    }

                    public Builder setUid(int value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setUid(value);
                        return this;
                    }

                    public Builder clearUid() {
                        copyOnWrite();
                        ((PackageInfo) this.instance).clearUid();
                        return this;
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean hasDeleted() {
                        return ((PackageInfo) this.instance).hasDeleted();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean getDeleted() {
                        return ((PackageInfo) this.instance).getDeleted();
                    }

                    public Builder setDeleted(boolean value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setDeleted(value);
                        return this;
                    }

                    public Builder clearDeleted() {
                        copyOnWrite();
                        ((PackageInfo) this.instance).clearDeleted();
                        return this;
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean hasNameHash() {
                        return ((PackageInfo) this.instance).hasNameHash();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public long getNameHash() {
                        return ((PackageInfo) this.instance).getNameHash();
                    }

                    public Builder setNameHash(long value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setNameHash(value);
                        return this;
                    }

                    public Builder clearNameHash() {
                        copyOnWrite();
                        ((PackageInfo) this.instance).clearNameHash();
                        return this;
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean hasVersionString() {
                        return ((PackageInfo) this.instance).hasVersionString();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public String getVersionString() {
                        return ((PackageInfo) this.instance).getVersionString();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public ByteString getVersionStringBytes() {
                        return ((PackageInfo) this.instance).getVersionStringBytes();
                    }

                    public Builder setVersionString(String value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setVersionString(value);
                        return this;
                    }

                    public Builder clearVersionString() {
                        copyOnWrite();
                        ((PackageInfo) this.instance).clearVersionString();
                        return this;
                    }

                    public Builder setVersionStringBytes(ByteString value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setVersionStringBytes(value);
                        return this;
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean hasVersionStringHash() {
                        return ((PackageInfo) this.instance).hasVersionStringHash();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public long getVersionStringHash() {
                        return ((PackageInfo) this.instance).getVersionStringHash();
                    }

                    public Builder setVersionStringHash(long value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setVersionStringHash(value);
                        return this;
                    }

                    public Builder clearVersionStringHash() {
                        copyOnWrite();
                        ((PackageInfo) this.instance).clearVersionStringHash();
                        return this;
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean hasInstaller() {
                        return ((PackageInfo) this.instance).hasInstaller();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public String getInstaller() {
                        return ((PackageInfo) this.instance).getInstaller();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public ByteString getInstallerBytes() {
                        return ((PackageInfo) this.instance).getInstallerBytes();
                    }

                    public Builder setInstaller(String value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setInstaller(value);
                        return this;
                    }

                    public Builder clearInstaller() {
                        copyOnWrite();
                        ((PackageInfo) this.instance).clearInstaller();
                        return this;
                    }

                    public Builder setInstallerBytes(ByteString value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setInstallerBytes(value);
                        return this;
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public boolean hasInstallerHash() {
                        return ((PackageInfo) this.instance).hasInstallerHash();
                    }

                    @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshot.PackageInfoOrBuilder
                    public long getInstallerHash() {
                        return ((PackageInfo) this.instance).getInstallerHash();
                    }

                    public Builder setInstallerHash(long value) {
                        copyOnWrite();
                        ((PackageInfo) this.instance).setInstallerHash(value);
                        return this;
                    }

                    public Builder clearInstallerHash() {
                        copyOnWrite();
                        ((PackageInfo) this.instance).clearInstallerHash();
                        return this;
                    }
                }

                /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
                /* access modifiers changed from: protected */
                @Override // com.google.protobuf.GeneratedMessageLite
                public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                    switch (method) {
                        case NEW_MUTABLE_INSTANCE:
                            return new PackageInfo();
                        case IS_INITIALIZED:
                            return DEFAULT_INSTANCE;
                        case MAKE_IMMUTABLE:
                            return null;
                        case NEW_BUILDER:
                            return new Builder(null);
                        case VISIT:
                            GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                            PackageInfo other = (PackageInfo) arg1;
                            this.name_ = visitor.visitString(hasName(), this.name_, other.hasName(), other.name_);
                            this.version_ = visitor.visitLong(hasVersion(), this.version_, other.hasVersion(), other.version_);
                            this.uid_ = visitor.visitInt(hasUid(), this.uid_, other.hasUid(), other.uid_);
                            this.deleted_ = visitor.visitBoolean(hasDeleted(), this.deleted_, other.hasDeleted(), other.deleted_);
                            this.nameHash_ = visitor.visitLong(hasNameHash(), this.nameHash_, other.hasNameHash(), other.nameHash_);
                            this.versionString_ = visitor.visitString(hasVersionString(), this.versionString_, other.hasVersionString(), other.versionString_);
                            this.versionStringHash_ = visitor.visitLong(hasVersionStringHash(), this.versionStringHash_, other.hasVersionStringHash(), other.versionStringHash_);
                            this.installer_ = visitor.visitString(hasInstaller(), this.installer_, other.hasInstaller(), other.installer_);
                            this.installerHash_ = visitor.visitLong(hasInstallerHash(), this.installerHash_, other.hasInstallerHash(), other.installerHash_);
                            if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                                this.bitField0_ |= other.bitField0_;
                            }
                            return this;
                        case MERGE_FROM_STREAM:
                            CodedInputStream input = (CodedInputStream) arg0;
                            ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                            boolean done = false;
                            while (!done) {
                                try {
                                    int tag = input.readTag();
                                    if (tag == 0) {
                                        done = true;
                                    } else if (tag == 10) {
                                        String s = input.readString();
                                        this.bitField0_ |= 1;
                                        this.name_ = s;
                                    } else if (tag == 16) {
                                        this.bitField0_ |= 2;
                                        this.version_ = input.readInt64();
                                    } else if (tag == 24) {
                                        this.bitField0_ |= 4;
                                        this.uid_ = input.readInt32();
                                    } else if (tag == 32) {
                                        this.bitField0_ |= 8;
                                        this.deleted_ = input.readBool();
                                    } else if (tag == 40) {
                                        this.bitField0_ = 16 | this.bitField0_;
                                        this.nameHash_ = input.readUInt64();
                                    } else if (tag == 50) {
                                        String s2 = input.readString();
                                        this.bitField0_ = 32 | this.bitField0_;
                                        this.versionString_ = s2;
                                    } else if (tag == 56) {
                                        this.bitField0_ |= 64;
                                        this.versionStringHash_ = input.readUInt64();
                                    } else if (tag == 66) {
                                        String s3 = input.readString();
                                        this.bitField0_ |= 128;
                                        this.installer_ = s3;
                                    } else if (tag == 72) {
                                        this.bitField0_ |= 256;
                                        this.installerHash_ = input.readUInt64();
                                    } else if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                } catch (InvalidProtocolBufferException e) {
                                    throw new RuntimeException(e.setUnfinishedMessage(this));
                                } catch (IOException e2) {
                                    throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                                }
                            }
                            break;
                        case GET_DEFAULT_INSTANCE:
                            break;
                        case GET_PARSER:
                            if (PARSER == null) {
                                synchronized (PackageInfo.class) {
                                    if (PARSER == null) {
                                        PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                    }
                                }
                            }
                            return PARSER;
                        default:
                            throw new UnsupportedOperationException();
                    }
                    return DEFAULT_INSTANCE;
                }

                static {
                    DEFAULT_INSTANCE.makeImmutable();
                }

                public static PackageInfo getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                public static Parser<PackageInfo> parser() {
                    return DEFAULT_INSTANCE.getParserForType();
                }
            }

            @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
            public boolean hasElapsedTimestampNanos() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
            public long getElapsedTimestampNanos() {
                return this.elapsedTimestampNanos_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setElapsedTimestampNanos(long value) {
                this.bitField0_ |= 1;
                this.elapsedTimestampNanos_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearElapsedTimestampNanos() {
                this.bitField0_ &= -2;
                this.elapsedTimestampNanos_ = 0;
            }

            @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
            public List<PackageInfo> getPackageInfoList() {
                return this.packageInfo_;
            }

            public List<? extends PackageInfoOrBuilder> getPackageInfoOrBuilderList() {
                return this.packageInfo_;
            }

            @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
            public int getPackageInfoCount() {
                return this.packageInfo_.size();
            }

            @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
            public PackageInfo getPackageInfo(int index) {
                return this.packageInfo_.get(index);
            }

            public PackageInfoOrBuilder getPackageInfoOrBuilder(int index) {
                return this.packageInfo_.get(index);
            }

            private void ensurePackageInfoIsMutable() {
                if (!this.packageInfo_.isModifiable()) {
                    this.packageInfo_ = GeneratedMessageLite.mutableCopy(this.packageInfo_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPackageInfo(int index, PackageInfo value) {
                if (value != null) {
                    ensurePackageInfoIsMutable();
                    this.packageInfo_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPackageInfo(int index, PackageInfo.Builder builderForValue) {
                ensurePackageInfoIsMutable();
                this.packageInfo_.set(index, (PackageInfo) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addPackageInfo(PackageInfo value) {
                if (value != null) {
                    ensurePackageInfoIsMutable();
                    this.packageInfo_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addPackageInfo(int index, PackageInfo value) {
                if (value != null) {
                    ensurePackageInfoIsMutable();
                    this.packageInfo_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addPackageInfo(PackageInfo.Builder builderForValue) {
                ensurePackageInfoIsMutable();
                this.packageInfo_.add((PackageInfo) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addPackageInfo(int index, PackageInfo.Builder builderForValue) {
                ensurePackageInfoIsMutable();
                this.packageInfo_.add(index, (PackageInfo) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllPackageInfo(Iterable<? extends PackageInfo> values) {
                ensurePackageInfoIsMutable();
                AbstractMessageLite.addAll(values, this.packageInfo_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearPackageInfo() {
                this.packageInfo_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removePackageInfo(int index) {
                ensurePackageInfoIsMutable();
                this.packageInfo_.remove(index);
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt64(1, this.elapsedTimestampNanos_);
                }
                for (int i = 0; i < this.packageInfo_.size(); i++) {
                    output.writeMessage(2, this.packageInfo_.get(i));
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt64Size(1, this.elapsedTimestampNanos_);
                }
                for (int i = 0; i < this.packageInfo_.size(); i++) {
                    size2 += CodedOutputStream.computeMessageSize(2, this.packageInfo_.get(i));
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static PackageInfoSnapshot parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (PackageInfoSnapshot) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static PackageInfoSnapshot parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (PackageInfoSnapshot) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static PackageInfoSnapshot parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (PackageInfoSnapshot) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static PackageInfoSnapshot parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (PackageInfoSnapshot) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static PackageInfoSnapshot parseFrom(InputStream input) throws IOException {
                return (PackageInfoSnapshot) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static PackageInfoSnapshot parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (PackageInfoSnapshot) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static PackageInfoSnapshot parseDelimitedFrom(InputStream input) throws IOException {
                return (PackageInfoSnapshot) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static PackageInfoSnapshot parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (PackageInfoSnapshot) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static PackageInfoSnapshot parseFrom(CodedInputStream input) throws IOException {
                return (PackageInfoSnapshot) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static PackageInfoSnapshot parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (PackageInfoSnapshot) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(PackageInfoSnapshot prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<PackageInfoSnapshot, Builder> implements PackageInfoSnapshotOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(PackageInfoSnapshot.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
                public boolean hasElapsedTimestampNanos() {
                    return ((PackageInfoSnapshot) this.instance).hasElapsedTimestampNanos();
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
                public long getElapsedTimestampNanos() {
                    return ((PackageInfoSnapshot) this.instance).getElapsedTimestampNanos();
                }

                public Builder setElapsedTimestampNanos(long value) {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).setElapsedTimestampNanos(value);
                    return this;
                }

                public Builder clearElapsedTimestampNanos() {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).clearElapsedTimestampNanos();
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
                public List<PackageInfo> getPackageInfoList() {
                    return Collections.unmodifiableList(((PackageInfoSnapshot) this.instance).getPackageInfoList());
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
                public int getPackageInfoCount() {
                    return ((PackageInfoSnapshot) this.instance).getPackageInfoCount();
                }

                @Override // com.android.os.StatsLog.UidMapping.PackageInfoSnapshotOrBuilder
                public PackageInfo getPackageInfo(int index) {
                    return ((PackageInfoSnapshot) this.instance).getPackageInfo(index);
                }

                public Builder setPackageInfo(int index, PackageInfo value) {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).setPackageInfo((PackageInfoSnapshot) index, (int) value);
                    return this;
                }

                public Builder setPackageInfo(int index, PackageInfo.Builder builderForValue) {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).setPackageInfo((PackageInfoSnapshot) index, (int) builderForValue);
                    return this;
                }

                public Builder addPackageInfo(PackageInfo value) {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).addPackageInfo((PackageInfoSnapshot) value);
                    return this;
                }

                public Builder addPackageInfo(int index, PackageInfo value) {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).addPackageInfo((PackageInfoSnapshot) index, (int) value);
                    return this;
                }

                public Builder addPackageInfo(PackageInfo.Builder builderForValue) {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).addPackageInfo((PackageInfoSnapshot) builderForValue);
                    return this;
                }

                public Builder addPackageInfo(int index, PackageInfo.Builder builderForValue) {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).addPackageInfo((PackageInfoSnapshot) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllPackageInfo(Iterable<? extends PackageInfo> values) {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).addAllPackageInfo(values);
                    return this;
                }

                public Builder clearPackageInfo() {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).clearPackageInfo();
                    return this;
                }

                public Builder removePackageInfo(int index) {
                    copyOnWrite();
                    ((PackageInfoSnapshot) this.instance).removePackageInfo(index);
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new PackageInfoSnapshot();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        this.packageInfo_.makeImmutable();
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        PackageInfoSnapshot other = (PackageInfoSnapshot) arg1;
                        this.elapsedTimestampNanos_ = visitor.visitLong(hasElapsedTimestampNanos(), this.elapsedTimestampNanos_, other.hasElapsedTimestampNanos(), other.elapsedTimestampNanos_);
                        this.packageInfo_ = visitor.visitList(this.packageInfo_, other.packageInfo_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.elapsedTimestampNanos_ = input.readInt64();
                                } else if (tag == 18) {
                                    if (!this.packageInfo_.isModifiable()) {
                                        this.packageInfo_ = GeneratedMessageLite.mutableCopy(this.packageInfo_);
                                    }
                                    this.packageInfo_.add((PackageInfo) input.readMessage(PackageInfo.parser(), extensionRegistry));
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (PackageInfoSnapshot.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static PackageInfoSnapshot getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<PackageInfoSnapshot> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class Change extends GeneratedMessageLite<Change, Builder> implements ChangeOrBuilder {
            public static final int APP_FIELD_NUMBER = 3;
            public static final int APP_HASH_FIELD_NUMBER = 7;
            private static final Change DEFAULT_INSTANCE = new Change();
            public static final int DELETION_FIELD_NUMBER = 1;
            public static final int ELAPSED_TIMESTAMP_NANOS_FIELD_NUMBER = 2;
            public static final int NEW_VERSION_FIELD_NUMBER = 5;
            public static final int NEW_VERSION_STRING_FIELD_NUMBER = 8;
            public static final int NEW_VERSION_STRING_HASH_FIELD_NUMBER = 10;
            private static volatile Parser<Change> PARSER = null;
            public static final int PREV_VERSION_FIELD_NUMBER = 6;
            public static final int PREV_VERSION_STRING_FIELD_NUMBER = 9;
            public static final int PREV_VERSION_STRING_HASH_FIELD_NUMBER = 11;
            public static final int UID_FIELD_NUMBER = 4;
            private long appHash_ = 0;
            private String app_ = "";
            private int bitField0_;
            private boolean deletion_ = false;
            private long elapsedTimestampNanos_ = 0;
            private long newVersionStringHash_ = 0;
            private String newVersionString_ = "";
            private long newVersion_ = 0;
            private long prevVersionStringHash_ = 0;
            private String prevVersionString_ = "";
            private long prevVersion_ = 0;
            private int uid_ = 0;

            private Change() {
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasDeletion() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean getDeletion() {
                return this.deletion_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDeletion(boolean value) {
                this.bitField0_ |= 1;
                this.deletion_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDeletion() {
                this.bitField0_ &= -2;
                this.deletion_ = false;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasElapsedTimestampNanos() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public long getElapsedTimestampNanos() {
                return this.elapsedTimestampNanos_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setElapsedTimestampNanos(long value) {
                this.bitField0_ |= 2;
                this.elapsedTimestampNanos_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearElapsedTimestampNanos() {
                this.bitField0_ &= -3;
                this.elapsedTimestampNanos_ = 0;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasApp() {
                return (this.bitField0_ & 4) == 4;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public String getApp() {
                return this.app_;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public ByteString getAppBytes() {
                return ByteString.copyFromUtf8(this.app_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setApp(String value) {
                if (value != null) {
                    this.bitField0_ |= 4;
                    this.app_ = value;
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearApp() {
                this.bitField0_ &= -5;
                this.app_ = getDefaultInstance().getApp();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAppBytes(ByteString value) {
                if (value != null) {
                    this.bitField0_ |= 4;
                    this.app_ = value.toStringUtf8();
                    return;
                }
                throw new NullPointerException();
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasUid() {
                return (this.bitField0_ & 8) == 8;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public int getUid() {
                return this.uid_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setUid(int value) {
                this.bitField0_ |= 8;
                this.uid_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearUid() {
                this.bitField0_ &= -9;
                this.uid_ = 0;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasNewVersion() {
                return (this.bitField0_ & 16) == 16;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public long getNewVersion() {
                return this.newVersion_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setNewVersion(long value) {
                this.bitField0_ |= 16;
                this.newVersion_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearNewVersion() {
                this.bitField0_ &= -17;
                this.newVersion_ = 0;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasPrevVersion() {
                return (this.bitField0_ & 32) == 32;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public long getPrevVersion() {
                return this.prevVersion_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPrevVersion(long value) {
                this.bitField0_ |= 32;
                this.prevVersion_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearPrevVersion() {
                this.bitField0_ &= -33;
                this.prevVersion_ = 0;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasAppHash() {
                return (this.bitField0_ & 64) == 64;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public long getAppHash() {
                return this.appHash_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAppHash(long value) {
                this.bitField0_ |= 64;
                this.appHash_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAppHash() {
                this.bitField0_ &= -65;
                this.appHash_ = 0;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasNewVersionString() {
                return (this.bitField0_ & 128) == 128;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public String getNewVersionString() {
                return this.newVersionString_;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public ByteString getNewVersionStringBytes() {
                return ByteString.copyFromUtf8(this.newVersionString_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setNewVersionString(String value) {
                if (value != null) {
                    this.bitField0_ |= 128;
                    this.newVersionString_ = value;
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearNewVersionString() {
                this.bitField0_ &= -129;
                this.newVersionString_ = getDefaultInstance().getNewVersionString();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setNewVersionStringBytes(ByteString value) {
                if (value != null) {
                    this.bitField0_ |= 128;
                    this.newVersionString_ = value.toStringUtf8();
                    return;
                }
                throw new NullPointerException();
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasPrevVersionString() {
                return (this.bitField0_ & 256) == 256;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public String getPrevVersionString() {
                return this.prevVersionString_;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public ByteString getPrevVersionStringBytes() {
                return ByteString.copyFromUtf8(this.prevVersionString_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPrevVersionString(String value) {
                if (value != null) {
                    this.bitField0_ |= 256;
                    this.prevVersionString_ = value;
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearPrevVersionString() {
                this.bitField0_ &= -257;
                this.prevVersionString_ = getDefaultInstance().getPrevVersionString();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPrevVersionStringBytes(ByteString value) {
                if (value != null) {
                    this.bitField0_ |= 256;
                    this.prevVersionString_ = value.toStringUtf8();
                    return;
                }
                throw new NullPointerException();
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasNewVersionStringHash() {
                return (this.bitField0_ & 512) == 512;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public long getNewVersionStringHash() {
                return this.newVersionStringHash_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setNewVersionStringHash(long value) {
                this.bitField0_ |= 512;
                this.newVersionStringHash_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearNewVersionStringHash() {
                this.bitField0_ &= -513;
                this.newVersionStringHash_ = 0;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public boolean hasPrevVersionStringHash() {
                return (this.bitField0_ & 1024) == 1024;
            }

            @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
            public long getPrevVersionStringHash() {
                return this.prevVersionStringHash_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPrevVersionStringHash(long value) {
                this.bitField0_ |= 1024;
                this.prevVersionStringHash_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearPrevVersionStringHash() {
                this.bitField0_ &= -1025;
                this.prevVersionStringHash_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeBool(1, this.deletion_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt64(2, this.elapsedTimestampNanos_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    output.writeString(3, getApp());
                }
                if ((this.bitField0_ & 8) == 8) {
                    output.writeInt32(4, this.uid_);
                }
                if ((this.bitField0_ & 16) == 16) {
                    output.writeInt64(5, this.newVersion_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    output.writeInt64(6, this.prevVersion_);
                }
                if ((this.bitField0_ & 64) == 64) {
                    output.writeUInt64(7, this.appHash_);
                }
                if ((this.bitField0_ & 128) == 128) {
                    output.writeString(8, getNewVersionString());
                }
                if ((this.bitField0_ & 256) == 256) {
                    output.writeString(9, getPrevVersionString());
                }
                if ((this.bitField0_ & 512) == 512) {
                    output.writeUInt64(10, this.newVersionStringHash_);
                }
                if ((this.bitField0_ & 1024) == 1024) {
                    output.writeUInt64(11, this.prevVersionStringHash_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeBoolSize(1, this.deletion_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt64Size(2, this.elapsedTimestampNanos_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    size2 += CodedOutputStream.computeStringSize(3, getApp());
                }
                if ((this.bitField0_ & 8) == 8) {
                    size2 += CodedOutputStream.computeInt32Size(4, this.uid_);
                }
                if ((this.bitField0_ & 16) == 16) {
                    size2 += CodedOutputStream.computeInt64Size(5, this.newVersion_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    size2 += CodedOutputStream.computeInt64Size(6, this.prevVersion_);
                }
                if ((this.bitField0_ & 64) == 64) {
                    size2 += CodedOutputStream.computeUInt64Size(7, this.appHash_);
                }
                if ((this.bitField0_ & 128) == 128) {
                    size2 += CodedOutputStream.computeStringSize(8, getNewVersionString());
                }
                if ((this.bitField0_ & 256) == 256) {
                    size2 += CodedOutputStream.computeStringSize(9, getPrevVersionString());
                }
                if ((this.bitField0_ & 512) == 512) {
                    size2 += CodedOutputStream.computeUInt64Size(10, this.newVersionStringHash_);
                }
                if ((this.bitField0_ & 1024) == 1024) {
                    size2 += CodedOutputStream.computeUInt64Size(11, this.prevVersionStringHash_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static Change parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (Change) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static Change parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Change) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static Change parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (Change) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static Change parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Change) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static Change parseFrom(InputStream input) throws IOException {
                return (Change) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static Change parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Change) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Change parseDelimitedFrom(InputStream input) throws IOException {
                return (Change) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static Change parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Change) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Change parseFrom(CodedInputStream input) throws IOException {
                return (Change) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static Change parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Change) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(Change prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<Change, Builder> implements ChangeOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(Change.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasDeletion() {
                    return ((Change) this.instance).hasDeletion();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean getDeletion() {
                    return ((Change) this.instance).getDeletion();
                }

                public Builder setDeletion(boolean value) {
                    copyOnWrite();
                    ((Change) this.instance).setDeletion(value);
                    return this;
                }

                public Builder clearDeletion() {
                    copyOnWrite();
                    ((Change) this.instance).clearDeletion();
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasElapsedTimestampNanos() {
                    return ((Change) this.instance).hasElapsedTimestampNanos();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public long getElapsedTimestampNanos() {
                    return ((Change) this.instance).getElapsedTimestampNanos();
                }

                public Builder setElapsedTimestampNanos(long value) {
                    copyOnWrite();
                    ((Change) this.instance).setElapsedTimestampNanos(value);
                    return this;
                }

                public Builder clearElapsedTimestampNanos() {
                    copyOnWrite();
                    ((Change) this.instance).clearElapsedTimestampNanos();
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasApp() {
                    return ((Change) this.instance).hasApp();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public String getApp() {
                    return ((Change) this.instance).getApp();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public ByteString getAppBytes() {
                    return ((Change) this.instance).getAppBytes();
                }

                public Builder setApp(String value) {
                    copyOnWrite();
                    ((Change) this.instance).setApp(value);
                    return this;
                }

                public Builder clearApp() {
                    copyOnWrite();
                    ((Change) this.instance).clearApp();
                    return this;
                }

                public Builder setAppBytes(ByteString value) {
                    copyOnWrite();
                    ((Change) this.instance).setAppBytes(value);
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasUid() {
                    return ((Change) this.instance).hasUid();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public int getUid() {
                    return ((Change) this.instance).getUid();
                }

                public Builder setUid(int value) {
                    copyOnWrite();
                    ((Change) this.instance).setUid(value);
                    return this;
                }

                public Builder clearUid() {
                    copyOnWrite();
                    ((Change) this.instance).clearUid();
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasNewVersion() {
                    return ((Change) this.instance).hasNewVersion();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public long getNewVersion() {
                    return ((Change) this.instance).getNewVersion();
                }

                public Builder setNewVersion(long value) {
                    copyOnWrite();
                    ((Change) this.instance).setNewVersion(value);
                    return this;
                }

                public Builder clearNewVersion() {
                    copyOnWrite();
                    ((Change) this.instance).clearNewVersion();
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasPrevVersion() {
                    return ((Change) this.instance).hasPrevVersion();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public long getPrevVersion() {
                    return ((Change) this.instance).getPrevVersion();
                }

                public Builder setPrevVersion(long value) {
                    copyOnWrite();
                    ((Change) this.instance).setPrevVersion(value);
                    return this;
                }

                public Builder clearPrevVersion() {
                    copyOnWrite();
                    ((Change) this.instance).clearPrevVersion();
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasAppHash() {
                    return ((Change) this.instance).hasAppHash();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public long getAppHash() {
                    return ((Change) this.instance).getAppHash();
                }

                public Builder setAppHash(long value) {
                    copyOnWrite();
                    ((Change) this.instance).setAppHash(value);
                    return this;
                }

                public Builder clearAppHash() {
                    copyOnWrite();
                    ((Change) this.instance).clearAppHash();
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasNewVersionString() {
                    return ((Change) this.instance).hasNewVersionString();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public String getNewVersionString() {
                    return ((Change) this.instance).getNewVersionString();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public ByteString getNewVersionStringBytes() {
                    return ((Change) this.instance).getNewVersionStringBytes();
                }

                public Builder setNewVersionString(String value) {
                    copyOnWrite();
                    ((Change) this.instance).setNewVersionString(value);
                    return this;
                }

                public Builder clearNewVersionString() {
                    copyOnWrite();
                    ((Change) this.instance).clearNewVersionString();
                    return this;
                }

                public Builder setNewVersionStringBytes(ByteString value) {
                    copyOnWrite();
                    ((Change) this.instance).setNewVersionStringBytes(value);
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasPrevVersionString() {
                    return ((Change) this.instance).hasPrevVersionString();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public String getPrevVersionString() {
                    return ((Change) this.instance).getPrevVersionString();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public ByteString getPrevVersionStringBytes() {
                    return ((Change) this.instance).getPrevVersionStringBytes();
                }

                public Builder setPrevVersionString(String value) {
                    copyOnWrite();
                    ((Change) this.instance).setPrevVersionString(value);
                    return this;
                }

                public Builder clearPrevVersionString() {
                    copyOnWrite();
                    ((Change) this.instance).clearPrevVersionString();
                    return this;
                }

                public Builder setPrevVersionStringBytes(ByteString value) {
                    copyOnWrite();
                    ((Change) this.instance).setPrevVersionStringBytes(value);
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasNewVersionStringHash() {
                    return ((Change) this.instance).hasNewVersionStringHash();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public long getNewVersionStringHash() {
                    return ((Change) this.instance).getNewVersionStringHash();
                }

                public Builder setNewVersionStringHash(long value) {
                    copyOnWrite();
                    ((Change) this.instance).setNewVersionStringHash(value);
                    return this;
                }

                public Builder clearNewVersionStringHash() {
                    copyOnWrite();
                    ((Change) this.instance).clearNewVersionStringHash();
                    return this;
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public boolean hasPrevVersionStringHash() {
                    return ((Change) this.instance).hasPrevVersionStringHash();
                }

                @Override // com.android.os.StatsLog.UidMapping.ChangeOrBuilder
                public long getPrevVersionStringHash() {
                    return ((Change) this.instance).getPrevVersionStringHash();
                }

                public Builder setPrevVersionStringHash(long value) {
                    copyOnWrite();
                    ((Change) this.instance).setPrevVersionStringHash(value);
                    return this;
                }

                public Builder clearPrevVersionStringHash() {
                    copyOnWrite();
                    ((Change) this.instance).clearPrevVersionStringHash();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new Change();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        Change other = (Change) arg1;
                        this.deletion_ = visitor.visitBoolean(hasDeletion(), this.deletion_, other.hasDeletion(), other.deletion_);
                        this.elapsedTimestampNanos_ = visitor.visitLong(hasElapsedTimestampNanos(), this.elapsedTimestampNanos_, other.hasElapsedTimestampNanos(), other.elapsedTimestampNanos_);
                        this.app_ = visitor.visitString(hasApp(), this.app_, other.hasApp(), other.app_);
                        this.uid_ = visitor.visitInt(hasUid(), this.uid_, other.hasUid(), other.uid_);
                        this.newVersion_ = visitor.visitLong(hasNewVersion(), this.newVersion_, other.hasNewVersion(), other.newVersion_);
                        this.prevVersion_ = visitor.visitLong(hasPrevVersion(), this.prevVersion_, other.hasPrevVersion(), other.prevVersion_);
                        this.appHash_ = visitor.visitLong(hasAppHash(), this.appHash_, other.hasAppHash(), other.appHash_);
                        this.newVersionString_ = visitor.visitString(hasNewVersionString(), this.newVersionString_, other.hasNewVersionString(), other.newVersionString_);
                        this.prevVersionString_ = visitor.visitString(hasPrevVersionString(), this.prevVersionString_, other.hasPrevVersionString(), other.prevVersionString_);
                        this.newVersionStringHash_ = visitor.visitLong(hasNewVersionStringHash(), this.newVersionStringHash_, other.hasNewVersionStringHash(), other.newVersionStringHash_);
                        this.prevVersionStringHash_ = visitor.visitLong(hasPrevVersionStringHash(), this.prevVersionStringHash_, other.hasPrevVersionStringHash(), other.prevVersionStringHash_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                switch (tag) {
                                    case 0:
                                        done = true;
                                        break;
                                    case 8:
                                        this.bitField0_ |= 1;
                                        this.deletion_ = input.readBool();
                                        break;
                                    case 16:
                                        this.bitField0_ |= 2;
                                        this.elapsedTimestampNanos_ = input.readInt64();
                                        break;
                                    case 26:
                                        String s = input.readString();
                                        this.bitField0_ |= 4;
                                        this.app_ = s;
                                        break;
                                    case 32:
                                        this.bitField0_ |= 8;
                                        this.uid_ = input.readInt32();
                                        break;
                                    case 40:
                                        this.bitField0_ |= 16;
                                        this.newVersion_ = input.readInt64();
                                        break;
                                    case 48:
                                        this.bitField0_ |= 32;
                                        this.prevVersion_ = input.readInt64();
                                        break;
                                    case 56:
                                        this.bitField0_ |= 64;
                                        this.appHash_ = input.readUInt64();
                                        break;
                                    case 66:
                                        String s2 = input.readString();
                                        this.bitField0_ |= 128;
                                        this.newVersionString_ = s2;
                                        break;
                                    case 74:
                                        String s3 = input.readString();
                                        this.bitField0_ |= 256;
                                        this.prevVersionString_ = s3;
                                        break;
                                    case 80:
                                        this.bitField0_ |= 512;
                                        this.newVersionStringHash_ = input.readUInt64();
                                        break;
                                    case 88:
                                        this.bitField0_ |= 1024;
                                        this.prevVersionStringHash_ = input.readUInt64();
                                        break;
                                    default:
                                        if (parseUnknownField(tag, input)) {
                                            break;
                                        } else {
                                            done = true;
                                            break;
                                        }
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (Change.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static Change getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<Change> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        @Override // com.android.os.StatsLog.UidMappingOrBuilder
        public List<PackageInfoSnapshot> getSnapshotsList() {
            return this.snapshots_;
        }

        public List<? extends PackageInfoSnapshotOrBuilder> getSnapshotsOrBuilderList() {
            return this.snapshots_;
        }

        @Override // com.android.os.StatsLog.UidMappingOrBuilder
        public int getSnapshotsCount() {
            return this.snapshots_.size();
        }

        @Override // com.android.os.StatsLog.UidMappingOrBuilder
        public PackageInfoSnapshot getSnapshots(int index) {
            return this.snapshots_.get(index);
        }

        public PackageInfoSnapshotOrBuilder getSnapshotsOrBuilder(int index) {
            return this.snapshots_.get(index);
        }

        private void ensureSnapshotsIsMutable() {
            if (!this.snapshots_.isModifiable()) {
                this.snapshots_ = GeneratedMessageLite.mutableCopy(this.snapshots_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setSnapshots(int index, PackageInfoSnapshot value) {
            if (value != null) {
                ensureSnapshotsIsMutable();
                this.snapshots_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setSnapshots(int index, PackageInfoSnapshot.Builder builderForValue) {
            ensureSnapshotsIsMutable();
            this.snapshots_.set(index, (PackageInfoSnapshot) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addSnapshots(PackageInfoSnapshot value) {
            if (value != null) {
                ensureSnapshotsIsMutable();
                this.snapshots_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addSnapshots(int index, PackageInfoSnapshot value) {
            if (value != null) {
                ensureSnapshotsIsMutable();
                this.snapshots_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addSnapshots(PackageInfoSnapshot.Builder builderForValue) {
            ensureSnapshotsIsMutable();
            this.snapshots_.add((PackageInfoSnapshot) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addSnapshots(int index, PackageInfoSnapshot.Builder builderForValue) {
            ensureSnapshotsIsMutable();
            this.snapshots_.add(index, (PackageInfoSnapshot) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllSnapshots(Iterable<? extends PackageInfoSnapshot> values) {
            ensureSnapshotsIsMutable();
            AbstractMessageLite.addAll(values, this.snapshots_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearSnapshots() {
            this.snapshots_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeSnapshots(int index) {
            ensureSnapshotsIsMutable();
            this.snapshots_.remove(index);
        }

        @Override // com.android.os.StatsLog.UidMappingOrBuilder
        public List<Change> getChangesList() {
            return this.changes_;
        }

        public List<? extends ChangeOrBuilder> getChangesOrBuilderList() {
            return this.changes_;
        }

        @Override // com.android.os.StatsLog.UidMappingOrBuilder
        public int getChangesCount() {
            return this.changes_.size();
        }

        @Override // com.android.os.StatsLog.UidMappingOrBuilder
        public Change getChanges(int index) {
            return this.changes_.get(index);
        }

        public ChangeOrBuilder getChangesOrBuilder(int index) {
            return this.changes_.get(index);
        }

        private void ensureChangesIsMutable() {
            if (!this.changes_.isModifiable()) {
                this.changes_ = GeneratedMessageLite.mutableCopy(this.changes_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setChanges(int index, Change value) {
            if (value != null) {
                ensureChangesIsMutable();
                this.changes_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setChanges(int index, Change.Builder builderForValue) {
            ensureChangesIsMutable();
            this.changes_.set(index, (Change) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addChanges(Change value) {
            if (value != null) {
                ensureChangesIsMutable();
                this.changes_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addChanges(int index, Change value) {
            if (value != null) {
                ensureChangesIsMutable();
                this.changes_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addChanges(Change.Builder builderForValue) {
            ensureChangesIsMutable();
            this.changes_.add((Change) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addChanges(int index, Change.Builder builderForValue) {
            ensureChangesIsMutable();
            this.changes_.add(index, (Change) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllChanges(Iterable<? extends Change> values) {
            ensureChangesIsMutable();
            AbstractMessageLite.addAll(values, this.changes_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearChanges() {
            this.changes_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeChanges(int index) {
            ensureChangesIsMutable();
            this.changes_.remove(index);
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            for (int i = 0; i < this.snapshots_.size(); i++) {
                output.writeMessage(1, this.snapshots_.get(i));
            }
            for (int i2 = 0; i2 < this.changes_.size(); i2++) {
                output.writeMessage(2, this.changes_.get(i2));
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            for (int i = 0; i < this.snapshots_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(1, this.snapshots_.get(i));
            }
            for (int i2 = 0; i2 < this.changes_.size(); i2++) {
                size2 += CodedOutputStream.computeMessageSize(2, this.changes_.get(i2));
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static UidMapping parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (UidMapping) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static UidMapping parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UidMapping) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static UidMapping parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (UidMapping) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static UidMapping parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (UidMapping) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static UidMapping parseFrom(InputStream input) throws IOException {
            return (UidMapping) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static UidMapping parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UidMapping) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static UidMapping parseDelimitedFrom(InputStream input) throws IOException {
            return (UidMapping) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static UidMapping parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UidMapping) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static UidMapping parseFrom(CodedInputStream input) throws IOException {
            return (UidMapping) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static UidMapping parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (UidMapping) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(UidMapping prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<UidMapping, Builder> implements UidMappingOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(UidMapping.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.UidMappingOrBuilder
            public List<PackageInfoSnapshot> getSnapshotsList() {
                return Collections.unmodifiableList(((UidMapping) this.instance).getSnapshotsList());
            }

            @Override // com.android.os.StatsLog.UidMappingOrBuilder
            public int getSnapshotsCount() {
                return ((UidMapping) this.instance).getSnapshotsCount();
            }

            @Override // com.android.os.StatsLog.UidMappingOrBuilder
            public PackageInfoSnapshot getSnapshots(int index) {
                return ((UidMapping) this.instance).getSnapshots(index);
            }

            public Builder setSnapshots(int index, PackageInfoSnapshot value) {
                copyOnWrite();
                ((UidMapping) this.instance).setSnapshots((UidMapping) index, (int) value);
                return this;
            }

            public Builder setSnapshots(int index, PackageInfoSnapshot.Builder builderForValue) {
                copyOnWrite();
                ((UidMapping) this.instance).setSnapshots((UidMapping) index, (int) builderForValue);
                return this;
            }

            public Builder addSnapshots(PackageInfoSnapshot value) {
                copyOnWrite();
                ((UidMapping) this.instance).addSnapshots((UidMapping) value);
                return this;
            }

            public Builder addSnapshots(int index, PackageInfoSnapshot value) {
                copyOnWrite();
                ((UidMapping) this.instance).addSnapshots((UidMapping) index, (int) value);
                return this;
            }

            public Builder addSnapshots(PackageInfoSnapshot.Builder builderForValue) {
                copyOnWrite();
                ((UidMapping) this.instance).addSnapshots((UidMapping) builderForValue);
                return this;
            }

            public Builder addSnapshots(int index, PackageInfoSnapshot.Builder builderForValue) {
                copyOnWrite();
                ((UidMapping) this.instance).addSnapshots((UidMapping) index, (int) builderForValue);
                return this;
            }

            public Builder addAllSnapshots(Iterable<? extends PackageInfoSnapshot> values) {
                copyOnWrite();
                ((UidMapping) this.instance).addAllSnapshots(values);
                return this;
            }

            public Builder clearSnapshots() {
                copyOnWrite();
                ((UidMapping) this.instance).clearSnapshots();
                return this;
            }

            public Builder removeSnapshots(int index) {
                copyOnWrite();
                ((UidMapping) this.instance).removeSnapshots(index);
                return this;
            }

            @Override // com.android.os.StatsLog.UidMappingOrBuilder
            public List<Change> getChangesList() {
                return Collections.unmodifiableList(((UidMapping) this.instance).getChangesList());
            }

            @Override // com.android.os.StatsLog.UidMappingOrBuilder
            public int getChangesCount() {
                return ((UidMapping) this.instance).getChangesCount();
            }

            @Override // com.android.os.StatsLog.UidMappingOrBuilder
            public Change getChanges(int index) {
                return ((UidMapping) this.instance).getChanges(index);
            }

            public Builder setChanges(int index, Change value) {
                copyOnWrite();
                ((UidMapping) this.instance).setChanges((UidMapping) index, (int) value);
                return this;
            }

            public Builder setChanges(int index, Change.Builder builderForValue) {
                copyOnWrite();
                ((UidMapping) this.instance).setChanges((UidMapping) index, (int) builderForValue);
                return this;
            }

            public Builder addChanges(Change value) {
                copyOnWrite();
                ((UidMapping) this.instance).addChanges((UidMapping) value);
                return this;
            }

            public Builder addChanges(int index, Change value) {
                copyOnWrite();
                ((UidMapping) this.instance).addChanges((UidMapping) index, (int) value);
                return this;
            }

            public Builder addChanges(Change.Builder builderForValue) {
                copyOnWrite();
                ((UidMapping) this.instance).addChanges((UidMapping) builderForValue);
                return this;
            }

            public Builder addChanges(int index, Change.Builder builderForValue) {
                copyOnWrite();
                ((UidMapping) this.instance).addChanges((UidMapping) index, (int) builderForValue);
                return this;
            }

            public Builder addAllChanges(Iterable<? extends Change> values) {
                copyOnWrite();
                ((UidMapping) this.instance).addAllChanges(values);
                return this;
            }

            public Builder clearChanges() {
                copyOnWrite();
                ((UidMapping) this.instance).clearChanges();
                return this;
            }

            public Builder removeChanges(int index) {
                copyOnWrite();
                ((UidMapping) this.instance).removeChanges(index);
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new UidMapping();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.snapshots_.makeImmutable();
                    this.changes_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    UidMapping other = (UidMapping) arg1;
                    this.snapshots_ = visitor.visitList(this.snapshots_, other.snapshots_);
                    this.changes_ = visitor.visitList(this.changes_, other.changes_);
                    GeneratedMessageLite.MergeFromVisitor mergeFromVisitor = GeneratedMessageLite.MergeFromVisitor.INSTANCE;
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 10) {
                                if (!this.snapshots_.isModifiable()) {
                                    this.snapshots_ = GeneratedMessageLite.mutableCopy(this.snapshots_);
                                }
                                this.snapshots_.add((PackageInfoSnapshot) input.readMessage(PackageInfoSnapshot.parser(), extensionRegistry));
                            } else if (tag == 18) {
                                if (!this.changes_.isModifiable()) {
                                    this.changes_ = GeneratedMessageLite.mutableCopy(this.changes_);
                                }
                                this.changes_.add((Change) input.readMessage(Change.parser(), extensionRegistry));
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (UidMapping.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static UidMapping getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<UidMapping> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class ConfigMetricsReport extends GeneratedMessageLite<ConfigMetricsReport, Builder> implements ConfigMetricsReportOrBuilder {
        public static final int ANNOTATION_FIELD_NUMBER = 7;
        public static final int CURRENT_REPORT_ELAPSED_NANOS_FIELD_NUMBER = 4;
        public static final int CURRENT_REPORT_WALL_CLOCK_NANOS_FIELD_NUMBER = 6;
        private static final ConfigMetricsReport DEFAULT_INSTANCE = new ConfigMetricsReport();
        public static final int DUMP_REPORT_REASON_FIELD_NUMBER = 8;
        public static final int LAST_REPORT_ELAPSED_NANOS_FIELD_NUMBER = 3;
        public static final int LAST_REPORT_WALL_CLOCK_NANOS_FIELD_NUMBER = 5;
        public static final int METRICS_FIELD_NUMBER = 1;
        private static volatile Parser<ConfigMetricsReport> PARSER = null;
        public static final int STRINGS_FIELD_NUMBER = 9;
        public static final int UID_MAP_FIELD_NUMBER = 2;
        private Internal.ProtobufList<Annotation> annotation_ = emptyProtobufList();
        private int bitField0_;
        private long currentReportElapsedNanos_ = 0;
        private long currentReportWallClockNanos_ = 0;
        private int dumpReportReason_ = 1;
        private long lastReportElapsedNanos_ = 0;
        private long lastReportWallClockNanos_ = 0;
        private Internal.ProtobufList<StatsLogReport> metrics_ = emptyProtobufList();
        private Internal.ProtobufList<String> strings_ = GeneratedMessageLite.emptyProtobufList();
        private UidMapping uidMap_;

        public interface AnnotationOrBuilder extends MessageLiteOrBuilder {
            int getFieldInt32();

            long getFieldInt64();

            boolean hasFieldInt32();

            boolean hasFieldInt64();
        }

        private ConfigMetricsReport() {
        }

        public enum DumpReportReason implements Internal.EnumLite {
            DEVICE_SHUTDOWN(1),
            CONFIG_UPDATED(2),
            CONFIG_REMOVED(3),
            GET_DATA_CALLED(4),
            ADB_DUMP(5),
            CONFIG_RESET(6),
            STATSCOMPANION_DIED(7),
            TERMINATION_SIGNAL_RECEIVED(8);
            
            public static final int ADB_DUMP_VALUE = 5;
            public static final int CONFIG_REMOVED_VALUE = 3;
            public static final int CONFIG_RESET_VALUE = 6;
            public static final int CONFIG_UPDATED_VALUE = 2;
            public static final int DEVICE_SHUTDOWN_VALUE = 1;
            public static final int GET_DATA_CALLED_VALUE = 4;
            public static final int STATSCOMPANION_DIED_VALUE = 7;
            public static final int TERMINATION_SIGNAL_RECEIVED_VALUE = 8;
            private static final Internal.EnumLiteMap<DumpReportReason> internalValueMap = new Internal.EnumLiteMap<DumpReportReason>() {
                /* class com.android.os.StatsLog.ConfigMetricsReport.DumpReportReason.AnonymousClass1 */

                @Override // com.google.protobuf.Internal.EnumLiteMap
                public DumpReportReason findValueByNumber(int number) {
                    return DumpReportReason.forNumber(number);
                }
            };
            private final int value;

            @Override // com.google.protobuf.Internal.EnumLite
            public final int getNumber() {
                return this.value;
            }

            @Deprecated
            public static DumpReportReason valueOf(int value2) {
                return forNumber(value2);
            }

            public static DumpReportReason forNumber(int value2) {
                switch (value2) {
                    case 1:
                        return DEVICE_SHUTDOWN;
                    case 2:
                        return CONFIG_UPDATED;
                    case 3:
                        return CONFIG_REMOVED;
                    case 4:
                        return GET_DATA_CALLED;
                    case 5:
                        return ADB_DUMP;
                    case 6:
                        return CONFIG_RESET;
                    case 7:
                        return STATSCOMPANION_DIED;
                    case 8:
                        return TERMINATION_SIGNAL_RECEIVED;
                    default:
                        return null;
                }
            }

            public static Internal.EnumLiteMap<DumpReportReason> internalGetValueMap() {
                return internalValueMap;
            }

            private DumpReportReason(int value2) {
                this.value = value2;
            }
        }

        public static final class Annotation extends GeneratedMessageLite<Annotation, Builder> implements AnnotationOrBuilder {
            private static final Annotation DEFAULT_INSTANCE = new Annotation();
            public static final int FIELD_INT32_FIELD_NUMBER = 2;
            public static final int FIELD_INT64_FIELD_NUMBER = 1;
            private static volatile Parser<Annotation> PARSER;
            private int bitField0_;
            private int fieldInt32_ = 0;
            private long fieldInt64_ = 0;

            private Annotation() {
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReport.AnnotationOrBuilder
            public boolean hasFieldInt64() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReport.AnnotationOrBuilder
            public long getFieldInt64() {
                return this.fieldInt64_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setFieldInt64(long value) {
                this.bitField0_ |= 1;
                this.fieldInt64_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearFieldInt64() {
                this.bitField0_ &= -2;
                this.fieldInt64_ = 0;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReport.AnnotationOrBuilder
            public boolean hasFieldInt32() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReport.AnnotationOrBuilder
            public int getFieldInt32() {
                return this.fieldInt32_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setFieldInt32(int value) {
                this.bitField0_ |= 2;
                this.fieldInt32_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearFieldInt32() {
                this.bitField0_ &= -3;
                this.fieldInt32_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt64(1, this.fieldInt64_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt32(2, this.fieldInt32_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt64Size(1, this.fieldInt64_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt32Size(2, this.fieldInt32_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static Annotation parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static Annotation parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static Annotation parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static Annotation parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static Annotation parseFrom(InputStream input) throws IOException {
                return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static Annotation parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Annotation parseDelimitedFrom(InputStream input) throws IOException {
                return (Annotation) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static Annotation parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Annotation) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Annotation parseFrom(CodedInputStream input) throws IOException {
                return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static Annotation parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(Annotation prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<Annotation, Builder> implements AnnotationOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(Annotation.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.ConfigMetricsReport.AnnotationOrBuilder
                public boolean hasFieldInt64() {
                    return ((Annotation) this.instance).hasFieldInt64();
                }

                @Override // com.android.os.StatsLog.ConfigMetricsReport.AnnotationOrBuilder
                public long getFieldInt64() {
                    return ((Annotation) this.instance).getFieldInt64();
                }

                public Builder setFieldInt64(long value) {
                    copyOnWrite();
                    ((Annotation) this.instance).setFieldInt64(value);
                    return this;
                }

                public Builder clearFieldInt64() {
                    copyOnWrite();
                    ((Annotation) this.instance).clearFieldInt64();
                    return this;
                }

                @Override // com.android.os.StatsLog.ConfigMetricsReport.AnnotationOrBuilder
                public boolean hasFieldInt32() {
                    return ((Annotation) this.instance).hasFieldInt32();
                }

                @Override // com.android.os.StatsLog.ConfigMetricsReport.AnnotationOrBuilder
                public int getFieldInt32() {
                    return ((Annotation) this.instance).getFieldInt32();
                }

                public Builder setFieldInt32(int value) {
                    copyOnWrite();
                    ((Annotation) this.instance).setFieldInt32(value);
                    return this;
                }

                public Builder clearFieldInt32() {
                    copyOnWrite();
                    ((Annotation) this.instance).clearFieldInt32();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new Annotation();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        Annotation other = (Annotation) arg1;
                        this.fieldInt64_ = visitor.visitLong(hasFieldInt64(), this.fieldInt64_, other.hasFieldInt64(), other.fieldInt64_);
                        this.fieldInt32_ = visitor.visitInt(hasFieldInt32(), this.fieldInt32_, other.hasFieldInt32(), other.fieldInt32_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.fieldInt64_ = input.readInt64();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.fieldInt32_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (Annotation.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static Annotation getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<Annotation> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public List<StatsLogReport> getMetricsList() {
            return this.metrics_;
        }

        public List<? extends StatsLogReportOrBuilder> getMetricsOrBuilderList() {
            return this.metrics_;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public int getMetricsCount() {
            return this.metrics_.size();
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public StatsLogReport getMetrics(int index) {
            return this.metrics_.get(index);
        }

        public StatsLogReportOrBuilder getMetricsOrBuilder(int index) {
            return this.metrics_.get(index);
        }

        private void ensureMetricsIsMutable() {
            if (!this.metrics_.isModifiable()) {
                this.metrics_ = GeneratedMessageLite.mutableCopy(this.metrics_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setMetrics(int index, StatsLogReport value) {
            if (value != null) {
                ensureMetricsIsMutable();
                this.metrics_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setMetrics(int index, StatsLogReport.Builder builderForValue) {
            ensureMetricsIsMutable();
            this.metrics_.set(index, (StatsLogReport) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addMetrics(StatsLogReport value) {
            if (value != null) {
                ensureMetricsIsMutable();
                this.metrics_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addMetrics(int index, StatsLogReport value) {
            if (value != null) {
                ensureMetricsIsMutable();
                this.metrics_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addMetrics(StatsLogReport.Builder builderForValue) {
            ensureMetricsIsMutable();
            this.metrics_.add((StatsLogReport) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addMetrics(int index, StatsLogReport.Builder builderForValue) {
            ensureMetricsIsMutable();
            this.metrics_.add(index, (StatsLogReport) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllMetrics(Iterable<? extends StatsLogReport> values) {
            ensureMetricsIsMutable();
            AbstractMessageLite.addAll(values, this.metrics_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearMetrics() {
            this.metrics_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeMetrics(int index) {
            ensureMetricsIsMutable();
            this.metrics_.remove(index);
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public boolean hasUidMap() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public UidMapping getUidMap() {
            UidMapping uidMapping = this.uidMap_;
            return uidMapping == null ? UidMapping.getDefaultInstance() : uidMapping;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setUidMap(UidMapping value) {
            if (value != null) {
                this.uidMap_ = value;
                this.bitField0_ |= 1;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setUidMap(UidMapping.Builder builderForValue) {
            this.uidMap_ = (UidMapping) builderForValue.build();
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeUidMap(UidMapping value) {
            UidMapping uidMapping = this.uidMap_;
            if (uidMapping == null || uidMapping == UidMapping.getDefaultInstance()) {
                this.uidMap_ = value;
            } else {
                this.uidMap_ = (UidMapping) ((UidMapping.Builder) UidMapping.newBuilder(this.uidMap_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearUidMap() {
            this.uidMap_ = null;
            this.bitField0_ &= -2;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public boolean hasLastReportElapsedNanos() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public long getLastReportElapsedNanos() {
            return this.lastReportElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setLastReportElapsedNanos(long value) {
            this.bitField0_ |= 2;
            this.lastReportElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearLastReportElapsedNanos() {
            this.bitField0_ &= -3;
            this.lastReportElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public boolean hasCurrentReportElapsedNanos() {
            return (this.bitField0_ & 4) == 4;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public long getCurrentReportElapsedNanos() {
            return this.currentReportElapsedNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setCurrentReportElapsedNanos(long value) {
            this.bitField0_ |= 4;
            this.currentReportElapsedNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearCurrentReportElapsedNanos() {
            this.bitField0_ &= -5;
            this.currentReportElapsedNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public boolean hasLastReportWallClockNanos() {
            return (this.bitField0_ & 8) == 8;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public long getLastReportWallClockNanos() {
            return this.lastReportWallClockNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setLastReportWallClockNanos(long value) {
            this.bitField0_ |= 8;
            this.lastReportWallClockNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearLastReportWallClockNanos() {
            this.bitField0_ &= -9;
            this.lastReportWallClockNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public boolean hasCurrentReportWallClockNanos() {
            return (this.bitField0_ & 16) == 16;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public long getCurrentReportWallClockNanos() {
            return this.currentReportWallClockNanos_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setCurrentReportWallClockNanos(long value) {
            this.bitField0_ |= 16;
            this.currentReportWallClockNanos_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearCurrentReportWallClockNanos() {
            this.bitField0_ &= -17;
            this.currentReportWallClockNanos_ = 0;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public List<Annotation> getAnnotationList() {
            return this.annotation_;
        }

        public List<? extends AnnotationOrBuilder> getAnnotationOrBuilderList() {
            return this.annotation_;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public int getAnnotationCount() {
            return this.annotation_.size();
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public Annotation getAnnotation(int index) {
            return this.annotation_.get(index);
        }

        public AnnotationOrBuilder getAnnotationOrBuilder(int index) {
            return this.annotation_.get(index);
        }

        private void ensureAnnotationIsMutable() {
            if (!this.annotation_.isModifiable()) {
                this.annotation_ = GeneratedMessageLite.mutableCopy(this.annotation_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAnnotation(int index, Annotation value) {
            if (value != null) {
                ensureAnnotationIsMutable();
                this.annotation_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAnnotation(int index, Annotation.Builder builderForValue) {
            ensureAnnotationIsMutable();
            this.annotation_.set(index, (Annotation) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAnnotation(Annotation value) {
            if (value != null) {
                ensureAnnotationIsMutable();
                this.annotation_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAnnotation(int index, Annotation value) {
            if (value != null) {
                ensureAnnotationIsMutable();
                this.annotation_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAnnotation(Annotation.Builder builderForValue) {
            ensureAnnotationIsMutable();
            this.annotation_.add((Annotation) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAnnotation(int index, Annotation.Builder builderForValue) {
            ensureAnnotationIsMutable();
            this.annotation_.add(index, (Annotation) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllAnnotation(Iterable<? extends Annotation> values) {
            ensureAnnotationIsMutable();
            AbstractMessageLite.addAll(values, this.annotation_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearAnnotation() {
            this.annotation_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeAnnotation(int index) {
            ensureAnnotationIsMutable();
            this.annotation_.remove(index);
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public boolean hasDumpReportReason() {
            return (this.bitField0_ & 32) == 32;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public DumpReportReason getDumpReportReason() {
            DumpReportReason result = DumpReportReason.forNumber(this.dumpReportReason_);
            return result == null ? DumpReportReason.DEVICE_SHUTDOWN : result;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDumpReportReason(DumpReportReason value) {
            if (value != null) {
                this.bitField0_ |= 32;
                this.dumpReportReason_ = value.getNumber();
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDumpReportReason() {
            this.bitField0_ &= -33;
            this.dumpReportReason_ = 1;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public List<String> getStringsList() {
            return this.strings_;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public int getStringsCount() {
            return this.strings_.size();
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public String getStrings(int index) {
            return this.strings_.get(index);
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
        public ByteString getStringsBytes(int index) {
            return ByteString.copyFromUtf8(this.strings_.get(index));
        }

        private void ensureStringsIsMutable() {
            if (!this.strings_.isModifiable()) {
                this.strings_ = GeneratedMessageLite.mutableCopy(this.strings_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStrings(int index, String value) {
            if (value != null) {
                ensureStringsIsMutable();
                this.strings_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addStrings(String value) {
            if (value != null) {
                ensureStringsIsMutable();
                this.strings_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllStrings(Iterable<String> values) {
            ensureStringsIsMutable();
            AbstractMessageLite.addAll(values, this.strings_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStrings() {
            this.strings_ = GeneratedMessageLite.emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addStringsBytes(ByteString value) {
            if (value != null) {
                ensureStringsIsMutable();
                this.strings_.add(value.toStringUtf8());
                return;
            }
            throw new NullPointerException();
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            for (int i = 0; i < this.metrics_.size(); i++) {
                output.writeMessage(1, this.metrics_.get(i));
            }
            if ((this.bitField0_ & 1) == 1) {
                output.writeMessage(2, getUidMap());
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeInt64(3, this.lastReportElapsedNanos_);
            }
            if ((this.bitField0_ & 4) == 4) {
                output.writeInt64(4, this.currentReportElapsedNanos_);
            }
            if ((this.bitField0_ & 8) == 8) {
                output.writeInt64(5, this.lastReportWallClockNanos_);
            }
            if ((this.bitField0_ & 16) == 16) {
                output.writeInt64(6, this.currentReportWallClockNanos_);
            }
            for (int i2 = 0; i2 < this.annotation_.size(); i2++) {
                output.writeMessage(7, this.annotation_.get(i2));
            }
            if ((this.bitField0_ & 32) == 32) {
                output.writeEnum(8, this.dumpReportReason_);
            }
            for (int i3 = 0; i3 < this.strings_.size(); i3++) {
                output.writeString(9, this.strings_.get(i3));
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            for (int i = 0; i < this.metrics_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(1, this.metrics_.get(i));
            }
            if ((this.bitField0_ & 1) == 1) {
                size2 += CodedOutputStream.computeMessageSize(2, getUidMap());
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeInt64Size(3, this.lastReportElapsedNanos_);
            }
            if ((this.bitField0_ & 4) == 4) {
                size2 += CodedOutputStream.computeInt64Size(4, this.currentReportElapsedNanos_);
            }
            if ((this.bitField0_ & 8) == 8) {
                size2 += CodedOutputStream.computeInt64Size(5, this.lastReportWallClockNanos_);
            }
            if ((this.bitField0_ & 16) == 16) {
                size2 += CodedOutputStream.computeInt64Size(6, this.currentReportWallClockNanos_);
            }
            for (int i2 = 0; i2 < this.annotation_.size(); i2++) {
                size2 += CodedOutputStream.computeMessageSize(7, this.annotation_.get(i2));
            }
            if ((this.bitField0_ & 32) == 32) {
                size2 += CodedOutputStream.computeEnumSize(8, this.dumpReportReason_);
            }
            int dataSize = 0;
            for (int i3 = 0; i3 < this.strings_.size(); i3++) {
                dataSize += CodedOutputStream.computeStringSizeNoTag(this.strings_.get(i3));
            }
            int size3 = size2 + dataSize + (getStringsList().size() * 1) + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static ConfigMetricsReport parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ConfigMetricsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static ConfigMetricsReport parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ConfigMetricsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static ConfigMetricsReport parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ConfigMetricsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static ConfigMetricsReport parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ConfigMetricsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static ConfigMetricsReport parseFrom(InputStream input) throws IOException {
            return (ConfigMetricsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static ConfigMetricsReport parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ConfigMetricsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static ConfigMetricsReport parseDelimitedFrom(InputStream input) throws IOException {
            return (ConfigMetricsReport) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static ConfigMetricsReport parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ConfigMetricsReport) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static ConfigMetricsReport parseFrom(CodedInputStream input) throws IOException {
            return (ConfigMetricsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static ConfigMetricsReport parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ConfigMetricsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ConfigMetricsReport prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<ConfigMetricsReport, Builder> implements ConfigMetricsReportOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(ConfigMetricsReport.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public List<StatsLogReport> getMetricsList() {
                return Collections.unmodifiableList(((ConfigMetricsReport) this.instance).getMetricsList());
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public int getMetricsCount() {
                return ((ConfigMetricsReport) this.instance).getMetricsCount();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public StatsLogReport getMetrics(int index) {
                return ((ConfigMetricsReport) this.instance).getMetrics(index);
            }

            public Builder setMetrics(int index, StatsLogReport value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setMetrics((ConfigMetricsReport) index, (int) value);
                return this;
            }

            public Builder setMetrics(int index, StatsLogReport.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setMetrics((ConfigMetricsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addMetrics(StatsLogReport value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addMetrics((ConfigMetricsReport) value);
                return this;
            }

            public Builder addMetrics(int index, StatsLogReport value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addMetrics((ConfigMetricsReport) index, (int) value);
                return this;
            }

            public Builder addMetrics(StatsLogReport.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addMetrics((ConfigMetricsReport) builderForValue);
                return this;
            }

            public Builder addMetrics(int index, StatsLogReport.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addMetrics((ConfigMetricsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllMetrics(Iterable<? extends StatsLogReport> values) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addAllMetrics(values);
                return this;
            }

            public Builder clearMetrics() {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).clearMetrics();
                return this;
            }

            public Builder removeMetrics(int index) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).removeMetrics(index);
                return this;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public boolean hasUidMap() {
                return ((ConfigMetricsReport) this.instance).hasUidMap();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public UidMapping getUidMap() {
                return ((ConfigMetricsReport) this.instance).getUidMap();
            }

            public Builder setUidMap(UidMapping value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setUidMap((ConfigMetricsReport) value);
                return this;
            }

            public Builder setUidMap(UidMapping.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setUidMap((ConfigMetricsReport) builderForValue);
                return this;
            }

            public Builder mergeUidMap(UidMapping value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).mergeUidMap(value);
                return this;
            }

            public Builder clearUidMap() {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).clearUidMap();
                return this;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public boolean hasLastReportElapsedNanos() {
                return ((ConfigMetricsReport) this.instance).hasLastReportElapsedNanos();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public long getLastReportElapsedNanos() {
                return ((ConfigMetricsReport) this.instance).getLastReportElapsedNanos();
            }

            public Builder setLastReportElapsedNanos(long value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setLastReportElapsedNanos(value);
                return this;
            }

            public Builder clearLastReportElapsedNanos() {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).clearLastReportElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public boolean hasCurrentReportElapsedNanos() {
                return ((ConfigMetricsReport) this.instance).hasCurrentReportElapsedNanos();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public long getCurrentReportElapsedNanos() {
                return ((ConfigMetricsReport) this.instance).getCurrentReportElapsedNanos();
            }

            public Builder setCurrentReportElapsedNanos(long value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setCurrentReportElapsedNanos(value);
                return this;
            }

            public Builder clearCurrentReportElapsedNanos() {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).clearCurrentReportElapsedNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public boolean hasLastReportWallClockNanos() {
                return ((ConfigMetricsReport) this.instance).hasLastReportWallClockNanos();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public long getLastReportWallClockNanos() {
                return ((ConfigMetricsReport) this.instance).getLastReportWallClockNanos();
            }

            public Builder setLastReportWallClockNanos(long value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setLastReportWallClockNanos(value);
                return this;
            }

            public Builder clearLastReportWallClockNanos() {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).clearLastReportWallClockNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public boolean hasCurrentReportWallClockNanos() {
                return ((ConfigMetricsReport) this.instance).hasCurrentReportWallClockNanos();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public long getCurrentReportWallClockNanos() {
                return ((ConfigMetricsReport) this.instance).getCurrentReportWallClockNanos();
            }

            public Builder setCurrentReportWallClockNanos(long value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setCurrentReportWallClockNanos(value);
                return this;
            }

            public Builder clearCurrentReportWallClockNanos() {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).clearCurrentReportWallClockNanos();
                return this;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public List<Annotation> getAnnotationList() {
                return Collections.unmodifiableList(((ConfigMetricsReport) this.instance).getAnnotationList());
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public int getAnnotationCount() {
                return ((ConfigMetricsReport) this.instance).getAnnotationCount();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public Annotation getAnnotation(int index) {
                return ((ConfigMetricsReport) this.instance).getAnnotation(index);
            }

            public Builder setAnnotation(int index, Annotation value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setAnnotation((ConfigMetricsReport) index, (int) value);
                return this;
            }

            public Builder setAnnotation(int index, Annotation.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setAnnotation((ConfigMetricsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAnnotation(Annotation value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addAnnotation((ConfigMetricsReport) value);
                return this;
            }

            public Builder addAnnotation(int index, Annotation value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addAnnotation((ConfigMetricsReport) index, (int) value);
                return this;
            }

            public Builder addAnnotation(Annotation.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addAnnotation((ConfigMetricsReport) builderForValue);
                return this;
            }

            public Builder addAnnotation(int index, Annotation.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addAnnotation((ConfigMetricsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllAnnotation(Iterable<? extends Annotation> values) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addAllAnnotation(values);
                return this;
            }

            public Builder clearAnnotation() {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).clearAnnotation();
                return this;
            }

            public Builder removeAnnotation(int index) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).removeAnnotation(index);
                return this;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public boolean hasDumpReportReason() {
                return ((ConfigMetricsReport) this.instance).hasDumpReportReason();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public DumpReportReason getDumpReportReason() {
                return ((ConfigMetricsReport) this.instance).getDumpReportReason();
            }

            public Builder setDumpReportReason(DumpReportReason value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setDumpReportReason(value);
                return this;
            }

            public Builder clearDumpReportReason() {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).clearDumpReportReason();
                return this;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public List<String> getStringsList() {
                return Collections.unmodifiableList(((ConfigMetricsReport) this.instance).getStringsList());
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public int getStringsCount() {
                return ((ConfigMetricsReport) this.instance).getStringsCount();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public String getStrings(int index) {
                return ((ConfigMetricsReport) this.instance).getStrings(index);
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportOrBuilder
            public ByteString getStringsBytes(int index) {
                return ((ConfigMetricsReport) this.instance).getStringsBytes(index);
            }

            public Builder setStrings(int index, String value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).setStrings(index, value);
                return this;
            }

            public Builder addStrings(String value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addStrings(value);
                return this;
            }

            public Builder addAllStrings(Iterable<String> values) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addAllStrings(values);
                return this;
            }

            public Builder clearStrings() {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).clearStrings();
                return this;
            }

            public Builder addStringsBytes(ByteString value) {
                copyOnWrite();
                ((ConfigMetricsReport) this.instance).addStringsBytes(value);
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new ConfigMetricsReport();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.metrics_.makeImmutable();
                    this.annotation_.makeImmutable();
                    this.strings_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    ConfigMetricsReport other = (ConfigMetricsReport) arg1;
                    this.metrics_ = visitor.visitList(this.metrics_, other.metrics_);
                    this.uidMap_ = (UidMapping) visitor.visitMessage(this.uidMap_, other.uidMap_);
                    this.lastReportElapsedNanos_ = visitor.visitLong(hasLastReportElapsedNanos(), this.lastReportElapsedNanos_, other.hasLastReportElapsedNanos(), other.lastReportElapsedNanos_);
                    this.currentReportElapsedNanos_ = visitor.visitLong(hasCurrentReportElapsedNanos(), this.currentReportElapsedNanos_, other.hasCurrentReportElapsedNanos(), other.currentReportElapsedNanos_);
                    this.lastReportWallClockNanos_ = visitor.visitLong(hasLastReportWallClockNanos(), this.lastReportWallClockNanos_, other.hasLastReportWallClockNanos(), other.lastReportWallClockNanos_);
                    this.currentReportWallClockNanos_ = visitor.visitLong(hasCurrentReportWallClockNanos(), this.currentReportWallClockNanos_, other.hasCurrentReportWallClockNanos(), other.currentReportWallClockNanos_);
                    this.annotation_ = visitor.visitList(this.annotation_, other.annotation_);
                    this.dumpReportReason_ = visitor.visitInt(hasDumpReportReason(), this.dumpReportReason_, other.hasDumpReportReason(), other.dumpReportReason_);
                    this.strings_ = visitor.visitList(this.strings_, other.strings_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 10) {
                                if (!this.metrics_.isModifiable()) {
                                    this.metrics_ = GeneratedMessageLite.mutableCopy(this.metrics_);
                                }
                                this.metrics_.add((StatsLogReport) input.readMessage(StatsLogReport.parser(), extensionRegistry));
                            } else if (tag == 18) {
                                UidMapping.Builder subBuilder = null;
                                if ((this.bitField0_ & 1) == 1) {
                                    subBuilder = (UidMapping.Builder) this.uidMap_.toBuilder();
                                }
                                this.uidMap_ = (UidMapping) input.readMessage(UidMapping.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom((GeneratedMessageLite) this.uidMap_);
                                    this.uidMap_ = (UidMapping) subBuilder.buildPartial();
                                }
                                this.bitField0_ |= 1;
                            } else if (tag == 24) {
                                this.bitField0_ |= 2;
                                this.lastReportElapsedNanos_ = input.readInt64();
                            } else if (tag == 32) {
                                this.bitField0_ |= 4;
                                this.currentReportElapsedNanos_ = input.readInt64();
                            } else if (tag == 40) {
                                this.bitField0_ |= 8;
                                this.lastReportWallClockNanos_ = input.readInt64();
                            } else if (tag == 48) {
                                this.bitField0_ |= 16;
                                this.currentReportWallClockNanos_ = input.readInt64();
                            } else if (tag == 58) {
                                if (!this.annotation_.isModifiable()) {
                                    this.annotation_ = GeneratedMessageLite.mutableCopy(this.annotation_);
                                }
                                this.annotation_.add((Annotation) input.readMessage(Annotation.parser(), extensionRegistry));
                            } else if (tag == 64) {
                                int rawValue = input.readEnum();
                                if (DumpReportReason.forNumber(rawValue) == null) {
                                    super.mergeVarintField(8, rawValue);
                                } else {
                                    this.bitField0_ = 32 | this.bitField0_;
                                    this.dumpReportReason_ = rawValue;
                                }
                            } else if (tag == 74) {
                                String s = input.readString();
                                if (!this.strings_.isModifiable()) {
                                    this.strings_ = GeneratedMessageLite.mutableCopy(this.strings_);
                                }
                                this.strings_.add(s);
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (ConfigMetricsReport.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static ConfigMetricsReport getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ConfigMetricsReport> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class ConfigMetricsReportList extends GeneratedMessageLite<ConfigMetricsReportList, Builder> implements ConfigMetricsReportListOrBuilder {
        public static final int CONFIG_KEY_FIELD_NUMBER = 1;
        private static final ConfigMetricsReportList DEFAULT_INSTANCE = new ConfigMetricsReportList();
        private static volatile Parser<ConfigMetricsReportList> PARSER = null;
        public static final int REPORTS_FIELD_NUMBER = 2;
        private int bitField0_;
        private ConfigKey configKey_;
        private Internal.ProtobufList<ConfigMetricsReport> reports_ = emptyProtobufList();

        public interface ConfigKeyOrBuilder extends MessageLiteOrBuilder {
            long getId();

            int getUid();

            boolean hasId();

            boolean hasUid();
        }

        private ConfigMetricsReportList() {
        }

        public static final class ConfigKey extends GeneratedMessageLite<ConfigKey, Builder> implements ConfigKeyOrBuilder {
            private static final ConfigKey DEFAULT_INSTANCE = new ConfigKey();
            public static final int ID_FIELD_NUMBER = 2;
            private static volatile Parser<ConfigKey> PARSER = null;
            public static final int UID_FIELD_NUMBER = 1;
            private int bitField0_;
            private long id_ = 0;
            private int uid_ = 0;

            private ConfigKey() {
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportList.ConfigKeyOrBuilder
            public boolean hasUid() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportList.ConfigKeyOrBuilder
            public int getUid() {
                return this.uid_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setUid(int value) {
                this.bitField0_ |= 1;
                this.uid_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearUid() {
                this.bitField0_ &= -2;
                this.uid_ = 0;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportList.ConfigKeyOrBuilder
            public boolean hasId() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportList.ConfigKeyOrBuilder
            public long getId() {
                return this.id_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setId(long value) {
                this.bitField0_ |= 2;
                this.id_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearId() {
                this.bitField0_ &= -3;
                this.id_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.uid_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt64(2, this.id_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.uid_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt64Size(2, this.id_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static ConfigKey parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (ConfigKey) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ConfigKey parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ConfigKey) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ConfigKey parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (ConfigKey) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ConfigKey parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ConfigKey) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ConfigKey parseFrom(InputStream input) throws IOException {
                return (ConfigKey) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ConfigKey parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ConfigKey) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ConfigKey parseDelimitedFrom(InputStream input) throws IOException {
                return (ConfigKey) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static ConfigKey parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ConfigKey) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ConfigKey parseFrom(CodedInputStream input) throws IOException {
                return (ConfigKey) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ConfigKey parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ConfigKey) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(ConfigKey prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<ConfigKey, Builder> implements ConfigKeyOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(ConfigKey.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.ConfigMetricsReportList.ConfigKeyOrBuilder
                public boolean hasUid() {
                    return ((ConfigKey) this.instance).hasUid();
                }

                @Override // com.android.os.StatsLog.ConfigMetricsReportList.ConfigKeyOrBuilder
                public int getUid() {
                    return ((ConfigKey) this.instance).getUid();
                }

                public Builder setUid(int value) {
                    copyOnWrite();
                    ((ConfigKey) this.instance).setUid(value);
                    return this;
                }

                public Builder clearUid() {
                    copyOnWrite();
                    ((ConfigKey) this.instance).clearUid();
                    return this;
                }

                @Override // com.android.os.StatsLog.ConfigMetricsReportList.ConfigKeyOrBuilder
                public boolean hasId() {
                    return ((ConfigKey) this.instance).hasId();
                }

                @Override // com.android.os.StatsLog.ConfigMetricsReportList.ConfigKeyOrBuilder
                public long getId() {
                    return ((ConfigKey) this.instance).getId();
                }

                public Builder setId(long value) {
                    copyOnWrite();
                    ((ConfigKey) this.instance).setId(value);
                    return this;
                }

                public Builder clearId() {
                    copyOnWrite();
                    ((ConfigKey) this.instance).clearId();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new ConfigKey();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        ConfigKey other = (ConfigKey) arg1;
                        this.uid_ = visitor.visitInt(hasUid(), this.uid_, other.hasUid(), other.uid_);
                        this.id_ = visitor.visitLong(hasId(), this.id_, other.hasId(), other.id_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.uid_ = input.readInt32();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.id_ = input.readInt64();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (ConfigKey.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static ConfigKey getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<ConfigKey> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
        public boolean hasConfigKey() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
        public ConfigKey getConfigKey() {
            ConfigKey configKey = this.configKey_;
            return configKey == null ? ConfigKey.getDefaultInstance() : configKey;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setConfigKey(ConfigKey value) {
            if (value != null) {
                this.configKey_ = value;
                this.bitField0_ |= 1;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setConfigKey(ConfigKey.Builder builderForValue) {
            this.configKey_ = (ConfigKey) builderForValue.build();
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeConfigKey(ConfigKey value) {
            ConfigKey configKey = this.configKey_;
            if (configKey == null || configKey == ConfigKey.getDefaultInstance()) {
                this.configKey_ = value;
            } else {
                this.configKey_ = (ConfigKey) ((ConfigKey.Builder) ConfigKey.newBuilder(this.configKey_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearConfigKey() {
            this.configKey_ = null;
            this.bitField0_ &= -2;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
        public List<ConfigMetricsReport> getReportsList() {
            return this.reports_;
        }

        public List<? extends ConfigMetricsReportOrBuilder> getReportsOrBuilderList() {
            return this.reports_;
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
        public int getReportsCount() {
            return this.reports_.size();
        }

        @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
        public ConfigMetricsReport getReports(int index) {
            return this.reports_.get(index);
        }

        public ConfigMetricsReportOrBuilder getReportsOrBuilder(int index) {
            return this.reports_.get(index);
        }

        private void ensureReportsIsMutable() {
            if (!this.reports_.isModifiable()) {
                this.reports_ = GeneratedMessageLite.mutableCopy(this.reports_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setReports(int index, ConfigMetricsReport value) {
            if (value != null) {
                ensureReportsIsMutable();
                this.reports_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setReports(int index, ConfigMetricsReport.Builder builderForValue) {
            ensureReportsIsMutable();
            this.reports_.set(index, (ConfigMetricsReport) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addReports(ConfigMetricsReport value) {
            if (value != null) {
                ensureReportsIsMutable();
                this.reports_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addReports(int index, ConfigMetricsReport value) {
            if (value != null) {
                ensureReportsIsMutable();
                this.reports_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addReports(ConfigMetricsReport.Builder builderForValue) {
            ensureReportsIsMutable();
            this.reports_.add((ConfigMetricsReport) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addReports(int index, ConfigMetricsReport.Builder builderForValue) {
            ensureReportsIsMutable();
            this.reports_.add(index, (ConfigMetricsReport) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllReports(Iterable<? extends ConfigMetricsReport> values) {
            ensureReportsIsMutable();
            AbstractMessageLite.addAll(values, this.reports_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearReports() {
            this.reports_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeReports(int index) {
            ensureReportsIsMutable();
            this.reports_.remove(index);
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeMessage(1, getConfigKey());
            }
            for (int i = 0; i < this.reports_.size(); i++) {
                output.writeMessage(2, this.reports_.get(i));
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeMessageSize(1, getConfigKey());
            }
            for (int i = 0; i < this.reports_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(2, this.reports_.get(i));
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static ConfigMetricsReportList parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ConfigMetricsReportList) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static ConfigMetricsReportList parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ConfigMetricsReportList) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static ConfigMetricsReportList parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ConfigMetricsReportList) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static ConfigMetricsReportList parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ConfigMetricsReportList) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static ConfigMetricsReportList parseFrom(InputStream input) throws IOException {
            return (ConfigMetricsReportList) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static ConfigMetricsReportList parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ConfigMetricsReportList) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static ConfigMetricsReportList parseDelimitedFrom(InputStream input) throws IOException {
            return (ConfigMetricsReportList) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static ConfigMetricsReportList parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ConfigMetricsReportList) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static ConfigMetricsReportList parseFrom(CodedInputStream input) throws IOException {
            return (ConfigMetricsReportList) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static ConfigMetricsReportList parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ConfigMetricsReportList) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ConfigMetricsReportList prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<ConfigMetricsReportList, Builder> implements ConfigMetricsReportListOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(ConfigMetricsReportList.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
            public boolean hasConfigKey() {
                return ((ConfigMetricsReportList) this.instance).hasConfigKey();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
            public ConfigKey getConfigKey() {
                return ((ConfigMetricsReportList) this.instance).getConfigKey();
            }

            public Builder setConfigKey(ConfigKey value) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).setConfigKey((ConfigMetricsReportList) value);
                return this;
            }

            public Builder setConfigKey(ConfigKey.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).setConfigKey((ConfigMetricsReportList) builderForValue);
                return this;
            }

            public Builder mergeConfigKey(ConfigKey value) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).mergeConfigKey(value);
                return this;
            }

            public Builder clearConfigKey() {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).clearConfigKey();
                return this;
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
            public List<ConfigMetricsReport> getReportsList() {
                return Collections.unmodifiableList(((ConfigMetricsReportList) this.instance).getReportsList());
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
            public int getReportsCount() {
                return ((ConfigMetricsReportList) this.instance).getReportsCount();
            }

            @Override // com.android.os.StatsLog.ConfigMetricsReportListOrBuilder
            public ConfigMetricsReport getReports(int index) {
                return ((ConfigMetricsReportList) this.instance).getReports(index);
            }

            public Builder setReports(int index, ConfigMetricsReport value) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).setReports((ConfigMetricsReportList) index, (int) value);
                return this;
            }

            public Builder setReports(int index, ConfigMetricsReport.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).setReports((ConfigMetricsReportList) index, (int) builderForValue);
                return this;
            }

            public Builder addReports(ConfigMetricsReport value) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).addReports((ConfigMetricsReportList) value);
                return this;
            }

            public Builder addReports(int index, ConfigMetricsReport value) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).addReports((ConfigMetricsReportList) index, (int) value);
                return this;
            }

            public Builder addReports(ConfigMetricsReport.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).addReports((ConfigMetricsReportList) builderForValue);
                return this;
            }

            public Builder addReports(int index, ConfigMetricsReport.Builder builderForValue) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).addReports((ConfigMetricsReportList) index, (int) builderForValue);
                return this;
            }

            public Builder addAllReports(Iterable<? extends ConfigMetricsReport> values) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).addAllReports(values);
                return this;
            }

            public Builder clearReports() {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).clearReports();
                return this;
            }

            public Builder removeReports(int index) {
                copyOnWrite();
                ((ConfigMetricsReportList) this.instance).removeReports(index);
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new ConfigMetricsReportList();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.reports_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    ConfigMetricsReportList other = (ConfigMetricsReportList) arg1;
                    this.configKey_ = (ConfigKey) visitor.visitMessage(this.configKey_, other.configKey_);
                    this.reports_ = visitor.visitList(this.reports_, other.reports_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 10) {
                                ConfigKey.Builder subBuilder = null;
                                if ((this.bitField0_ & 1) == 1) {
                                    subBuilder = (ConfigKey.Builder) this.configKey_.toBuilder();
                                }
                                this.configKey_ = (ConfigKey) input.readMessage(ConfigKey.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom((GeneratedMessageLite) this.configKey_);
                                    this.configKey_ = (ConfigKey) subBuilder.buildPartial();
                                }
                                this.bitField0_ |= 1;
                            } else if (tag == 18) {
                                if (!this.reports_.isModifiable()) {
                                    this.reports_ = GeneratedMessageLite.mutableCopy(this.reports_);
                                }
                                this.reports_.add((ConfigMetricsReport) input.readMessage(ConfigMetricsReport.parser(), extensionRegistry));
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (ConfigMetricsReportList.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static ConfigMetricsReportList getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ConfigMetricsReportList> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class StatsdStatsReport extends GeneratedMessageLite<StatsdStatsReport, Builder> implements StatsdStatsReportOrBuilder {
        public static final int ACTIVATION_GUARDRAIL_STATS_FIELD_NUMBER = 19;
        public static final int ANOMALY_ALARM_STATS_FIELD_NUMBER = 9;
        public static final int ATOM_METRIC_STATS_FIELD_NUMBER = 17;
        public static final int ATOM_STATS_FIELD_NUMBER = 7;
        public static final int CONFIG_STATS_FIELD_NUMBER = 3;
        private static final StatsdStatsReport DEFAULT_INSTANCE = new StatsdStatsReport();
        public static final int DETECTED_LOG_LOSS_FIELD_NUMBER = 16;
        public static final int LOGGER_ERROR_STATS_FIELD_NUMBER = 11;
        public static final int LOG_LOSS_STATS_FIELD_NUMBER = 14;
        private static volatile Parser<StatsdStatsReport> PARSER = null;
        public static final int PERIODIC_ALARM_STATS_FIELD_NUMBER = 12;
        public static final int PULLED_ATOM_STATS_FIELD_NUMBER = 10;
        public static final int QUEUE_OVERFLOW_FIELD_NUMBER = 18;
        public static final int SKIPPED_LOG_EVENT_STATS_FIELD_NUMBER = 13;
        public static final int STATS_BEGIN_TIME_SEC_FIELD_NUMBER = 1;
        public static final int STATS_END_TIME_SEC_FIELD_NUMBER = 2;
        public static final int SYSTEM_RESTART_SEC_FIELD_NUMBER = 15;
        public static final int UIDMAP_STATS_FIELD_NUMBER = 8;
        private Internal.ProtobufList<ActivationBroadcastGuardrail> activationGuardrailStats_ = emptyProtobufList();
        private AnomalyAlarmStats anomalyAlarmStats_;
        private Internal.ProtobufList<AtomMetricStats> atomMetricStats_ = emptyProtobufList();
        private Internal.ProtobufList<AtomStats> atomStats_ = emptyProtobufList();
        private int bitField0_;
        private Internal.ProtobufList<ConfigStats> configStats_ = emptyProtobufList();
        private Internal.ProtobufList<LogLossStats> detectedLogLoss_ = emptyProtobufList();
        private Internal.LongList logLossStats_ = emptyLongList();
        private Internal.ProtobufList<LoggerErrorStats> loggerErrorStats_ = emptyProtobufList();
        private PeriodicAlarmStats periodicAlarmStats_;
        private Internal.ProtobufList<PulledAtomStats> pulledAtomStats_ = emptyProtobufList();
        private EventQueueOverflow queueOverflow_;
        private Internal.ProtobufList<SkippedLogEventStats> skippedLogEventStats_ = emptyProtobufList();
        private int statsBeginTimeSec_ = 0;
        private int statsEndTimeSec_ = 0;
        private Internal.IntList systemRestartSec_ = emptyIntList();
        private UidMapStats uidmapStats_;

        public interface ActivationBroadcastGuardrailOrBuilder extends MessageLiteOrBuilder {
            int getGuardrailMetSec(int i);

            int getGuardrailMetSecCount();

            List<Integer> getGuardrailMetSecList();

            int getUid();

            boolean hasUid();
        }

        public interface AlertStatsOrBuilder extends MessageLiteOrBuilder {
            int getAlertedTimes();

            long getId();

            boolean hasAlertedTimes();

            boolean hasId();
        }

        public interface AnomalyAlarmStatsOrBuilder extends MessageLiteOrBuilder {
            int getAlarmsRegistered();

            boolean hasAlarmsRegistered();
        }

        public interface AtomMetricStatsOrBuilder extends MessageLiteOrBuilder {
            long getBadValueType();

            long getBucketCount();

            long getBucketDropped();

            long getBucketUnknownCondition();

            long getConditionChangeInNextBucket();

            long getHardDimensionLimitReached();

            long getInvalidatedBucket();

            long getLateLogEventSkipped();

            long getMaxBucketBoundaryDelayNs();

            long getMetricId();

            long getMinBucketBoundaryDelayNs();

            long getSkippedForwardBuckets();

            boolean hasBadValueType();

            boolean hasBucketCount();

            boolean hasBucketDropped();

            boolean hasBucketUnknownCondition();

            boolean hasConditionChangeInNextBucket();

            boolean hasHardDimensionLimitReached();

            boolean hasInvalidatedBucket();

            boolean hasLateLogEventSkipped();

            boolean hasMaxBucketBoundaryDelayNs();

            boolean hasMetricId();

            boolean hasMinBucketBoundaryDelayNs();

            boolean hasSkippedForwardBuckets();
        }

        public interface AtomStatsOrBuilder extends MessageLiteOrBuilder {
            int getCount();

            int getTag();

            boolean hasCount();

            boolean hasTag();
        }

        public interface ConditionStatsOrBuilder extends MessageLiteOrBuilder {
            long getId();

            int getMaxTupleCounts();

            boolean hasId();

            boolean hasMaxTupleCounts();
        }

        public interface ConfigStatsOrBuilder extends MessageLiteOrBuilder {
            int getActivationTimeSec(int i);

            int getActivationTimeSecCount();

            List<Integer> getActivationTimeSecList();

            int getAlertCount();

            AlertStats getAlertStats(int i);

            int getAlertStatsCount();

            List<AlertStats> getAlertStatsList();

            ConfigStats.Annotation getAnnotation(int i);

            int getAnnotationCount();

            List<ConfigStats.Annotation> getAnnotationList();

            int getBroadcastSentTimeSec(int i);

            int getBroadcastSentTimeSecCount();

            List<Integer> getBroadcastSentTimeSecList();

            int getConditionCount();

            ConditionStats getConditionStats(int i);

            int getConditionStatsCount();

            List<ConditionStats> getConditionStatsList();

            int getCreationTimeSec();

            long getDataDropBytes(int i);

            int getDataDropBytesCount();

            List<Long> getDataDropBytesList();

            int getDataDropTimeSec(int i);

            int getDataDropTimeSecCount();

            List<Integer> getDataDropTimeSecList();

            int getDeactivationTimeSec(int i);

            int getDeactivationTimeSecCount();

            List<Integer> getDeactivationTimeSecList();

            int getDeletionTimeSec();

            int getDumpReportDataSize(int i);

            int getDumpReportDataSizeCount();

            List<Integer> getDumpReportDataSizeList();

            int getDumpReportTimeSec(int i);

            int getDumpReportTimeSecCount();

            List<Integer> getDumpReportTimeSecList();

            long getId();

            boolean getIsValid();

            int getMatcherCount();

            MatcherStats getMatcherStats(int i);

            int getMatcherStatsCount();

            List<MatcherStats> getMatcherStatsList();

            int getMetricCount();

            MetricStats getMetricDimensionInConditionStats(int i);

            int getMetricDimensionInConditionStatsCount();

            List<MetricStats> getMetricDimensionInConditionStatsList();

            MetricStats getMetricStats(int i);

            int getMetricStatsCount();

            List<MetricStats> getMetricStatsList();

            int getResetTimeSec();

            int getUid();

            boolean hasAlertCount();

            boolean hasConditionCount();

            boolean hasCreationTimeSec();

            boolean hasDeletionTimeSec();

            boolean hasId();

            boolean hasIsValid();

            boolean hasMatcherCount();

            boolean hasMetricCount();

            boolean hasResetTimeSec();

            boolean hasUid();
        }

        public interface EventQueueOverflowOrBuilder extends MessageLiteOrBuilder {
            int getCount();

            long getMaxQueueHistoryNs();

            long getMinQueueHistoryNs();

            boolean hasCount();

            boolean hasMaxQueueHistoryNs();

            boolean hasMinQueueHistoryNs();
        }

        public interface LogLossStatsOrBuilder extends MessageLiteOrBuilder {
            int getCount();

            int getDetectedTimeSec();

            int getLastError();

            int getLastTag();

            int getPid();

            int getUid();

            boolean hasCount();

            boolean hasDetectedTimeSec();

            boolean hasLastError();

            boolean hasLastTag();

            boolean hasPid();

            boolean hasUid();
        }

        public interface LoggerErrorStatsOrBuilder extends MessageLiteOrBuilder {
            int getErrorCode();

            int getLoggerDisconnectionSec();

            boolean hasErrorCode();

            boolean hasLoggerDisconnectionSec();
        }

        public interface MatcherStatsOrBuilder extends MessageLiteOrBuilder {
            long getId();

            int getMatchedTimes();

            boolean hasId();

            boolean hasMatchedTimes();
        }

        public interface MetricStatsOrBuilder extends MessageLiteOrBuilder {
            long getId();

            int getMaxTupleCounts();

            boolean hasId();

            boolean hasMaxTupleCounts();
        }

        public interface PeriodicAlarmStatsOrBuilder extends MessageLiteOrBuilder {
            int getAlarmsRegistered();

            boolean hasAlarmsRegistered();
        }

        public interface PulledAtomStatsOrBuilder extends MessageLiteOrBuilder {
            int getAtomId();

            long getAveragePullDelayNanos();

            long getAveragePullTimeNanos();

            long getDataError();

            long getEmptyData();

            long getMaxPullDelayNanos();

            long getMaxPullTimeNanos();

            long getMinPullIntervalSec();

            long getPullExceedMaxDelay();

            long getPullFailed();

            long getPullTimeout();

            long getRegisteredCount();

            long getStatsCompanionPullBinderTransactionFailed();

            long getStatsCompanionPullFailed();

            long getTotalPull();

            long getTotalPullFromCache();

            long getUnregisteredCount();

            boolean hasAtomId();

            boolean hasAveragePullDelayNanos();

            boolean hasAveragePullTimeNanos();

            boolean hasDataError();

            boolean hasEmptyData();

            boolean hasMaxPullDelayNanos();

            boolean hasMaxPullTimeNanos();

            boolean hasMinPullIntervalSec();

            boolean hasPullExceedMaxDelay();

            boolean hasPullFailed();

            boolean hasPullTimeout();

            boolean hasRegisteredCount();

            boolean hasStatsCompanionPullBinderTransactionFailed();

            boolean hasStatsCompanionPullFailed();

            boolean hasTotalPull();

            boolean hasTotalPullFromCache();

            boolean hasUnregisteredCount();
        }

        public interface SkippedLogEventStatsOrBuilder extends MessageLiteOrBuilder {
            long getElapsedTimestampNanos();

            int getTag();

            boolean hasElapsedTimestampNanos();

            boolean hasTag();
        }

        public interface UidMapStatsOrBuilder extends MessageLiteOrBuilder {
            int getBytesUsed();

            int getChanges();

            int getDeletedApps();

            int getDroppedChanges();

            boolean hasBytesUsed();

            boolean hasChanges();

            boolean hasDeletedApps();

            boolean hasDroppedChanges();
        }

        private StatsdStatsReport() {
        }

        public static final class MatcherStats extends GeneratedMessageLite<MatcherStats, Builder> implements MatcherStatsOrBuilder {
            private static final MatcherStats DEFAULT_INSTANCE = new MatcherStats();
            public static final int ID_FIELD_NUMBER = 1;
            public static final int MATCHED_TIMES_FIELD_NUMBER = 2;
            private static volatile Parser<MatcherStats> PARSER;
            private int bitField0_;
            private long id_ = 0;
            private int matchedTimes_ = 0;

            private MatcherStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.MatcherStatsOrBuilder
            public boolean hasId() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.MatcherStatsOrBuilder
            public long getId() {
                return this.id_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setId(long value) {
                this.bitField0_ |= 1;
                this.id_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearId() {
                this.bitField0_ &= -2;
                this.id_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.MatcherStatsOrBuilder
            public boolean hasMatchedTimes() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.MatcherStatsOrBuilder
            public int getMatchedTimes() {
                return this.matchedTimes_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMatchedTimes(int value) {
                this.bitField0_ |= 2;
                this.matchedTimes_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMatchedTimes() {
                this.bitField0_ &= -3;
                this.matchedTimes_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt64(1, this.id_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt32(2, this.matchedTimes_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt64Size(1, this.id_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt32Size(2, this.matchedTimes_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static MatcherStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (MatcherStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static MatcherStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (MatcherStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static MatcherStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (MatcherStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static MatcherStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (MatcherStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static MatcherStats parseFrom(InputStream input) throws IOException {
                return (MatcherStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static MatcherStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (MatcherStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static MatcherStats parseDelimitedFrom(InputStream input) throws IOException {
                return (MatcherStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static MatcherStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (MatcherStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static MatcherStats parseFrom(CodedInputStream input) throws IOException {
                return (MatcherStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static MatcherStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (MatcherStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(MatcherStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<MatcherStats, Builder> implements MatcherStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(MatcherStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.MatcherStatsOrBuilder
                public boolean hasId() {
                    return ((MatcherStats) this.instance).hasId();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.MatcherStatsOrBuilder
                public long getId() {
                    return ((MatcherStats) this.instance).getId();
                }

                public Builder setId(long value) {
                    copyOnWrite();
                    ((MatcherStats) this.instance).setId(value);
                    return this;
                }

                public Builder clearId() {
                    copyOnWrite();
                    ((MatcherStats) this.instance).clearId();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.MatcherStatsOrBuilder
                public boolean hasMatchedTimes() {
                    return ((MatcherStats) this.instance).hasMatchedTimes();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.MatcherStatsOrBuilder
                public int getMatchedTimes() {
                    return ((MatcherStats) this.instance).getMatchedTimes();
                }

                public Builder setMatchedTimes(int value) {
                    copyOnWrite();
                    ((MatcherStats) this.instance).setMatchedTimes(value);
                    return this;
                }

                public Builder clearMatchedTimes() {
                    copyOnWrite();
                    ((MatcherStats) this.instance).clearMatchedTimes();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new MatcherStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        MatcherStats other = (MatcherStats) arg1;
                        this.id_ = visitor.visitLong(hasId(), this.id_, other.hasId(), other.id_);
                        this.matchedTimes_ = visitor.visitInt(hasMatchedTimes(), this.matchedTimes_, other.hasMatchedTimes(), other.matchedTimes_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.id_ = input.readInt64();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.matchedTimes_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (MatcherStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static MatcherStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<MatcherStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class ConditionStats extends GeneratedMessageLite<ConditionStats, Builder> implements ConditionStatsOrBuilder {
            private static final ConditionStats DEFAULT_INSTANCE = new ConditionStats();
            public static final int ID_FIELD_NUMBER = 1;
            public static final int MAX_TUPLE_COUNTS_FIELD_NUMBER = 2;
            private static volatile Parser<ConditionStats> PARSER;
            private int bitField0_;
            private long id_ = 0;
            private int maxTupleCounts_ = 0;

            private ConditionStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConditionStatsOrBuilder
            public boolean hasId() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConditionStatsOrBuilder
            public long getId() {
                return this.id_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setId(long value) {
                this.bitField0_ |= 1;
                this.id_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearId() {
                this.bitField0_ &= -2;
                this.id_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConditionStatsOrBuilder
            public boolean hasMaxTupleCounts() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConditionStatsOrBuilder
            public int getMaxTupleCounts() {
                return this.maxTupleCounts_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMaxTupleCounts(int value) {
                this.bitField0_ |= 2;
                this.maxTupleCounts_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMaxTupleCounts() {
                this.bitField0_ &= -3;
                this.maxTupleCounts_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt64(1, this.id_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt32(2, this.maxTupleCounts_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt64Size(1, this.id_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt32Size(2, this.maxTupleCounts_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static ConditionStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (ConditionStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ConditionStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ConditionStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ConditionStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (ConditionStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ConditionStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ConditionStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ConditionStats parseFrom(InputStream input) throws IOException {
                return (ConditionStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ConditionStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ConditionStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ConditionStats parseDelimitedFrom(InputStream input) throws IOException {
                return (ConditionStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static ConditionStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ConditionStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ConditionStats parseFrom(CodedInputStream input) throws IOException {
                return (ConditionStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ConditionStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ConditionStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(ConditionStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<ConditionStats, Builder> implements ConditionStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(ConditionStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConditionStatsOrBuilder
                public boolean hasId() {
                    return ((ConditionStats) this.instance).hasId();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConditionStatsOrBuilder
                public long getId() {
                    return ((ConditionStats) this.instance).getId();
                }

                public Builder setId(long value) {
                    copyOnWrite();
                    ((ConditionStats) this.instance).setId(value);
                    return this;
                }

                public Builder clearId() {
                    copyOnWrite();
                    ((ConditionStats) this.instance).clearId();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConditionStatsOrBuilder
                public boolean hasMaxTupleCounts() {
                    return ((ConditionStats) this.instance).hasMaxTupleCounts();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConditionStatsOrBuilder
                public int getMaxTupleCounts() {
                    return ((ConditionStats) this.instance).getMaxTupleCounts();
                }

                public Builder setMaxTupleCounts(int value) {
                    copyOnWrite();
                    ((ConditionStats) this.instance).setMaxTupleCounts(value);
                    return this;
                }

                public Builder clearMaxTupleCounts() {
                    copyOnWrite();
                    ((ConditionStats) this.instance).clearMaxTupleCounts();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new ConditionStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        ConditionStats other = (ConditionStats) arg1;
                        this.id_ = visitor.visitLong(hasId(), this.id_, other.hasId(), other.id_);
                        this.maxTupleCounts_ = visitor.visitInt(hasMaxTupleCounts(), this.maxTupleCounts_, other.hasMaxTupleCounts(), other.maxTupleCounts_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.id_ = input.readInt64();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.maxTupleCounts_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (ConditionStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static ConditionStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<ConditionStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class MetricStats extends GeneratedMessageLite<MetricStats, Builder> implements MetricStatsOrBuilder {
            private static final MetricStats DEFAULT_INSTANCE = new MetricStats();
            public static final int ID_FIELD_NUMBER = 1;
            public static final int MAX_TUPLE_COUNTS_FIELD_NUMBER = 2;
            private static volatile Parser<MetricStats> PARSER;
            private int bitField0_;
            private long id_ = 0;
            private int maxTupleCounts_ = 0;

            private MetricStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.MetricStatsOrBuilder
            public boolean hasId() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.MetricStatsOrBuilder
            public long getId() {
                return this.id_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setId(long value) {
                this.bitField0_ |= 1;
                this.id_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearId() {
                this.bitField0_ &= -2;
                this.id_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.MetricStatsOrBuilder
            public boolean hasMaxTupleCounts() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.MetricStatsOrBuilder
            public int getMaxTupleCounts() {
                return this.maxTupleCounts_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMaxTupleCounts(int value) {
                this.bitField0_ |= 2;
                this.maxTupleCounts_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMaxTupleCounts() {
                this.bitField0_ &= -3;
                this.maxTupleCounts_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt64(1, this.id_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt32(2, this.maxTupleCounts_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt64Size(1, this.id_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt32Size(2, this.maxTupleCounts_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static MetricStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (MetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static MetricStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (MetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static MetricStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (MetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static MetricStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (MetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static MetricStats parseFrom(InputStream input) throws IOException {
                return (MetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static MetricStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (MetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static MetricStats parseDelimitedFrom(InputStream input) throws IOException {
                return (MetricStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static MetricStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (MetricStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static MetricStats parseFrom(CodedInputStream input) throws IOException {
                return (MetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static MetricStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (MetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(MetricStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<MetricStats, Builder> implements MetricStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(MetricStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.MetricStatsOrBuilder
                public boolean hasId() {
                    return ((MetricStats) this.instance).hasId();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.MetricStatsOrBuilder
                public long getId() {
                    return ((MetricStats) this.instance).getId();
                }

                public Builder setId(long value) {
                    copyOnWrite();
                    ((MetricStats) this.instance).setId(value);
                    return this;
                }

                public Builder clearId() {
                    copyOnWrite();
                    ((MetricStats) this.instance).clearId();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.MetricStatsOrBuilder
                public boolean hasMaxTupleCounts() {
                    return ((MetricStats) this.instance).hasMaxTupleCounts();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.MetricStatsOrBuilder
                public int getMaxTupleCounts() {
                    return ((MetricStats) this.instance).getMaxTupleCounts();
                }

                public Builder setMaxTupleCounts(int value) {
                    copyOnWrite();
                    ((MetricStats) this.instance).setMaxTupleCounts(value);
                    return this;
                }

                public Builder clearMaxTupleCounts() {
                    copyOnWrite();
                    ((MetricStats) this.instance).clearMaxTupleCounts();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new MetricStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        MetricStats other = (MetricStats) arg1;
                        this.id_ = visitor.visitLong(hasId(), this.id_, other.hasId(), other.id_);
                        this.maxTupleCounts_ = visitor.visitInt(hasMaxTupleCounts(), this.maxTupleCounts_, other.hasMaxTupleCounts(), other.maxTupleCounts_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.id_ = input.readInt64();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.maxTupleCounts_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (MetricStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static MetricStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<MetricStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class AlertStats extends GeneratedMessageLite<AlertStats, Builder> implements AlertStatsOrBuilder {
            public static final int ALERTED_TIMES_FIELD_NUMBER = 2;
            private static final AlertStats DEFAULT_INSTANCE = new AlertStats();
            public static final int ID_FIELD_NUMBER = 1;
            private static volatile Parser<AlertStats> PARSER;
            private int alertedTimes_ = 0;
            private int bitField0_;
            private long id_ = 0;

            private AlertStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AlertStatsOrBuilder
            public boolean hasId() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AlertStatsOrBuilder
            public long getId() {
                return this.id_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setId(long value) {
                this.bitField0_ |= 1;
                this.id_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearId() {
                this.bitField0_ &= -2;
                this.id_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AlertStatsOrBuilder
            public boolean hasAlertedTimes() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AlertStatsOrBuilder
            public int getAlertedTimes() {
                return this.alertedTimes_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAlertedTimes(int value) {
                this.bitField0_ |= 2;
                this.alertedTimes_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAlertedTimes() {
                this.bitField0_ &= -3;
                this.alertedTimes_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt64(1, this.id_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt32(2, this.alertedTimes_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt64Size(1, this.id_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt32Size(2, this.alertedTimes_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static AlertStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (AlertStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static AlertStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (AlertStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static AlertStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (AlertStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static AlertStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (AlertStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static AlertStats parseFrom(InputStream input) throws IOException {
                return (AlertStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static AlertStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AlertStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static AlertStats parseDelimitedFrom(InputStream input) throws IOException {
                return (AlertStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static AlertStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AlertStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static AlertStats parseFrom(CodedInputStream input) throws IOException {
                return (AlertStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static AlertStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AlertStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(AlertStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<AlertStats, Builder> implements AlertStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(AlertStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AlertStatsOrBuilder
                public boolean hasId() {
                    return ((AlertStats) this.instance).hasId();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AlertStatsOrBuilder
                public long getId() {
                    return ((AlertStats) this.instance).getId();
                }

                public Builder setId(long value) {
                    copyOnWrite();
                    ((AlertStats) this.instance).setId(value);
                    return this;
                }

                public Builder clearId() {
                    copyOnWrite();
                    ((AlertStats) this.instance).clearId();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AlertStatsOrBuilder
                public boolean hasAlertedTimes() {
                    return ((AlertStats) this.instance).hasAlertedTimes();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AlertStatsOrBuilder
                public int getAlertedTimes() {
                    return ((AlertStats) this.instance).getAlertedTimes();
                }

                public Builder setAlertedTimes(int value) {
                    copyOnWrite();
                    ((AlertStats) this.instance).setAlertedTimes(value);
                    return this;
                }

                public Builder clearAlertedTimes() {
                    copyOnWrite();
                    ((AlertStats) this.instance).clearAlertedTimes();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new AlertStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        AlertStats other = (AlertStats) arg1;
                        this.id_ = visitor.visitLong(hasId(), this.id_, other.hasId(), other.id_);
                        this.alertedTimes_ = visitor.visitInt(hasAlertedTimes(), this.alertedTimes_, other.hasAlertedTimes(), other.alertedTimes_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.id_ = input.readInt64();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.alertedTimes_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (AlertStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static AlertStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<AlertStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class ConfigStats extends GeneratedMessageLite<ConfigStats, Builder> implements ConfigStatsOrBuilder {
            public static final int ACTIVATION_TIME_SEC_FIELD_NUMBER = 22;
            public static final int ALERT_COUNT_FIELD_NUMBER = 8;
            public static final int ALERT_STATS_FIELD_NUMBER = 16;
            public static final int ANNOTATION_FIELD_NUMBER = 18;
            public static final int BROADCAST_SENT_TIME_SEC_FIELD_NUMBER = 10;
            public static final int CONDITION_COUNT_FIELD_NUMBER = 6;
            public static final int CONDITION_STATS_FIELD_NUMBER = 14;
            public static final int CREATION_TIME_SEC_FIELD_NUMBER = 3;
            public static final int DATA_DROP_BYTES_FIELD_NUMBER = 21;
            public static final int DATA_DROP_TIME_SEC_FIELD_NUMBER = 11;
            public static final int DEACTIVATION_TIME_SEC_FIELD_NUMBER = 23;
            private static final ConfigStats DEFAULT_INSTANCE = new ConfigStats();
            public static final int DELETION_TIME_SEC_FIELD_NUMBER = 4;
            public static final int DUMP_REPORT_DATA_SIZE_FIELD_NUMBER = 20;
            public static final int DUMP_REPORT_TIME_SEC_FIELD_NUMBER = 12;
            public static final int ID_FIELD_NUMBER = 2;
            public static final int IS_VALID_FIELD_NUMBER = 9;
            public static final int MATCHER_COUNT_FIELD_NUMBER = 7;
            public static final int MATCHER_STATS_FIELD_NUMBER = 13;
            public static final int METRIC_COUNT_FIELD_NUMBER = 5;
            public static final int METRIC_DIMENSION_IN_CONDITION_STATS_FIELD_NUMBER = 17;
            public static final int METRIC_STATS_FIELD_NUMBER = 15;
            private static volatile Parser<ConfigStats> PARSER = null;
            public static final int RESET_TIME_SEC_FIELD_NUMBER = 19;
            public static final int UID_FIELD_NUMBER = 1;
            private Internal.IntList activationTimeSec_ = emptyIntList();
            private int alertCount_ = 0;
            private Internal.ProtobufList<AlertStats> alertStats_ = emptyProtobufList();
            private Internal.ProtobufList<Annotation> annotation_ = emptyProtobufList();
            private int bitField0_;
            private Internal.IntList broadcastSentTimeSec_ = emptyIntList();
            private int conditionCount_ = 0;
            private Internal.ProtobufList<ConditionStats> conditionStats_ = emptyProtobufList();
            private int creationTimeSec_ = 0;
            private Internal.LongList dataDropBytes_ = emptyLongList();
            private Internal.IntList dataDropTimeSec_ = emptyIntList();
            private Internal.IntList deactivationTimeSec_ = emptyIntList();
            private int deletionTimeSec_ = 0;
            private Internal.IntList dumpReportDataSize_ = emptyIntList();
            private Internal.IntList dumpReportTimeSec_ = emptyIntList();
            private long id_ = 0;
            private boolean isValid_ = false;
            private int matcherCount_ = 0;
            private Internal.ProtobufList<MatcherStats> matcherStats_ = emptyProtobufList();
            private int metricCount_ = 0;
            private Internal.ProtobufList<MetricStats> metricDimensionInConditionStats_ = emptyProtobufList();
            private Internal.ProtobufList<MetricStats> metricStats_ = emptyProtobufList();
            private int resetTimeSec_ = 0;
            private int uid_ = 0;

            public interface AnnotationOrBuilder extends MessageLiteOrBuilder {
                int getFieldInt32();

                long getFieldInt64();

                boolean hasFieldInt32();

                boolean hasFieldInt64();
            }

            private ConfigStats() {
            }

            public static final class Annotation extends GeneratedMessageLite<Annotation, Builder> implements AnnotationOrBuilder {
                private static final Annotation DEFAULT_INSTANCE = new Annotation();
                public static final int FIELD_INT32_FIELD_NUMBER = 2;
                public static final int FIELD_INT64_FIELD_NUMBER = 1;
                private static volatile Parser<Annotation> PARSER;
                private int bitField0_;
                private int fieldInt32_ = 0;
                private long fieldInt64_ = 0;

                private Annotation() {
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStats.AnnotationOrBuilder
                public boolean hasFieldInt64() {
                    return (this.bitField0_ & 1) == 1;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStats.AnnotationOrBuilder
                public long getFieldInt64() {
                    return this.fieldInt64_;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setFieldInt64(long value) {
                    this.bitField0_ |= 1;
                    this.fieldInt64_ = value;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearFieldInt64() {
                    this.bitField0_ &= -2;
                    this.fieldInt64_ = 0;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStats.AnnotationOrBuilder
                public boolean hasFieldInt32() {
                    return (this.bitField0_ & 2) == 2;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStats.AnnotationOrBuilder
                public int getFieldInt32() {
                    return this.fieldInt32_;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void setFieldInt32(int value) {
                    this.bitField0_ |= 2;
                    this.fieldInt32_ = value;
                }

                /* access modifiers changed from: private */
                /* access modifiers changed from: public */
                private void clearFieldInt32() {
                    this.bitField0_ &= -3;
                    this.fieldInt32_ = 0;
                }

                @Override // com.google.protobuf.MessageLite
                public void writeTo(CodedOutputStream output) throws IOException {
                    if ((this.bitField0_ & 1) == 1) {
                        output.writeInt64(1, this.fieldInt64_);
                    }
                    if ((this.bitField0_ & 2) == 2) {
                        output.writeInt32(2, this.fieldInt32_);
                    }
                    this.unknownFields.writeTo(output);
                }

                @Override // com.google.protobuf.MessageLite
                public int getSerializedSize() {
                    int size = this.memoizedSerializedSize;
                    if (size != -1) {
                        return size;
                    }
                    int size2 = 0;
                    if ((this.bitField0_ & 1) == 1) {
                        size2 = 0 + CodedOutputStream.computeInt64Size(1, this.fieldInt64_);
                    }
                    if ((this.bitField0_ & 2) == 2) {
                        size2 += CodedOutputStream.computeInt32Size(2, this.fieldInt32_);
                    }
                    int size3 = size2 + this.unknownFields.getSerializedSize();
                    this.memoizedSerializedSize = size3;
                    return size3;
                }

                public static Annotation parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
                }

                public static Annotation parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
                }

                public static Annotation parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
                }

                public static Annotation parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
                }

                public static Annotation parseFrom(InputStream input) throws IOException {
                    return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
                }

                public static Annotation parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
                }

                public static Annotation parseDelimitedFrom(InputStream input) throws IOException {
                    return (Annotation) parseDelimitedFrom(DEFAULT_INSTANCE, input);
                }

                public static Annotation parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (Annotation) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
                }

                public static Annotation parseFrom(CodedInputStream input) throws IOException {
                    return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
                }

                public static Annotation parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (Annotation) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
                }

                public static Builder newBuilder() {
                    return (Builder) DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(Annotation prototype) {
                    return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
                }

                public static final class Builder extends GeneratedMessageLite.Builder<Annotation, Builder> implements AnnotationOrBuilder {
                    /* synthetic */ Builder(AnonymousClass1 x0) {
                        this();
                    }

                    private Builder() {
                        super(Annotation.DEFAULT_INSTANCE);
                    }

                    @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStats.AnnotationOrBuilder
                    public boolean hasFieldInt64() {
                        return ((Annotation) this.instance).hasFieldInt64();
                    }

                    @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStats.AnnotationOrBuilder
                    public long getFieldInt64() {
                        return ((Annotation) this.instance).getFieldInt64();
                    }

                    public Builder setFieldInt64(long value) {
                        copyOnWrite();
                        ((Annotation) this.instance).setFieldInt64(value);
                        return this;
                    }

                    public Builder clearFieldInt64() {
                        copyOnWrite();
                        ((Annotation) this.instance).clearFieldInt64();
                        return this;
                    }

                    @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStats.AnnotationOrBuilder
                    public boolean hasFieldInt32() {
                        return ((Annotation) this.instance).hasFieldInt32();
                    }

                    @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStats.AnnotationOrBuilder
                    public int getFieldInt32() {
                        return ((Annotation) this.instance).getFieldInt32();
                    }

                    public Builder setFieldInt32(int value) {
                        copyOnWrite();
                        ((Annotation) this.instance).setFieldInt32(value);
                        return this;
                    }

                    public Builder clearFieldInt32() {
                        copyOnWrite();
                        ((Annotation) this.instance).clearFieldInt32();
                        return this;
                    }
                }

                /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
                /* access modifiers changed from: protected */
                @Override // com.google.protobuf.GeneratedMessageLite
                public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                    switch (method) {
                        case NEW_MUTABLE_INSTANCE:
                            return new Annotation();
                        case IS_INITIALIZED:
                            return DEFAULT_INSTANCE;
                        case MAKE_IMMUTABLE:
                            return null;
                        case NEW_BUILDER:
                            return new Builder(null);
                        case VISIT:
                            GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                            Annotation other = (Annotation) arg1;
                            this.fieldInt64_ = visitor.visitLong(hasFieldInt64(), this.fieldInt64_, other.hasFieldInt64(), other.fieldInt64_);
                            this.fieldInt32_ = visitor.visitInt(hasFieldInt32(), this.fieldInt32_, other.hasFieldInt32(), other.fieldInt32_);
                            if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                                this.bitField0_ |= other.bitField0_;
                            }
                            return this;
                        case MERGE_FROM_STREAM:
                            CodedInputStream input = (CodedInputStream) arg0;
                            ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                            boolean done = false;
                            while (!done) {
                                try {
                                    int tag = input.readTag();
                                    if (tag == 0) {
                                        done = true;
                                    } else if (tag == 8) {
                                        this.bitField0_ |= 1;
                                        this.fieldInt64_ = input.readInt64();
                                    } else if (tag == 16) {
                                        this.bitField0_ |= 2;
                                        this.fieldInt32_ = input.readInt32();
                                    } else if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                } catch (InvalidProtocolBufferException e) {
                                    throw new RuntimeException(e.setUnfinishedMessage(this));
                                } catch (IOException e2) {
                                    throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                                }
                            }
                            break;
                        case GET_DEFAULT_INSTANCE:
                            break;
                        case GET_PARSER:
                            if (PARSER == null) {
                                synchronized (Annotation.class) {
                                    if (PARSER == null) {
                                        PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                    }
                                }
                            }
                            return PARSER;
                        default:
                            throw new UnsupportedOperationException();
                    }
                    return DEFAULT_INSTANCE;
                }

                static {
                    DEFAULT_INSTANCE.makeImmutable();
                }

                public static Annotation getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                public static Parser<Annotation> parser() {
                    return DEFAULT_INSTANCE.getParserForType();
                }
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasUid() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getUid() {
                return this.uid_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setUid(int value) {
                this.bitField0_ |= 1;
                this.uid_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearUid() {
                this.bitField0_ &= -2;
                this.uid_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasId() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public long getId() {
                return this.id_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setId(long value) {
                this.bitField0_ |= 2;
                this.id_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearId() {
                this.bitField0_ &= -3;
                this.id_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasCreationTimeSec() {
                return (this.bitField0_ & 4) == 4;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getCreationTimeSec() {
                return this.creationTimeSec_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setCreationTimeSec(int value) {
                this.bitField0_ |= 4;
                this.creationTimeSec_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearCreationTimeSec() {
                this.bitField0_ &= -5;
                this.creationTimeSec_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasDeletionTimeSec() {
                return (this.bitField0_ & 8) == 8;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDeletionTimeSec() {
                return this.deletionTimeSec_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDeletionTimeSec(int value) {
                this.bitField0_ |= 8;
                this.deletionTimeSec_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDeletionTimeSec() {
                this.bitField0_ &= -9;
                this.deletionTimeSec_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasResetTimeSec() {
                return (this.bitField0_ & 16) == 16;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getResetTimeSec() {
                return this.resetTimeSec_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setResetTimeSec(int value) {
                this.bitField0_ |= 16;
                this.resetTimeSec_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearResetTimeSec() {
                this.bitField0_ &= -17;
                this.resetTimeSec_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasMetricCount() {
                return (this.bitField0_ & 32) == 32;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getMetricCount() {
                return this.metricCount_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMetricCount(int value) {
                this.bitField0_ |= 32;
                this.metricCount_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMetricCount() {
                this.bitField0_ &= -33;
                this.metricCount_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasConditionCount() {
                return (this.bitField0_ & 64) == 64;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getConditionCount() {
                return this.conditionCount_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setConditionCount(int value) {
                this.bitField0_ |= 64;
                this.conditionCount_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearConditionCount() {
                this.bitField0_ &= -65;
                this.conditionCount_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasMatcherCount() {
                return (this.bitField0_ & 128) == 128;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getMatcherCount() {
                return this.matcherCount_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMatcherCount(int value) {
                this.bitField0_ |= 128;
                this.matcherCount_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMatcherCount() {
                this.bitField0_ &= -129;
                this.matcherCount_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasAlertCount() {
                return (this.bitField0_ & 256) == 256;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getAlertCount() {
                return this.alertCount_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAlertCount(int value) {
                this.bitField0_ |= 256;
                this.alertCount_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAlertCount() {
                this.bitField0_ &= -257;
                this.alertCount_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean hasIsValid() {
                return (this.bitField0_ & 512) == 512;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public boolean getIsValid() {
                return this.isValid_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setIsValid(boolean value) {
                this.bitField0_ |= 512;
                this.isValid_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearIsValid() {
                this.bitField0_ &= -513;
                this.isValid_ = false;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<Integer> getBroadcastSentTimeSecList() {
                return this.broadcastSentTimeSec_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getBroadcastSentTimeSecCount() {
                return this.broadcastSentTimeSec_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getBroadcastSentTimeSec(int index) {
                return this.broadcastSentTimeSec_.getInt(index);
            }

            private void ensureBroadcastSentTimeSecIsMutable() {
                if (!this.broadcastSentTimeSec_.isModifiable()) {
                    this.broadcastSentTimeSec_ = GeneratedMessageLite.mutableCopy(this.broadcastSentTimeSec_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setBroadcastSentTimeSec(int index, int value) {
                ensureBroadcastSentTimeSecIsMutable();
                this.broadcastSentTimeSec_.setInt(index, value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addBroadcastSentTimeSec(int value) {
                ensureBroadcastSentTimeSecIsMutable();
                this.broadcastSentTimeSec_.addInt(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllBroadcastSentTimeSec(Iterable<? extends Integer> values) {
                ensureBroadcastSentTimeSecIsMutable();
                AbstractMessageLite.addAll(values, this.broadcastSentTimeSec_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearBroadcastSentTimeSec() {
                this.broadcastSentTimeSec_ = emptyIntList();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<Integer> getDataDropTimeSecList() {
                return this.dataDropTimeSec_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDataDropTimeSecCount() {
                return this.dataDropTimeSec_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDataDropTimeSec(int index) {
                return this.dataDropTimeSec_.getInt(index);
            }

            private void ensureDataDropTimeSecIsMutable() {
                if (!this.dataDropTimeSec_.isModifiable()) {
                    this.dataDropTimeSec_ = GeneratedMessageLite.mutableCopy(this.dataDropTimeSec_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDataDropTimeSec(int index, int value) {
                ensureDataDropTimeSecIsMutable();
                this.dataDropTimeSec_.setInt(index, value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addDataDropTimeSec(int value) {
                ensureDataDropTimeSecIsMutable();
                this.dataDropTimeSec_.addInt(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllDataDropTimeSec(Iterable<? extends Integer> values) {
                ensureDataDropTimeSecIsMutable();
                AbstractMessageLite.addAll(values, this.dataDropTimeSec_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDataDropTimeSec() {
                this.dataDropTimeSec_ = emptyIntList();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<Long> getDataDropBytesList() {
                return this.dataDropBytes_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDataDropBytesCount() {
                return this.dataDropBytes_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public long getDataDropBytes(int index) {
                return this.dataDropBytes_.getLong(index);
            }

            private void ensureDataDropBytesIsMutable() {
                if (!this.dataDropBytes_.isModifiable()) {
                    this.dataDropBytes_ = GeneratedMessageLite.mutableCopy(this.dataDropBytes_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDataDropBytes(int index, long value) {
                ensureDataDropBytesIsMutable();
                this.dataDropBytes_.setLong(index, value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addDataDropBytes(long value) {
                ensureDataDropBytesIsMutable();
                this.dataDropBytes_.addLong(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllDataDropBytes(Iterable<? extends Long> values) {
                ensureDataDropBytesIsMutable();
                AbstractMessageLite.addAll(values, this.dataDropBytes_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDataDropBytes() {
                this.dataDropBytes_ = emptyLongList();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<Integer> getDumpReportTimeSecList() {
                return this.dumpReportTimeSec_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDumpReportTimeSecCount() {
                return this.dumpReportTimeSec_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDumpReportTimeSec(int index) {
                return this.dumpReportTimeSec_.getInt(index);
            }

            private void ensureDumpReportTimeSecIsMutable() {
                if (!this.dumpReportTimeSec_.isModifiable()) {
                    this.dumpReportTimeSec_ = GeneratedMessageLite.mutableCopy(this.dumpReportTimeSec_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDumpReportTimeSec(int index, int value) {
                ensureDumpReportTimeSecIsMutable();
                this.dumpReportTimeSec_.setInt(index, value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addDumpReportTimeSec(int value) {
                ensureDumpReportTimeSecIsMutable();
                this.dumpReportTimeSec_.addInt(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllDumpReportTimeSec(Iterable<? extends Integer> values) {
                ensureDumpReportTimeSecIsMutable();
                AbstractMessageLite.addAll(values, this.dumpReportTimeSec_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDumpReportTimeSec() {
                this.dumpReportTimeSec_ = emptyIntList();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<Integer> getDumpReportDataSizeList() {
                return this.dumpReportDataSize_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDumpReportDataSizeCount() {
                return this.dumpReportDataSize_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDumpReportDataSize(int index) {
                return this.dumpReportDataSize_.getInt(index);
            }

            private void ensureDumpReportDataSizeIsMutable() {
                if (!this.dumpReportDataSize_.isModifiable()) {
                    this.dumpReportDataSize_ = GeneratedMessageLite.mutableCopy(this.dumpReportDataSize_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDumpReportDataSize(int index, int value) {
                ensureDumpReportDataSizeIsMutable();
                this.dumpReportDataSize_.setInt(index, value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addDumpReportDataSize(int value) {
                ensureDumpReportDataSizeIsMutable();
                this.dumpReportDataSize_.addInt(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllDumpReportDataSize(Iterable<? extends Integer> values) {
                ensureDumpReportDataSizeIsMutable();
                AbstractMessageLite.addAll(values, this.dumpReportDataSize_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDumpReportDataSize() {
                this.dumpReportDataSize_ = emptyIntList();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<MatcherStats> getMatcherStatsList() {
                return this.matcherStats_;
            }

            public List<? extends MatcherStatsOrBuilder> getMatcherStatsOrBuilderList() {
                return this.matcherStats_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getMatcherStatsCount() {
                return this.matcherStats_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public MatcherStats getMatcherStats(int index) {
                return this.matcherStats_.get(index);
            }

            public MatcherStatsOrBuilder getMatcherStatsOrBuilder(int index) {
                return this.matcherStats_.get(index);
            }

            private void ensureMatcherStatsIsMutable() {
                if (!this.matcherStats_.isModifiable()) {
                    this.matcherStats_ = GeneratedMessageLite.mutableCopy(this.matcherStats_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMatcherStats(int index, MatcherStats value) {
                if (value != null) {
                    ensureMatcherStatsIsMutable();
                    this.matcherStats_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMatcherStats(int index, MatcherStats.Builder builderForValue) {
                ensureMatcherStatsIsMutable();
                this.matcherStats_.set(index, (MatcherStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMatcherStats(MatcherStats value) {
                if (value != null) {
                    ensureMatcherStatsIsMutable();
                    this.matcherStats_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMatcherStats(int index, MatcherStats value) {
                if (value != null) {
                    ensureMatcherStatsIsMutable();
                    this.matcherStats_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMatcherStats(MatcherStats.Builder builderForValue) {
                ensureMatcherStatsIsMutable();
                this.matcherStats_.add((MatcherStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMatcherStats(int index, MatcherStats.Builder builderForValue) {
                ensureMatcherStatsIsMutable();
                this.matcherStats_.add(index, (MatcherStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllMatcherStats(Iterable<? extends MatcherStats> values) {
                ensureMatcherStatsIsMutable();
                AbstractMessageLite.addAll(values, this.matcherStats_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMatcherStats() {
                this.matcherStats_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeMatcherStats(int index) {
                ensureMatcherStatsIsMutable();
                this.matcherStats_.remove(index);
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<ConditionStats> getConditionStatsList() {
                return this.conditionStats_;
            }

            public List<? extends ConditionStatsOrBuilder> getConditionStatsOrBuilderList() {
                return this.conditionStats_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getConditionStatsCount() {
                return this.conditionStats_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public ConditionStats getConditionStats(int index) {
                return this.conditionStats_.get(index);
            }

            public ConditionStatsOrBuilder getConditionStatsOrBuilder(int index) {
                return this.conditionStats_.get(index);
            }

            private void ensureConditionStatsIsMutable() {
                if (!this.conditionStats_.isModifiable()) {
                    this.conditionStats_ = GeneratedMessageLite.mutableCopy(this.conditionStats_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setConditionStats(int index, ConditionStats value) {
                if (value != null) {
                    ensureConditionStatsIsMutable();
                    this.conditionStats_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setConditionStats(int index, ConditionStats.Builder builderForValue) {
                ensureConditionStatsIsMutable();
                this.conditionStats_.set(index, (ConditionStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addConditionStats(ConditionStats value) {
                if (value != null) {
                    ensureConditionStatsIsMutable();
                    this.conditionStats_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addConditionStats(int index, ConditionStats value) {
                if (value != null) {
                    ensureConditionStatsIsMutable();
                    this.conditionStats_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addConditionStats(ConditionStats.Builder builderForValue) {
                ensureConditionStatsIsMutable();
                this.conditionStats_.add((ConditionStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addConditionStats(int index, ConditionStats.Builder builderForValue) {
                ensureConditionStatsIsMutable();
                this.conditionStats_.add(index, (ConditionStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllConditionStats(Iterable<? extends ConditionStats> values) {
                ensureConditionStatsIsMutable();
                AbstractMessageLite.addAll(values, this.conditionStats_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearConditionStats() {
                this.conditionStats_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeConditionStats(int index) {
                ensureConditionStatsIsMutable();
                this.conditionStats_.remove(index);
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<MetricStats> getMetricStatsList() {
                return this.metricStats_;
            }

            public List<? extends MetricStatsOrBuilder> getMetricStatsOrBuilderList() {
                return this.metricStats_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getMetricStatsCount() {
                return this.metricStats_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public MetricStats getMetricStats(int index) {
                return this.metricStats_.get(index);
            }

            public MetricStatsOrBuilder getMetricStatsOrBuilder(int index) {
                return this.metricStats_.get(index);
            }

            private void ensureMetricStatsIsMutable() {
                if (!this.metricStats_.isModifiable()) {
                    this.metricStats_ = GeneratedMessageLite.mutableCopy(this.metricStats_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMetricStats(int index, MetricStats value) {
                if (value != null) {
                    ensureMetricStatsIsMutable();
                    this.metricStats_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMetricStats(int index, MetricStats.Builder builderForValue) {
                ensureMetricStatsIsMutable();
                this.metricStats_.set(index, (MetricStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMetricStats(MetricStats value) {
                if (value != null) {
                    ensureMetricStatsIsMutable();
                    this.metricStats_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMetricStats(int index, MetricStats value) {
                if (value != null) {
                    ensureMetricStatsIsMutable();
                    this.metricStats_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMetricStats(MetricStats.Builder builderForValue) {
                ensureMetricStatsIsMutable();
                this.metricStats_.add((MetricStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMetricStats(int index, MetricStats.Builder builderForValue) {
                ensureMetricStatsIsMutable();
                this.metricStats_.add(index, (MetricStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllMetricStats(Iterable<? extends MetricStats> values) {
                ensureMetricStatsIsMutable();
                AbstractMessageLite.addAll(values, this.metricStats_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMetricStats() {
                this.metricStats_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeMetricStats(int index) {
                ensureMetricStatsIsMutable();
                this.metricStats_.remove(index);
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<AlertStats> getAlertStatsList() {
                return this.alertStats_;
            }

            public List<? extends AlertStatsOrBuilder> getAlertStatsOrBuilderList() {
                return this.alertStats_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getAlertStatsCount() {
                return this.alertStats_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public AlertStats getAlertStats(int index) {
                return this.alertStats_.get(index);
            }

            public AlertStatsOrBuilder getAlertStatsOrBuilder(int index) {
                return this.alertStats_.get(index);
            }

            private void ensureAlertStatsIsMutable() {
                if (!this.alertStats_.isModifiable()) {
                    this.alertStats_ = GeneratedMessageLite.mutableCopy(this.alertStats_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAlertStats(int index, AlertStats value) {
                if (value != null) {
                    ensureAlertStatsIsMutable();
                    this.alertStats_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAlertStats(int index, AlertStats.Builder builderForValue) {
                ensureAlertStatsIsMutable();
                this.alertStats_.set(index, (AlertStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAlertStats(AlertStats value) {
                if (value != null) {
                    ensureAlertStatsIsMutable();
                    this.alertStats_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAlertStats(int index, AlertStats value) {
                if (value != null) {
                    ensureAlertStatsIsMutable();
                    this.alertStats_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAlertStats(AlertStats.Builder builderForValue) {
                ensureAlertStatsIsMutable();
                this.alertStats_.add((AlertStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAlertStats(int index, AlertStats.Builder builderForValue) {
                ensureAlertStatsIsMutable();
                this.alertStats_.add(index, (AlertStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllAlertStats(Iterable<? extends AlertStats> values) {
                ensureAlertStatsIsMutable();
                AbstractMessageLite.addAll(values, this.alertStats_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAlertStats() {
                this.alertStats_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeAlertStats(int index) {
                ensureAlertStatsIsMutable();
                this.alertStats_.remove(index);
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<MetricStats> getMetricDimensionInConditionStatsList() {
                return this.metricDimensionInConditionStats_;
            }

            public List<? extends MetricStatsOrBuilder> getMetricDimensionInConditionStatsOrBuilderList() {
                return this.metricDimensionInConditionStats_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getMetricDimensionInConditionStatsCount() {
                return this.metricDimensionInConditionStats_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public MetricStats getMetricDimensionInConditionStats(int index) {
                return this.metricDimensionInConditionStats_.get(index);
            }

            public MetricStatsOrBuilder getMetricDimensionInConditionStatsOrBuilder(int index) {
                return this.metricDimensionInConditionStats_.get(index);
            }

            private void ensureMetricDimensionInConditionStatsIsMutable() {
                if (!this.metricDimensionInConditionStats_.isModifiable()) {
                    this.metricDimensionInConditionStats_ = GeneratedMessageLite.mutableCopy(this.metricDimensionInConditionStats_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMetricDimensionInConditionStats(int index, MetricStats value) {
                if (value != null) {
                    ensureMetricDimensionInConditionStatsIsMutable();
                    this.metricDimensionInConditionStats_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMetricDimensionInConditionStats(int index, MetricStats.Builder builderForValue) {
                ensureMetricDimensionInConditionStatsIsMutable();
                this.metricDimensionInConditionStats_.set(index, (MetricStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMetricDimensionInConditionStats(MetricStats value) {
                if (value != null) {
                    ensureMetricDimensionInConditionStatsIsMutable();
                    this.metricDimensionInConditionStats_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMetricDimensionInConditionStats(int index, MetricStats value) {
                if (value != null) {
                    ensureMetricDimensionInConditionStatsIsMutable();
                    this.metricDimensionInConditionStats_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMetricDimensionInConditionStats(MetricStats.Builder builderForValue) {
                ensureMetricDimensionInConditionStatsIsMutable();
                this.metricDimensionInConditionStats_.add((MetricStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addMetricDimensionInConditionStats(int index, MetricStats.Builder builderForValue) {
                ensureMetricDimensionInConditionStatsIsMutable();
                this.metricDimensionInConditionStats_.add(index, (MetricStats) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllMetricDimensionInConditionStats(Iterable<? extends MetricStats> values) {
                ensureMetricDimensionInConditionStatsIsMutable();
                AbstractMessageLite.addAll(values, this.metricDimensionInConditionStats_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMetricDimensionInConditionStats() {
                this.metricDimensionInConditionStats_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeMetricDimensionInConditionStats(int index) {
                ensureMetricDimensionInConditionStatsIsMutable();
                this.metricDimensionInConditionStats_.remove(index);
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<Annotation> getAnnotationList() {
                return this.annotation_;
            }

            public List<? extends AnnotationOrBuilder> getAnnotationOrBuilderList() {
                return this.annotation_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getAnnotationCount() {
                return this.annotation_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public Annotation getAnnotation(int index) {
                return this.annotation_.get(index);
            }

            public AnnotationOrBuilder getAnnotationOrBuilder(int index) {
                return this.annotation_.get(index);
            }

            private void ensureAnnotationIsMutable() {
                if (!this.annotation_.isModifiable()) {
                    this.annotation_ = GeneratedMessageLite.mutableCopy(this.annotation_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAnnotation(int index, Annotation value) {
                if (value != null) {
                    ensureAnnotationIsMutable();
                    this.annotation_.set(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAnnotation(int index, Annotation.Builder builderForValue) {
                ensureAnnotationIsMutable();
                this.annotation_.set(index, (Annotation) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAnnotation(Annotation value) {
                if (value != null) {
                    ensureAnnotationIsMutable();
                    this.annotation_.add(value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAnnotation(int index, Annotation value) {
                if (value != null) {
                    ensureAnnotationIsMutable();
                    this.annotation_.add(index, value);
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAnnotation(Annotation.Builder builderForValue) {
                ensureAnnotationIsMutable();
                this.annotation_.add((Annotation) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAnnotation(int index, Annotation.Builder builderForValue) {
                ensureAnnotationIsMutable();
                this.annotation_.add(index, (Annotation) builderForValue.build());
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllAnnotation(Iterable<? extends Annotation> values) {
                ensureAnnotationIsMutable();
                AbstractMessageLite.addAll(values, this.annotation_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAnnotation() {
                this.annotation_ = emptyProtobufList();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void removeAnnotation(int index) {
                ensureAnnotationIsMutable();
                this.annotation_.remove(index);
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<Integer> getActivationTimeSecList() {
                return this.activationTimeSec_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getActivationTimeSecCount() {
                return this.activationTimeSec_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getActivationTimeSec(int index) {
                return this.activationTimeSec_.getInt(index);
            }

            private void ensureActivationTimeSecIsMutable() {
                if (!this.activationTimeSec_.isModifiable()) {
                    this.activationTimeSec_ = GeneratedMessageLite.mutableCopy(this.activationTimeSec_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setActivationTimeSec(int index, int value) {
                ensureActivationTimeSecIsMutable();
                this.activationTimeSec_.setInt(index, value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addActivationTimeSec(int value) {
                ensureActivationTimeSecIsMutable();
                this.activationTimeSec_.addInt(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllActivationTimeSec(Iterable<? extends Integer> values) {
                ensureActivationTimeSecIsMutable();
                AbstractMessageLite.addAll(values, this.activationTimeSec_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearActivationTimeSec() {
                this.activationTimeSec_ = emptyIntList();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public List<Integer> getDeactivationTimeSecList() {
                return this.deactivationTimeSec_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDeactivationTimeSecCount() {
                return this.deactivationTimeSec_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
            public int getDeactivationTimeSec(int index) {
                return this.deactivationTimeSec_.getInt(index);
            }

            private void ensureDeactivationTimeSecIsMutable() {
                if (!this.deactivationTimeSec_.isModifiable()) {
                    this.deactivationTimeSec_ = GeneratedMessageLite.mutableCopy(this.deactivationTimeSec_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDeactivationTimeSec(int index, int value) {
                ensureDeactivationTimeSecIsMutable();
                this.deactivationTimeSec_.setInt(index, value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addDeactivationTimeSec(int value) {
                ensureDeactivationTimeSecIsMutable();
                this.deactivationTimeSec_.addInt(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllDeactivationTimeSec(Iterable<? extends Integer> values) {
                ensureDeactivationTimeSecIsMutable();
                AbstractMessageLite.addAll(values, this.deactivationTimeSec_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDeactivationTimeSec() {
                this.deactivationTimeSec_ = emptyIntList();
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.uid_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt64(2, this.id_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    output.writeInt32(3, this.creationTimeSec_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    output.writeInt32(4, this.deletionTimeSec_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    output.writeInt32(5, this.metricCount_);
                }
                if ((this.bitField0_ & 64) == 64) {
                    output.writeInt32(6, this.conditionCount_);
                }
                if ((this.bitField0_ & 128) == 128) {
                    output.writeInt32(7, this.matcherCount_);
                }
                if ((this.bitField0_ & 256) == 256) {
                    output.writeInt32(8, this.alertCount_);
                }
                if ((this.bitField0_ & 512) == 512) {
                    output.writeBool(9, this.isValid_);
                }
                for (int i = 0; i < this.broadcastSentTimeSec_.size(); i++) {
                    output.writeInt32(10, this.broadcastSentTimeSec_.getInt(i));
                }
                for (int i2 = 0; i2 < this.dataDropTimeSec_.size(); i2++) {
                    output.writeInt32(11, this.dataDropTimeSec_.getInt(i2));
                }
                for (int i3 = 0; i3 < this.dumpReportTimeSec_.size(); i3++) {
                    output.writeInt32(12, this.dumpReportTimeSec_.getInt(i3));
                }
                for (int i4 = 0; i4 < this.matcherStats_.size(); i4++) {
                    output.writeMessage(13, this.matcherStats_.get(i4));
                }
                for (int i5 = 0; i5 < this.conditionStats_.size(); i5++) {
                    output.writeMessage(14, this.conditionStats_.get(i5));
                }
                for (int i6 = 0; i6 < this.metricStats_.size(); i6++) {
                    output.writeMessage(15, this.metricStats_.get(i6));
                }
                for (int i7 = 0; i7 < this.alertStats_.size(); i7++) {
                    output.writeMessage(16, this.alertStats_.get(i7));
                }
                for (int i8 = 0; i8 < this.metricDimensionInConditionStats_.size(); i8++) {
                    output.writeMessage(17, this.metricDimensionInConditionStats_.get(i8));
                }
                for (int i9 = 0; i9 < this.annotation_.size(); i9++) {
                    output.writeMessage(18, this.annotation_.get(i9));
                }
                if ((this.bitField0_ & 16) == 16) {
                    output.writeInt32(19, this.resetTimeSec_);
                }
                for (int i10 = 0; i10 < this.dumpReportDataSize_.size(); i10++) {
                    output.writeInt32(20, this.dumpReportDataSize_.getInt(i10));
                }
                for (int i11 = 0; i11 < this.dataDropBytes_.size(); i11++) {
                    output.writeInt64(21, this.dataDropBytes_.getLong(i11));
                }
                for (int i12 = 0; i12 < this.activationTimeSec_.size(); i12++) {
                    output.writeInt32(22, this.activationTimeSec_.getInt(i12));
                }
                for (int i13 = 0; i13 < this.deactivationTimeSec_.size(); i13++) {
                    output.writeInt32(23, this.deactivationTimeSec_.getInt(i13));
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.uid_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt64Size(2, this.id_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    size2 += CodedOutputStream.computeInt32Size(3, this.creationTimeSec_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    size2 += CodedOutputStream.computeInt32Size(4, this.deletionTimeSec_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    size2 += CodedOutputStream.computeInt32Size(5, this.metricCount_);
                }
                if ((this.bitField0_ & 64) == 64) {
                    size2 += CodedOutputStream.computeInt32Size(6, this.conditionCount_);
                }
                if ((this.bitField0_ & 128) == 128) {
                    size2 += CodedOutputStream.computeInt32Size(7, this.matcherCount_);
                }
                if ((this.bitField0_ & 256) == 256) {
                    size2 += CodedOutputStream.computeInt32Size(8, this.alertCount_);
                }
                if ((this.bitField0_ & 512) == 512) {
                    size2 += CodedOutputStream.computeBoolSize(9, this.isValid_);
                }
                int dataSize = 0;
                for (int i = 0; i < this.broadcastSentTimeSec_.size(); i++) {
                    dataSize += CodedOutputStream.computeInt32SizeNoTag(this.broadcastSentTimeSec_.getInt(i));
                }
                int size3 = size2 + dataSize + (getBroadcastSentTimeSecList().size() * 1);
                int dataSize2 = 0;
                for (int i2 = 0; i2 < this.dataDropTimeSec_.size(); i2++) {
                    dataSize2 += CodedOutputStream.computeInt32SizeNoTag(this.dataDropTimeSec_.getInt(i2));
                }
                int size4 = size3 + dataSize2 + (getDataDropTimeSecList().size() * 1);
                int dataSize3 = 0;
                for (int i3 = 0; i3 < this.dumpReportTimeSec_.size(); i3++) {
                    dataSize3 += CodedOutputStream.computeInt32SizeNoTag(this.dumpReportTimeSec_.getInt(i3));
                }
                int size5 = size4 + dataSize3 + (getDumpReportTimeSecList().size() * 1);
                for (int i4 = 0; i4 < this.matcherStats_.size(); i4++) {
                    size5 += CodedOutputStream.computeMessageSize(13, this.matcherStats_.get(i4));
                }
                for (int i5 = 0; i5 < this.conditionStats_.size(); i5++) {
                    size5 += CodedOutputStream.computeMessageSize(14, this.conditionStats_.get(i5));
                }
                for (int i6 = 0; i6 < this.metricStats_.size(); i6++) {
                    size5 += CodedOutputStream.computeMessageSize(15, this.metricStats_.get(i6));
                }
                for (int i7 = 0; i7 < this.alertStats_.size(); i7++) {
                    size5 += CodedOutputStream.computeMessageSize(16, this.alertStats_.get(i7));
                }
                for (int i8 = 0; i8 < this.metricDimensionInConditionStats_.size(); i8++) {
                    size5 += CodedOutputStream.computeMessageSize(17, this.metricDimensionInConditionStats_.get(i8));
                }
                for (int i9 = 0; i9 < this.annotation_.size(); i9++) {
                    size5 += CodedOutputStream.computeMessageSize(18, this.annotation_.get(i9));
                }
                if ((this.bitField0_ & 16) == 16) {
                    size5 += CodedOutputStream.computeInt32Size(19, this.resetTimeSec_);
                }
                int dataSize4 = 0;
                for (int i10 = 0; i10 < this.dumpReportDataSize_.size(); i10++) {
                    dataSize4 += CodedOutputStream.computeInt32SizeNoTag(this.dumpReportDataSize_.getInt(i10));
                }
                int size6 = size5 + dataSize4 + (getDumpReportDataSizeList().size() * 2);
                int dataSize5 = 0;
                for (int i11 = 0; i11 < this.dataDropBytes_.size(); i11++) {
                    dataSize5 += CodedOutputStream.computeInt64SizeNoTag(this.dataDropBytes_.getLong(i11));
                }
                int size7 = size6 + dataSize5 + (getDataDropBytesList().size() * 2);
                int dataSize6 = 0;
                for (int i12 = 0; i12 < this.activationTimeSec_.size(); i12++) {
                    dataSize6 += CodedOutputStream.computeInt32SizeNoTag(this.activationTimeSec_.getInt(i12));
                }
                int size8 = size7 + dataSize6 + (getActivationTimeSecList().size() * 2);
                int dataSize7 = 0;
                for (int i13 = 0; i13 < this.deactivationTimeSec_.size(); i13++) {
                    dataSize7 += CodedOutputStream.computeInt32SizeNoTag(this.deactivationTimeSec_.getInt(i13));
                }
                int size9 = size8 + dataSize7 + (getDeactivationTimeSecList().size() * 2) + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size9;
                return size9;
            }

            public static ConfigStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (ConfigStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ConfigStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ConfigStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ConfigStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (ConfigStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ConfigStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ConfigStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ConfigStats parseFrom(InputStream input) throws IOException {
                return (ConfigStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ConfigStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ConfigStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ConfigStats parseDelimitedFrom(InputStream input) throws IOException {
                return (ConfigStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static ConfigStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ConfigStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ConfigStats parseFrom(CodedInputStream input) throws IOException {
                return (ConfigStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ConfigStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ConfigStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(ConfigStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<ConfigStats, Builder> implements ConfigStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(ConfigStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasUid() {
                    return ((ConfigStats) this.instance).hasUid();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getUid() {
                    return ((ConfigStats) this.instance).getUid();
                }

                public Builder setUid(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setUid(value);
                    return this;
                }

                public Builder clearUid() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearUid();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasId() {
                    return ((ConfigStats) this.instance).hasId();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public long getId() {
                    return ((ConfigStats) this.instance).getId();
                }

                public Builder setId(long value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setId(value);
                    return this;
                }

                public Builder clearId() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearId();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasCreationTimeSec() {
                    return ((ConfigStats) this.instance).hasCreationTimeSec();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getCreationTimeSec() {
                    return ((ConfigStats) this.instance).getCreationTimeSec();
                }

                public Builder setCreationTimeSec(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setCreationTimeSec(value);
                    return this;
                }

                public Builder clearCreationTimeSec() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearCreationTimeSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasDeletionTimeSec() {
                    return ((ConfigStats) this.instance).hasDeletionTimeSec();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDeletionTimeSec() {
                    return ((ConfigStats) this.instance).getDeletionTimeSec();
                }

                public Builder setDeletionTimeSec(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setDeletionTimeSec(value);
                    return this;
                }

                public Builder clearDeletionTimeSec() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearDeletionTimeSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasResetTimeSec() {
                    return ((ConfigStats) this.instance).hasResetTimeSec();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getResetTimeSec() {
                    return ((ConfigStats) this.instance).getResetTimeSec();
                }

                public Builder setResetTimeSec(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setResetTimeSec(value);
                    return this;
                }

                public Builder clearResetTimeSec() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearResetTimeSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasMetricCount() {
                    return ((ConfigStats) this.instance).hasMetricCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getMetricCount() {
                    return ((ConfigStats) this.instance).getMetricCount();
                }

                public Builder setMetricCount(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setMetricCount(value);
                    return this;
                }

                public Builder clearMetricCount() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearMetricCount();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasConditionCount() {
                    return ((ConfigStats) this.instance).hasConditionCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getConditionCount() {
                    return ((ConfigStats) this.instance).getConditionCount();
                }

                public Builder setConditionCount(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setConditionCount(value);
                    return this;
                }

                public Builder clearConditionCount() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearConditionCount();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasMatcherCount() {
                    return ((ConfigStats) this.instance).hasMatcherCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getMatcherCount() {
                    return ((ConfigStats) this.instance).getMatcherCount();
                }

                public Builder setMatcherCount(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setMatcherCount(value);
                    return this;
                }

                public Builder clearMatcherCount() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearMatcherCount();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasAlertCount() {
                    return ((ConfigStats) this.instance).hasAlertCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getAlertCount() {
                    return ((ConfigStats) this.instance).getAlertCount();
                }

                public Builder setAlertCount(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setAlertCount(value);
                    return this;
                }

                public Builder clearAlertCount() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearAlertCount();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean hasIsValid() {
                    return ((ConfigStats) this.instance).hasIsValid();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public boolean getIsValid() {
                    return ((ConfigStats) this.instance).getIsValid();
                }

                public Builder setIsValid(boolean value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setIsValid(value);
                    return this;
                }

                public Builder clearIsValid() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearIsValid();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<Integer> getBroadcastSentTimeSecList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getBroadcastSentTimeSecList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getBroadcastSentTimeSecCount() {
                    return ((ConfigStats) this.instance).getBroadcastSentTimeSecCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getBroadcastSentTimeSec(int index) {
                    return ((ConfigStats) this.instance).getBroadcastSentTimeSec(index);
                }

                public Builder setBroadcastSentTimeSec(int index, int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setBroadcastSentTimeSec(index, value);
                    return this;
                }

                public Builder addBroadcastSentTimeSec(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addBroadcastSentTimeSec(value);
                    return this;
                }

                public Builder addAllBroadcastSentTimeSec(Iterable<? extends Integer> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllBroadcastSentTimeSec(values);
                    return this;
                }

                public Builder clearBroadcastSentTimeSec() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearBroadcastSentTimeSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<Integer> getDataDropTimeSecList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getDataDropTimeSecList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDataDropTimeSecCount() {
                    return ((ConfigStats) this.instance).getDataDropTimeSecCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDataDropTimeSec(int index) {
                    return ((ConfigStats) this.instance).getDataDropTimeSec(index);
                }

                public Builder setDataDropTimeSec(int index, int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setDataDropTimeSec(index, value);
                    return this;
                }

                public Builder addDataDropTimeSec(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addDataDropTimeSec(value);
                    return this;
                }

                public Builder addAllDataDropTimeSec(Iterable<? extends Integer> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllDataDropTimeSec(values);
                    return this;
                }

                public Builder clearDataDropTimeSec() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearDataDropTimeSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<Long> getDataDropBytesList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getDataDropBytesList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDataDropBytesCount() {
                    return ((ConfigStats) this.instance).getDataDropBytesCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public long getDataDropBytes(int index) {
                    return ((ConfigStats) this.instance).getDataDropBytes(index);
                }

                public Builder setDataDropBytes(int index, long value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setDataDropBytes(index, value);
                    return this;
                }

                public Builder addDataDropBytes(long value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addDataDropBytes(value);
                    return this;
                }

                public Builder addAllDataDropBytes(Iterable<? extends Long> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllDataDropBytes(values);
                    return this;
                }

                public Builder clearDataDropBytes() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearDataDropBytes();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<Integer> getDumpReportTimeSecList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getDumpReportTimeSecList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDumpReportTimeSecCount() {
                    return ((ConfigStats) this.instance).getDumpReportTimeSecCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDumpReportTimeSec(int index) {
                    return ((ConfigStats) this.instance).getDumpReportTimeSec(index);
                }

                public Builder setDumpReportTimeSec(int index, int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setDumpReportTimeSec(index, value);
                    return this;
                }

                public Builder addDumpReportTimeSec(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addDumpReportTimeSec(value);
                    return this;
                }

                public Builder addAllDumpReportTimeSec(Iterable<? extends Integer> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllDumpReportTimeSec(values);
                    return this;
                }

                public Builder clearDumpReportTimeSec() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearDumpReportTimeSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<Integer> getDumpReportDataSizeList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getDumpReportDataSizeList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDumpReportDataSizeCount() {
                    return ((ConfigStats) this.instance).getDumpReportDataSizeCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDumpReportDataSize(int index) {
                    return ((ConfigStats) this.instance).getDumpReportDataSize(index);
                }

                public Builder setDumpReportDataSize(int index, int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setDumpReportDataSize(index, value);
                    return this;
                }

                public Builder addDumpReportDataSize(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addDumpReportDataSize(value);
                    return this;
                }

                public Builder addAllDumpReportDataSize(Iterable<? extends Integer> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllDumpReportDataSize(values);
                    return this;
                }

                public Builder clearDumpReportDataSize() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearDumpReportDataSize();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<MatcherStats> getMatcherStatsList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getMatcherStatsList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getMatcherStatsCount() {
                    return ((ConfigStats) this.instance).getMatcherStatsCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public MatcherStats getMatcherStats(int index) {
                    return ((ConfigStats) this.instance).getMatcherStats(index);
                }

                public Builder setMatcherStats(int index, MatcherStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setMatcherStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder setMatcherStats(int index, MatcherStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setMatcherStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addMatcherStats(MatcherStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMatcherStats((ConfigStats) value);
                    return this;
                }

                public Builder addMatcherStats(int index, MatcherStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMatcherStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder addMatcherStats(MatcherStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMatcherStats((ConfigStats) builderForValue);
                    return this;
                }

                public Builder addMatcherStats(int index, MatcherStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMatcherStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllMatcherStats(Iterable<? extends MatcherStats> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllMatcherStats(values);
                    return this;
                }

                public Builder clearMatcherStats() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearMatcherStats();
                    return this;
                }

                public Builder removeMatcherStats(int index) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).removeMatcherStats(index);
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<ConditionStats> getConditionStatsList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getConditionStatsList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getConditionStatsCount() {
                    return ((ConfigStats) this.instance).getConditionStatsCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public ConditionStats getConditionStats(int index) {
                    return ((ConfigStats) this.instance).getConditionStats(index);
                }

                public Builder setConditionStats(int index, ConditionStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setConditionStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder setConditionStats(int index, ConditionStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setConditionStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addConditionStats(ConditionStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addConditionStats((ConfigStats) value);
                    return this;
                }

                public Builder addConditionStats(int index, ConditionStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addConditionStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder addConditionStats(ConditionStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addConditionStats((ConfigStats) builderForValue);
                    return this;
                }

                public Builder addConditionStats(int index, ConditionStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addConditionStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllConditionStats(Iterable<? extends ConditionStats> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllConditionStats(values);
                    return this;
                }

                public Builder clearConditionStats() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearConditionStats();
                    return this;
                }

                public Builder removeConditionStats(int index) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).removeConditionStats(index);
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<MetricStats> getMetricStatsList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getMetricStatsList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getMetricStatsCount() {
                    return ((ConfigStats) this.instance).getMetricStatsCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public MetricStats getMetricStats(int index) {
                    return ((ConfigStats) this.instance).getMetricStats(index);
                }

                public Builder setMetricStats(int index, MetricStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setMetricStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder setMetricStats(int index, MetricStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setMetricStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addMetricStats(MetricStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMetricStats((ConfigStats) value);
                    return this;
                }

                public Builder addMetricStats(int index, MetricStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMetricStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder addMetricStats(MetricStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMetricStats((ConfigStats) builderForValue);
                    return this;
                }

                public Builder addMetricStats(int index, MetricStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMetricStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllMetricStats(Iterable<? extends MetricStats> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllMetricStats(values);
                    return this;
                }

                public Builder clearMetricStats() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearMetricStats();
                    return this;
                }

                public Builder removeMetricStats(int index) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).removeMetricStats(index);
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<AlertStats> getAlertStatsList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getAlertStatsList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getAlertStatsCount() {
                    return ((ConfigStats) this.instance).getAlertStatsCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public AlertStats getAlertStats(int index) {
                    return ((ConfigStats) this.instance).getAlertStats(index);
                }

                public Builder setAlertStats(int index, AlertStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setAlertStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder setAlertStats(int index, AlertStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setAlertStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addAlertStats(AlertStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAlertStats((ConfigStats) value);
                    return this;
                }

                public Builder addAlertStats(int index, AlertStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAlertStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder addAlertStats(AlertStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAlertStats((ConfigStats) builderForValue);
                    return this;
                }

                public Builder addAlertStats(int index, AlertStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAlertStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllAlertStats(Iterable<? extends AlertStats> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllAlertStats(values);
                    return this;
                }

                public Builder clearAlertStats() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearAlertStats();
                    return this;
                }

                public Builder removeAlertStats(int index) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).removeAlertStats(index);
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<MetricStats> getMetricDimensionInConditionStatsList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getMetricDimensionInConditionStatsList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getMetricDimensionInConditionStatsCount() {
                    return ((ConfigStats) this.instance).getMetricDimensionInConditionStatsCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public MetricStats getMetricDimensionInConditionStats(int index) {
                    return ((ConfigStats) this.instance).getMetricDimensionInConditionStats(index);
                }

                public Builder setMetricDimensionInConditionStats(int index, MetricStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setMetricDimensionInConditionStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder setMetricDimensionInConditionStats(int index, MetricStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setMetricDimensionInConditionStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addMetricDimensionInConditionStats(MetricStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMetricDimensionInConditionStats((ConfigStats) value);
                    return this;
                }

                public Builder addMetricDimensionInConditionStats(int index, MetricStats value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMetricDimensionInConditionStats((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder addMetricDimensionInConditionStats(MetricStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMetricDimensionInConditionStats((ConfigStats) builderForValue);
                    return this;
                }

                public Builder addMetricDimensionInConditionStats(int index, MetricStats.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addMetricDimensionInConditionStats((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllMetricDimensionInConditionStats(Iterable<? extends MetricStats> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllMetricDimensionInConditionStats(values);
                    return this;
                }

                public Builder clearMetricDimensionInConditionStats() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearMetricDimensionInConditionStats();
                    return this;
                }

                public Builder removeMetricDimensionInConditionStats(int index) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).removeMetricDimensionInConditionStats(index);
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<Annotation> getAnnotationList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getAnnotationList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getAnnotationCount() {
                    return ((ConfigStats) this.instance).getAnnotationCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public Annotation getAnnotation(int index) {
                    return ((ConfigStats) this.instance).getAnnotation(index);
                }

                public Builder setAnnotation(int index, Annotation value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setAnnotation((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder setAnnotation(int index, Annotation.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setAnnotation((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addAnnotation(Annotation value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAnnotation((ConfigStats) value);
                    return this;
                }

                public Builder addAnnotation(int index, Annotation value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAnnotation((ConfigStats) index, (int) value);
                    return this;
                }

                public Builder addAnnotation(Annotation.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAnnotation((ConfigStats) builderForValue);
                    return this;
                }

                public Builder addAnnotation(int index, Annotation.Builder builderForValue) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAnnotation((ConfigStats) index, (int) builderForValue);
                    return this;
                }

                public Builder addAllAnnotation(Iterable<? extends Annotation> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllAnnotation(values);
                    return this;
                }

                public Builder clearAnnotation() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearAnnotation();
                    return this;
                }

                public Builder removeAnnotation(int index) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).removeAnnotation(index);
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<Integer> getActivationTimeSecList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getActivationTimeSecList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getActivationTimeSecCount() {
                    return ((ConfigStats) this.instance).getActivationTimeSecCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getActivationTimeSec(int index) {
                    return ((ConfigStats) this.instance).getActivationTimeSec(index);
                }

                public Builder setActivationTimeSec(int index, int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setActivationTimeSec(index, value);
                    return this;
                }

                public Builder addActivationTimeSec(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addActivationTimeSec(value);
                    return this;
                }

                public Builder addAllActivationTimeSec(Iterable<? extends Integer> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllActivationTimeSec(values);
                    return this;
                }

                public Builder clearActivationTimeSec() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearActivationTimeSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public List<Integer> getDeactivationTimeSecList() {
                    return Collections.unmodifiableList(((ConfigStats) this.instance).getDeactivationTimeSecList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDeactivationTimeSecCount() {
                    return ((ConfigStats) this.instance).getDeactivationTimeSecCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ConfigStatsOrBuilder
                public int getDeactivationTimeSec(int index) {
                    return ((ConfigStats) this.instance).getDeactivationTimeSec(index);
                }

                public Builder setDeactivationTimeSec(int index, int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).setDeactivationTimeSec(index, value);
                    return this;
                }

                public Builder addDeactivationTimeSec(int value) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addDeactivationTimeSec(value);
                    return this;
                }

                public Builder addAllDeactivationTimeSec(Iterable<? extends Integer> values) {
                    copyOnWrite();
                    ((ConfigStats) this.instance).addAllDeactivationTimeSec(values);
                    return this;
                }

                public Builder clearDeactivationTimeSec() {
                    copyOnWrite();
                    ((ConfigStats) this.instance).clearDeactivationTimeSec();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new ConfigStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        this.broadcastSentTimeSec_.makeImmutable();
                        this.dataDropTimeSec_.makeImmutable();
                        this.dataDropBytes_.makeImmutable();
                        this.dumpReportTimeSec_.makeImmutable();
                        this.dumpReportDataSize_.makeImmutable();
                        this.matcherStats_.makeImmutable();
                        this.conditionStats_.makeImmutable();
                        this.metricStats_.makeImmutable();
                        this.alertStats_.makeImmutable();
                        this.metricDimensionInConditionStats_.makeImmutable();
                        this.annotation_.makeImmutable();
                        this.activationTimeSec_.makeImmutable();
                        this.deactivationTimeSec_.makeImmutable();
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        ConfigStats other = (ConfigStats) arg1;
                        this.uid_ = visitor.visitInt(hasUid(), this.uid_, other.hasUid(), other.uid_);
                        this.id_ = visitor.visitLong(hasId(), this.id_, other.hasId(), other.id_);
                        this.creationTimeSec_ = visitor.visitInt(hasCreationTimeSec(), this.creationTimeSec_, other.hasCreationTimeSec(), other.creationTimeSec_);
                        this.deletionTimeSec_ = visitor.visitInt(hasDeletionTimeSec(), this.deletionTimeSec_, other.hasDeletionTimeSec(), other.deletionTimeSec_);
                        this.resetTimeSec_ = visitor.visitInt(hasResetTimeSec(), this.resetTimeSec_, other.hasResetTimeSec(), other.resetTimeSec_);
                        this.metricCount_ = visitor.visitInt(hasMetricCount(), this.metricCount_, other.hasMetricCount(), other.metricCount_);
                        this.conditionCount_ = visitor.visitInt(hasConditionCount(), this.conditionCount_, other.hasConditionCount(), other.conditionCount_);
                        this.matcherCount_ = visitor.visitInt(hasMatcherCount(), this.matcherCount_, other.hasMatcherCount(), other.matcherCount_);
                        this.alertCount_ = visitor.visitInt(hasAlertCount(), this.alertCount_, other.hasAlertCount(), other.alertCount_);
                        this.isValid_ = visitor.visitBoolean(hasIsValid(), this.isValid_, other.hasIsValid(), other.isValid_);
                        this.broadcastSentTimeSec_ = visitor.visitIntList(this.broadcastSentTimeSec_, other.broadcastSentTimeSec_);
                        this.dataDropTimeSec_ = visitor.visitIntList(this.dataDropTimeSec_, other.dataDropTimeSec_);
                        this.dataDropBytes_ = visitor.visitLongList(this.dataDropBytes_, other.dataDropBytes_);
                        this.dumpReportTimeSec_ = visitor.visitIntList(this.dumpReportTimeSec_, other.dumpReportTimeSec_);
                        this.dumpReportDataSize_ = visitor.visitIntList(this.dumpReportDataSize_, other.dumpReportDataSize_);
                        this.matcherStats_ = visitor.visitList(this.matcherStats_, other.matcherStats_);
                        this.conditionStats_ = visitor.visitList(this.conditionStats_, other.conditionStats_);
                        this.metricStats_ = visitor.visitList(this.metricStats_, other.metricStats_);
                        this.alertStats_ = visitor.visitList(this.alertStats_, other.alertStats_);
                        this.metricDimensionInConditionStats_ = visitor.visitList(this.metricDimensionInConditionStats_, other.metricDimensionInConditionStats_);
                        this.annotation_ = visitor.visitList(this.annotation_, other.annotation_);
                        this.activationTimeSec_ = visitor.visitIntList(this.activationTimeSec_, other.activationTimeSec_);
                        this.deactivationTimeSec_ = visitor.visitIntList(this.deactivationTimeSec_, other.deactivationTimeSec_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                switch (tag) {
                                    case 0:
                                        done = true;
                                        break;
                                    case 8:
                                        this.bitField0_ |= 1;
                                        this.uid_ = input.readInt32();
                                        break;
                                    case 16:
                                        this.bitField0_ |= 2;
                                        this.id_ = input.readInt64();
                                        break;
                                    case 24:
                                        this.bitField0_ |= 4;
                                        this.creationTimeSec_ = input.readInt32();
                                        break;
                                    case 32:
                                        this.bitField0_ |= 8;
                                        this.deletionTimeSec_ = input.readInt32();
                                        break;
                                    case 40:
                                        this.bitField0_ |= 32;
                                        this.metricCount_ = input.readInt32();
                                        break;
                                    case 48:
                                        this.bitField0_ |= 64;
                                        this.conditionCount_ = input.readInt32();
                                        break;
                                    case 56:
                                        this.bitField0_ |= 128;
                                        this.matcherCount_ = input.readInt32();
                                        break;
                                    case 64:
                                        this.bitField0_ |= 256;
                                        this.alertCount_ = input.readInt32();
                                        break;
                                    case 72:
                                        this.bitField0_ |= 512;
                                        this.isValid_ = input.readBool();
                                        break;
                                    case 80:
                                        if (!this.broadcastSentTimeSec_.isModifiable()) {
                                            this.broadcastSentTimeSec_ = GeneratedMessageLite.mutableCopy(this.broadcastSentTimeSec_);
                                        }
                                        this.broadcastSentTimeSec_.addInt(input.readInt32());
                                        break;
                                    case 82:
                                        int limit = input.pushLimit(input.readRawVarint32());
                                        if (!this.broadcastSentTimeSec_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                            this.broadcastSentTimeSec_ = GeneratedMessageLite.mutableCopy(this.broadcastSentTimeSec_);
                                        }
                                        while (input.getBytesUntilLimit() > 0) {
                                            this.broadcastSentTimeSec_.addInt(input.readInt32());
                                        }
                                        input.popLimit(limit);
                                        break;
                                    case 88:
                                        if (!this.dataDropTimeSec_.isModifiable()) {
                                            this.dataDropTimeSec_ = GeneratedMessageLite.mutableCopy(this.dataDropTimeSec_);
                                        }
                                        this.dataDropTimeSec_.addInt(input.readInt32());
                                        break;
                                    case 90:
                                        int limit2 = input.pushLimit(input.readRawVarint32());
                                        if (!this.dataDropTimeSec_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                            this.dataDropTimeSec_ = GeneratedMessageLite.mutableCopy(this.dataDropTimeSec_);
                                        }
                                        while (input.getBytesUntilLimit() > 0) {
                                            this.dataDropTimeSec_.addInt(input.readInt32());
                                        }
                                        input.popLimit(limit2);
                                        break;
                                    case 96:
                                        if (!this.dumpReportTimeSec_.isModifiable()) {
                                            this.dumpReportTimeSec_ = GeneratedMessageLite.mutableCopy(this.dumpReportTimeSec_);
                                        }
                                        this.dumpReportTimeSec_.addInt(input.readInt32());
                                        break;
                                    case 98:
                                        int limit3 = input.pushLimit(input.readRawVarint32());
                                        if (!this.dumpReportTimeSec_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                            this.dumpReportTimeSec_ = GeneratedMessageLite.mutableCopy(this.dumpReportTimeSec_);
                                        }
                                        while (input.getBytesUntilLimit() > 0) {
                                            this.dumpReportTimeSec_.addInt(input.readInt32());
                                        }
                                        input.popLimit(limit3);
                                        break;
                                    case 106:
                                        if (!this.matcherStats_.isModifiable()) {
                                            this.matcherStats_ = GeneratedMessageLite.mutableCopy(this.matcherStats_);
                                        }
                                        this.matcherStats_.add((MatcherStats) input.readMessage(MatcherStats.parser(), extensionRegistry));
                                        break;
                                    case 114:
                                        if (!this.conditionStats_.isModifiable()) {
                                            this.conditionStats_ = GeneratedMessageLite.mutableCopy(this.conditionStats_);
                                        }
                                        this.conditionStats_.add((ConditionStats) input.readMessage(ConditionStats.parser(), extensionRegistry));
                                        break;
                                    case 122:
                                        if (!this.metricStats_.isModifiable()) {
                                            this.metricStats_ = GeneratedMessageLite.mutableCopy(this.metricStats_);
                                        }
                                        this.metricStats_.add((MetricStats) input.readMessage(MetricStats.parser(), extensionRegistry));
                                        break;
                                    case 130:
                                        if (!this.alertStats_.isModifiable()) {
                                            this.alertStats_ = GeneratedMessageLite.mutableCopy(this.alertStats_);
                                        }
                                        this.alertStats_.add((AlertStats) input.readMessage(AlertStats.parser(), extensionRegistry));
                                        break;
                                    case 138:
                                        if (!this.metricDimensionInConditionStats_.isModifiable()) {
                                            this.metricDimensionInConditionStats_ = GeneratedMessageLite.mutableCopy(this.metricDimensionInConditionStats_);
                                        }
                                        this.metricDimensionInConditionStats_.add((MetricStats) input.readMessage(MetricStats.parser(), extensionRegistry));
                                        break;
                                    case 146:
                                        if (!this.annotation_.isModifiable()) {
                                            this.annotation_ = GeneratedMessageLite.mutableCopy(this.annotation_);
                                        }
                                        this.annotation_.add((Annotation) input.readMessage(Annotation.parser(), extensionRegistry));
                                        break;
                                    case 152:
                                        this.bitField0_ |= 16;
                                        this.resetTimeSec_ = input.readInt32();
                                        break;
                                    case 160:
                                        if (!this.dumpReportDataSize_.isModifiable()) {
                                            this.dumpReportDataSize_ = GeneratedMessageLite.mutableCopy(this.dumpReportDataSize_);
                                        }
                                        this.dumpReportDataSize_.addInt(input.readInt32());
                                        break;
                                    case 162:
                                        int limit4 = input.pushLimit(input.readRawVarint32());
                                        if (!this.dumpReportDataSize_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                            this.dumpReportDataSize_ = GeneratedMessageLite.mutableCopy(this.dumpReportDataSize_);
                                        }
                                        while (input.getBytesUntilLimit() > 0) {
                                            this.dumpReportDataSize_.addInt(input.readInt32());
                                        }
                                        input.popLimit(limit4);
                                        break;
                                    case 168:
                                        if (!this.dataDropBytes_.isModifiable()) {
                                            this.dataDropBytes_ = GeneratedMessageLite.mutableCopy(this.dataDropBytes_);
                                        }
                                        this.dataDropBytes_.addLong(input.readInt64());
                                        break;
                                    case 170:
                                        int limit5 = input.pushLimit(input.readRawVarint32());
                                        if (!this.dataDropBytes_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                            this.dataDropBytes_ = GeneratedMessageLite.mutableCopy(this.dataDropBytes_);
                                        }
                                        while (input.getBytesUntilLimit() > 0) {
                                            this.dataDropBytes_.addLong(input.readInt64());
                                        }
                                        input.popLimit(limit5);
                                        break;
                                    case AtomsProto.Atom.ASSIST_GESTURE_PROGRESS_REPORTED_FIELD_NUMBER:
                                        if (!this.activationTimeSec_.isModifiable()) {
                                            this.activationTimeSec_ = GeneratedMessageLite.mutableCopy(this.activationTimeSec_);
                                        }
                                        this.activationTimeSec_.addInt(input.readInt32());
                                        break;
                                    case 178:
                                        int limit6 = input.pushLimit(input.readRawVarint32());
                                        if (!this.activationTimeSec_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                            this.activationTimeSec_ = GeneratedMessageLite.mutableCopy(this.activationTimeSec_);
                                        }
                                        while (input.getBytesUntilLimit() > 0) {
                                            this.activationTimeSec_.addInt(input.readInt32());
                                        }
                                        input.popLimit(limit6);
                                        break;
                                    case 184:
                                        if (!this.deactivationTimeSec_.isModifiable()) {
                                            this.deactivationTimeSec_ = GeneratedMessageLite.mutableCopy(this.deactivationTimeSec_);
                                        }
                                        this.deactivationTimeSec_.addInt(input.readInt32());
                                        break;
                                    case AtomsProto.Atom.TOMB_STONE_OCCURRED_FIELD_NUMBER:
                                        int limit7 = input.pushLimit(input.readRawVarint32());
                                        if (!this.deactivationTimeSec_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                            this.deactivationTimeSec_ = GeneratedMessageLite.mutableCopy(this.deactivationTimeSec_);
                                        }
                                        while (input.getBytesUntilLimit() > 0) {
                                            this.deactivationTimeSec_.addInt(input.readInt32());
                                        }
                                        input.popLimit(limit7);
                                        break;
                                    default:
                                        if (parseUnknownField(tag, input)) {
                                            break;
                                        } else {
                                            done = true;
                                            break;
                                        }
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (ConfigStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static ConfigStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<ConfigStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class AtomStats extends GeneratedMessageLite<AtomStats, Builder> implements AtomStatsOrBuilder {
            public static final int COUNT_FIELD_NUMBER = 2;
            private static final AtomStats DEFAULT_INSTANCE = new AtomStats();
            private static volatile Parser<AtomStats> PARSER = null;
            public static final int TAG_FIELD_NUMBER = 1;
            private int bitField0_;
            private int count_ = 0;
            private int tag_ = 0;

            private AtomStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomStatsOrBuilder
            public boolean hasTag() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomStatsOrBuilder
            public int getTag() {
                return this.tag_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setTag(int value) {
                this.bitField0_ |= 1;
                this.tag_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearTag() {
                this.bitField0_ &= -2;
                this.tag_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomStatsOrBuilder
            public boolean hasCount() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomStatsOrBuilder
            public int getCount() {
                return this.count_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setCount(int value) {
                this.bitField0_ |= 2;
                this.count_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearCount() {
                this.bitField0_ &= -3;
                this.count_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.tag_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt32(2, this.count_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.tag_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt32Size(2, this.count_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static AtomStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (AtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static AtomStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (AtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static AtomStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (AtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static AtomStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (AtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static AtomStats parseFrom(InputStream input) throws IOException {
                return (AtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static AtomStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static AtomStats parseDelimitedFrom(InputStream input) throws IOException {
                return (AtomStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static AtomStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AtomStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static AtomStats parseFrom(CodedInputStream input) throws IOException {
                return (AtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static AtomStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(AtomStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<AtomStats, Builder> implements AtomStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(AtomStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomStatsOrBuilder
                public boolean hasTag() {
                    return ((AtomStats) this.instance).hasTag();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomStatsOrBuilder
                public int getTag() {
                    return ((AtomStats) this.instance).getTag();
                }

                public Builder setTag(int value) {
                    copyOnWrite();
                    ((AtomStats) this.instance).setTag(value);
                    return this;
                }

                public Builder clearTag() {
                    copyOnWrite();
                    ((AtomStats) this.instance).clearTag();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomStatsOrBuilder
                public boolean hasCount() {
                    return ((AtomStats) this.instance).hasCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomStatsOrBuilder
                public int getCount() {
                    return ((AtomStats) this.instance).getCount();
                }

                public Builder setCount(int value) {
                    copyOnWrite();
                    ((AtomStats) this.instance).setCount(value);
                    return this;
                }

                public Builder clearCount() {
                    copyOnWrite();
                    ((AtomStats) this.instance).clearCount();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new AtomStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        AtomStats other = (AtomStats) arg1;
                        this.tag_ = visitor.visitInt(hasTag(), this.tag_, other.hasTag(), other.tag_);
                        this.count_ = visitor.visitInt(hasCount(), this.count_, other.hasCount(), other.count_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.tag_ = input.readInt32();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.count_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (AtomStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static AtomStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<AtomStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class UidMapStats extends GeneratedMessageLite<UidMapStats, Builder> implements UidMapStatsOrBuilder {
            public static final int BYTES_USED_FIELD_NUMBER = 2;
            public static final int CHANGES_FIELD_NUMBER = 1;
            private static final UidMapStats DEFAULT_INSTANCE = new UidMapStats();
            public static final int DELETED_APPS_FIELD_NUMBER = 4;
            public static final int DROPPED_CHANGES_FIELD_NUMBER = 3;
            private static volatile Parser<UidMapStats> PARSER;
            private int bitField0_;
            private int bytesUsed_ = 0;
            private int changes_ = 0;
            private int deletedApps_ = 0;
            private int droppedChanges_ = 0;

            private UidMapStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
            public boolean hasChanges() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
            public int getChanges() {
                return this.changes_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setChanges(int value) {
                this.bitField0_ |= 1;
                this.changes_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearChanges() {
                this.bitField0_ &= -2;
                this.changes_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
            public boolean hasBytesUsed() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
            public int getBytesUsed() {
                return this.bytesUsed_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setBytesUsed(int value) {
                this.bitField0_ |= 2;
                this.bytesUsed_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearBytesUsed() {
                this.bitField0_ &= -3;
                this.bytesUsed_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
            public boolean hasDroppedChanges() {
                return (this.bitField0_ & 4) == 4;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
            public int getDroppedChanges() {
                return this.droppedChanges_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDroppedChanges(int value) {
                this.bitField0_ |= 4;
                this.droppedChanges_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDroppedChanges() {
                this.bitField0_ &= -5;
                this.droppedChanges_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
            public boolean hasDeletedApps() {
                return (this.bitField0_ & 8) == 8;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
            public int getDeletedApps() {
                return this.deletedApps_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDeletedApps(int value) {
                this.bitField0_ |= 8;
                this.deletedApps_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDeletedApps() {
                this.bitField0_ &= -9;
                this.deletedApps_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.changes_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt32(2, this.bytesUsed_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    output.writeInt32(3, this.droppedChanges_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    output.writeInt32(4, this.deletedApps_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.changes_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt32Size(2, this.bytesUsed_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    size2 += CodedOutputStream.computeInt32Size(3, this.droppedChanges_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    size2 += CodedOutputStream.computeInt32Size(4, this.deletedApps_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static UidMapStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (UidMapStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static UidMapStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (UidMapStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static UidMapStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (UidMapStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static UidMapStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (UidMapStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static UidMapStats parseFrom(InputStream input) throws IOException {
                return (UidMapStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static UidMapStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (UidMapStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static UidMapStats parseDelimitedFrom(InputStream input) throws IOException {
                return (UidMapStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static UidMapStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (UidMapStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static UidMapStats parseFrom(CodedInputStream input) throws IOException {
                return (UidMapStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static UidMapStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (UidMapStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(UidMapStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<UidMapStats, Builder> implements UidMapStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(UidMapStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
                public boolean hasChanges() {
                    return ((UidMapStats) this.instance).hasChanges();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
                public int getChanges() {
                    return ((UidMapStats) this.instance).getChanges();
                }

                public Builder setChanges(int value) {
                    copyOnWrite();
                    ((UidMapStats) this.instance).setChanges(value);
                    return this;
                }

                public Builder clearChanges() {
                    copyOnWrite();
                    ((UidMapStats) this.instance).clearChanges();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
                public boolean hasBytesUsed() {
                    return ((UidMapStats) this.instance).hasBytesUsed();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
                public int getBytesUsed() {
                    return ((UidMapStats) this.instance).getBytesUsed();
                }

                public Builder setBytesUsed(int value) {
                    copyOnWrite();
                    ((UidMapStats) this.instance).setBytesUsed(value);
                    return this;
                }

                public Builder clearBytesUsed() {
                    copyOnWrite();
                    ((UidMapStats) this.instance).clearBytesUsed();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
                public boolean hasDroppedChanges() {
                    return ((UidMapStats) this.instance).hasDroppedChanges();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
                public int getDroppedChanges() {
                    return ((UidMapStats) this.instance).getDroppedChanges();
                }

                public Builder setDroppedChanges(int value) {
                    copyOnWrite();
                    ((UidMapStats) this.instance).setDroppedChanges(value);
                    return this;
                }

                public Builder clearDroppedChanges() {
                    copyOnWrite();
                    ((UidMapStats) this.instance).clearDroppedChanges();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
                public boolean hasDeletedApps() {
                    return ((UidMapStats) this.instance).hasDeletedApps();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.UidMapStatsOrBuilder
                public int getDeletedApps() {
                    return ((UidMapStats) this.instance).getDeletedApps();
                }

                public Builder setDeletedApps(int value) {
                    copyOnWrite();
                    ((UidMapStats) this.instance).setDeletedApps(value);
                    return this;
                }

                public Builder clearDeletedApps() {
                    copyOnWrite();
                    ((UidMapStats) this.instance).clearDeletedApps();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new UidMapStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        UidMapStats other = (UidMapStats) arg1;
                        this.changes_ = visitor.visitInt(hasChanges(), this.changes_, other.hasChanges(), other.changes_);
                        this.bytesUsed_ = visitor.visitInt(hasBytesUsed(), this.bytesUsed_, other.hasBytesUsed(), other.bytesUsed_);
                        this.droppedChanges_ = visitor.visitInt(hasDroppedChanges(), this.droppedChanges_, other.hasDroppedChanges(), other.droppedChanges_);
                        this.deletedApps_ = visitor.visitInt(hasDeletedApps(), this.deletedApps_, other.hasDeletedApps(), other.deletedApps_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.changes_ = input.readInt32();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.bytesUsed_ = input.readInt32();
                                } else if (tag == 24) {
                                    this.bitField0_ |= 4;
                                    this.droppedChanges_ = input.readInt32();
                                } else if (tag == 32) {
                                    this.bitField0_ = 8 | this.bitField0_;
                                    this.deletedApps_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (UidMapStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static UidMapStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<UidMapStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class AnomalyAlarmStats extends GeneratedMessageLite<AnomalyAlarmStats, Builder> implements AnomalyAlarmStatsOrBuilder {
            public static final int ALARMS_REGISTERED_FIELD_NUMBER = 1;
            private static final AnomalyAlarmStats DEFAULT_INSTANCE = new AnomalyAlarmStats();
            private static volatile Parser<AnomalyAlarmStats> PARSER;
            private int alarmsRegistered_ = 0;
            private int bitField0_;

            private AnomalyAlarmStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AnomalyAlarmStatsOrBuilder
            public boolean hasAlarmsRegistered() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AnomalyAlarmStatsOrBuilder
            public int getAlarmsRegistered() {
                return this.alarmsRegistered_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAlarmsRegistered(int value) {
                this.bitField0_ |= 1;
                this.alarmsRegistered_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAlarmsRegistered() {
                this.bitField0_ &= -2;
                this.alarmsRegistered_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.alarmsRegistered_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.alarmsRegistered_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static AnomalyAlarmStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (AnomalyAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static AnomalyAlarmStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (AnomalyAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static AnomalyAlarmStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (AnomalyAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static AnomalyAlarmStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (AnomalyAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static AnomalyAlarmStats parseFrom(InputStream input) throws IOException {
                return (AnomalyAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static AnomalyAlarmStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AnomalyAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static AnomalyAlarmStats parseDelimitedFrom(InputStream input) throws IOException {
                return (AnomalyAlarmStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static AnomalyAlarmStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AnomalyAlarmStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static AnomalyAlarmStats parseFrom(CodedInputStream input) throws IOException {
                return (AnomalyAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static AnomalyAlarmStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AnomalyAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(AnomalyAlarmStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<AnomalyAlarmStats, Builder> implements AnomalyAlarmStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(AnomalyAlarmStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AnomalyAlarmStatsOrBuilder
                public boolean hasAlarmsRegistered() {
                    return ((AnomalyAlarmStats) this.instance).hasAlarmsRegistered();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AnomalyAlarmStatsOrBuilder
                public int getAlarmsRegistered() {
                    return ((AnomalyAlarmStats) this.instance).getAlarmsRegistered();
                }

                public Builder setAlarmsRegistered(int value) {
                    copyOnWrite();
                    ((AnomalyAlarmStats) this.instance).setAlarmsRegistered(value);
                    return this;
                }

                public Builder clearAlarmsRegistered() {
                    copyOnWrite();
                    ((AnomalyAlarmStats) this.instance).clearAlarmsRegistered();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new AnomalyAlarmStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        AnomalyAlarmStats other = (AnomalyAlarmStats) arg1;
                        this.alarmsRegistered_ = visitor.visitInt(hasAlarmsRegistered(), this.alarmsRegistered_, other.hasAlarmsRegistered(), other.alarmsRegistered_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.alarmsRegistered_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (AnomalyAlarmStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static AnomalyAlarmStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<AnomalyAlarmStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class PulledAtomStats extends GeneratedMessageLite<PulledAtomStats, Builder> implements PulledAtomStatsOrBuilder {
            public static final int ATOM_ID_FIELD_NUMBER = 1;
            public static final int AVERAGE_PULL_DELAY_NANOS_FIELD_NUMBER = 7;
            public static final int AVERAGE_PULL_TIME_NANOS_FIELD_NUMBER = 5;
            public static final int DATA_ERROR_FIELD_NUMBER = 9;
            private static final PulledAtomStats DEFAULT_INSTANCE = new PulledAtomStats();
            public static final int EMPTY_DATA_FIELD_NUMBER = 15;
            public static final int MAX_PULL_DELAY_NANOS_FIELD_NUMBER = 8;
            public static final int MAX_PULL_TIME_NANOS_FIELD_NUMBER = 6;
            public static final int MIN_PULL_INTERVAL_SEC_FIELD_NUMBER = 4;
            private static volatile Parser<PulledAtomStats> PARSER = null;
            public static final int PULL_EXCEED_MAX_DELAY_FIELD_NUMBER = 11;
            public static final int PULL_FAILED_FIELD_NUMBER = 12;
            public static final int PULL_TIMEOUT_FIELD_NUMBER = 10;
            public static final int REGISTERED_COUNT_FIELD_NUMBER = 16;
            public static final int STATS_COMPANION_PULL_BINDER_TRANSACTION_FAILED_FIELD_NUMBER = 14;
            public static final int STATS_COMPANION_PULL_FAILED_FIELD_NUMBER = 13;
            public static final int TOTAL_PULL_FIELD_NUMBER = 2;
            public static final int TOTAL_PULL_FROM_CACHE_FIELD_NUMBER = 3;
            public static final int UNREGISTERED_COUNT_FIELD_NUMBER = 17;
            private int atomId_ = 0;
            private long averagePullDelayNanos_ = 0;
            private long averagePullTimeNanos_ = 0;
            private int bitField0_;
            private long dataError_ = 0;
            private long emptyData_ = 0;
            private long maxPullDelayNanos_ = 0;
            private long maxPullTimeNanos_ = 0;
            private long minPullIntervalSec_ = 0;
            private long pullExceedMaxDelay_ = 0;
            private long pullFailed_ = 0;
            private long pullTimeout_ = 0;
            private long registeredCount_ = 0;
            private long statsCompanionPullBinderTransactionFailed_ = 0;
            private long statsCompanionPullFailed_ = 0;
            private long totalPullFromCache_ = 0;
            private long totalPull_ = 0;
            private long unregisteredCount_ = 0;

            private PulledAtomStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasAtomId() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public int getAtomId() {
                return this.atomId_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAtomId(int value) {
                this.bitField0_ |= 1;
                this.atomId_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAtomId() {
                this.bitField0_ &= -2;
                this.atomId_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasTotalPull() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getTotalPull() {
                return this.totalPull_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setTotalPull(long value) {
                this.bitField0_ |= 2;
                this.totalPull_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearTotalPull() {
                this.bitField0_ &= -3;
                this.totalPull_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasTotalPullFromCache() {
                return (this.bitField0_ & 4) == 4;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getTotalPullFromCache() {
                return this.totalPullFromCache_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setTotalPullFromCache(long value) {
                this.bitField0_ |= 4;
                this.totalPullFromCache_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearTotalPullFromCache() {
                this.bitField0_ &= -5;
                this.totalPullFromCache_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasMinPullIntervalSec() {
                return (this.bitField0_ & 8) == 8;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getMinPullIntervalSec() {
                return this.minPullIntervalSec_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMinPullIntervalSec(long value) {
                this.bitField0_ |= 8;
                this.minPullIntervalSec_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMinPullIntervalSec() {
                this.bitField0_ &= -9;
                this.minPullIntervalSec_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasAveragePullTimeNanos() {
                return (this.bitField0_ & 16) == 16;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getAveragePullTimeNanos() {
                return this.averagePullTimeNanos_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAveragePullTimeNanos(long value) {
                this.bitField0_ |= 16;
                this.averagePullTimeNanos_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAveragePullTimeNanos() {
                this.bitField0_ &= -17;
                this.averagePullTimeNanos_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasMaxPullTimeNanos() {
                return (this.bitField0_ & 32) == 32;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getMaxPullTimeNanos() {
                return this.maxPullTimeNanos_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMaxPullTimeNanos(long value) {
                this.bitField0_ |= 32;
                this.maxPullTimeNanos_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMaxPullTimeNanos() {
                this.bitField0_ &= -33;
                this.maxPullTimeNanos_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasAveragePullDelayNanos() {
                return (this.bitField0_ & 64) == 64;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getAveragePullDelayNanos() {
                return this.averagePullDelayNanos_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAveragePullDelayNanos(long value) {
                this.bitField0_ |= 64;
                this.averagePullDelayNanos_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAveragePullDelayNanos() {
                this.bitField0_ &= -65;
                this.averagePullDelayNanos_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasMaxPullDelayNanos() {
                return (this.bitField0_ & 128) == 128;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getMaxPullDelayNanos() {
                return this.maxPullDelayNanos_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMaxPullDelayNanos(long value) {
                this.bitField0_ |= 128;
                this.maxPullDelayNanos_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMaxPullDelayNanos() {
                this.bitField0_ &= -129;
                this.maxPullDelayNanos_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasDataError() {
                return (this.bitField0_ & 256) == 256;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getDataError() {
                return this.dataError_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDataError(long value) {
                this.bitField0_ |= 256;
                this.dataError_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDataError() {
                this.bitField0_ &= -257;
                this.dataError_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasPullTimeout() {
                return (this.bitField0_ & 512) == 512;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getPullTimeout() {
                return this.pullTimeout_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPullTimeout(long value) {
                this.bitField0_ |= 512;
                this.pullTimeout_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearPullTimeout() {
                this.bitField0_ &= -513;
                this.pullTimeout_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasPullExceedMaxDelay() {
                return (this.bitField0_ & 1024) == 1024;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getPullExceedMaxDelay() {
                return this.pullExceedMaxDelay_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPullExceedMaxDelay(long value) {
                this.bitField0_ |= 1024;
                this.pullExceedMaxDelay_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearPullExceedMaxDelay() {
                this.bitField0_ &= -1025;
                this.pullExceedMaxDelay_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasPullFailed() {
                return (this.bitField0_ & 2048) == 2048;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getPullFailed() {
                return this.pullFailed_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPullFailed(long value) {
                this.bitField0_ |= 2048;
                this.pullFailed_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearPullFailed() {
                this.bitField0_ &= -2049;
                this.pullFailed_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasStatsCompanionPullFailed() {
                return (this.bitField0_ & 4096) == 4096;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getStatsCompanionPullFailed() {
                return this.statsCompanionPullFailed_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setStatsCompanionPullFailed(long value) {
                this.bitField0_ |= 4096;
                this.statsCompanionPullFailed_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearStatsCompanionPullFailed() {
                this.bitField0_ &= -4097;
                this.statsCompanionPullFailed_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasStatsCompanionPullBinderTransactionFailed() {
                return (this.bitField0_ & 8192) == 8192;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getStatsCompanionPullBinderTransactionFailed() {
                return this.statsCompanionPullBinderTransactionFailed_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setStatsCompanionPullBinderTransactionFailed(long value) {
                this.bitField0_ |= 8192;
                this.statsCompanionPullBinderTransactionFailed_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearStatsCompanionPullBinderTransactionFailed() {
                this.bitField0_ &= -8193;
                this.statsCompanionPullBinderTransactionFailed_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasEmptyData() {
                return (this.bitField0_ & 16384) == 16384;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getEmptyData() {
                return this.emptyData_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setEmptyData(long value) {
                this.bitField0_ |= 16384;
                this.emptyData_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearEmptyData() {
                this.bitField0_ &= -16385;
                this.emptyData_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasRegisteredCount() {
                return (this.bitField0_ & 32768) == 32768;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getRegisteredCount() {
                return this.registeredCount_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setRegisteredCount(long value) {
                this.bitField0_ |= 32768;
                this.registeredCount_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearRegisteredCount() {
                this.bitField0_ &= -32769;
                this.registeredCount_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public boolean hasUnregisteredCount() {
                return (this.bitField0_ & 65536) == 65536;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
            public long getUnregisteredCount() {
                return this.unregisteredCount_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setUnregisteredCount(long value) {
                this.bitField0_ |= 65536;
                this.unregisteredCount_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearUnregisteredCount() {
                this.bitField0_ &= -65537;
                this.unregisteredCount_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.atomId_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt64(2, this.totalPull_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    output.writeInt64(3, this.totalPullFromCache_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    output.writeInt64(4, this.minPullIntervalSec_);
                }
                if ((this.bitField0_ & 16) == 16) {
                    output.writeInt64(5, this.averagePullTimeNanos_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    output.writeInt64(6, this.maxPullTimeNanos_);
                }
                if ((this.bitField0_ & 64) == 64) {
                    output.writeInt64(7, this.averagePullDelayNanos_);
                }
                if ((this.bitField0_ & 128) == 128) {
                    output.writeInt64(8, this.maxPullDelayNanos_);
                }
                if ((this.bitField0_ & 256) == 256) {
                    output.writeInt64(9, this.dataError_);
                }
                if ((this.bitField0_ & 512) == 512) {
                    output.writeInt64(10, this.pullTimeout_);
                }
                if ((this.bitField0_ & 1024) == 1024) {
                    output.writeInt64(11, this.pullExceedMaxDelay_);
                }
                if ((this.bitField0_ & 2048) == 2048) {
                    output.writeInt64(12, this.pullFailed_);
                }
                if ((this.bitField0_ & 4096) == 4096) {
                    output.writeInt64(13, this.statsCompanionPullFailed_);
                }
                if ((this.bitField0_ & 8192) == 8192) {
                    output.writeInt64(14, this.statsCompanionPullBinderTransactionFailed_);
                }
                if ((this.bitField0_ & 16384) == 16384) {
                    output.writeInt64(15, this.emptyData_);
                }
                if ((this.bitField0_ & 32768) == 32768) {
                    output.writeInt64(16, this.registeredCount_);
                }
                if ((this.bitField0_ & 65536) == 65536) {
                    output.writeInt64(17, this.unregisteredCount_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.atomId_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt64Size(2, this.totalPull_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    size2 += CodedOutputStream.computeInt64Size(3, this.totalPullFromCache_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    size2 += CodedOutputStream.computeInt64Size(4, this.minPullIntervalSec_);
                }
                if ((this.bitField0_ & 16) == 16) {
                    size2 += CodedOutputStream.computeInt64Size(5, this.averagePullTimeNanos_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    size2 += CodedOutputStream.computeInt64Size(6, this.maxPullTimeNanos_);
                }
                if ((this.bitField0_ & 64) == 64) {
                    size2 += CodedOutputStream.computeInt64Size(7, this.averagePullDelayNanos_);
                }
                if ((this.bitField0_ & 128) == 128) {
                    size2 += CodedOutputStream.computeInt64Size(8, this.maxPullDelayNanos_);
                }
                if ((this.bitField0_ & 256) == 256) {
                    size2 += CodedOutputStream.computeInt64Size(9, this.dataError_);
                }
                if ((this.bitField0_ & 512) == 512) {
                    size2 += CodedOutputStream.computeInt64Size(10, this.pullTimeout_);
                }
                if ((this.bitField0_ & 1024) == 1024) {
                    size2 += CodedOutputStream.computeInt64Size(11, this.pullExceedMaxDelay_);
                }
                if ((this.bitField0_ & 2048) == 2048) {
                    size2 += CodedOutputStream.computeInt64Size(12, this.pullFailed_);
                }
                if ((this.bitField0_ & 4096) == 4096) {
                    size2 += CodedOutputStream.computeInt64Size(13, this.statsCompanionPullFailed_);
                }
                if ((this.bitField0_ & 8192) == 8192) {
                    size2 += CodedOutputStream.computeInt64Size(14, this.statsCompanionPullBinderTransactionFailed_);
                }
                if ((this.bitField0_ & 16384) == 16384) {
                    size2 += CodedOutputStream.computeInt64Size(15, this.emptyData_);
                }
                if ((this.bitField0_ & 32768) == 32768) {
                    size2 += CodedOutputStream.computeInt64Size(16, this.registeredCount_);
                }
                if ((this.bitField0_ & 65536) == 65536) {
                    size2 += CodedOutputStream.computeInt64Size(17, this.unregisteredCount_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static PulledAtomStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (PulledAtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static PulledAtomStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (PulledAtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static PulledAtomStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (PulledAtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static PulledAtomStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (PulledAtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static PulledAtomStats parseFrom(InputStream input) throws IOException {
                return (PulledAtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static PulledAtomStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (PulledAtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static PulledAtomStats parseDelimitedFrom(InputStream input) throws IOException {
                return (PulledAtomStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static PulledAtomStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (PulledAtomStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static PulledAtomStats parseFrom(CodedInputStream input) throws IOException {
                return (PulledAtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static PulledAtomStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (PulledAtomStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(PulledAtomStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<PulledAtomStats, Builder> implements PulledAtomStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(PulledAtomStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasAtomId() {
                    return ((PulledAtomStats) this.instance).hasAtomId();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public int getAtomId() {
                    return ((PulledAtomStats) this.instance).getAtomId();
                }

                public Builder setAtomId(int value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setAtomId(value);
                    return this;
                }

                public Builder clearAtomId() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearAtomId();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasTotalPull() {
                    return ((PulledAtomStats) this.instance).hasTotalPull();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getTotalPull() {
                    return ((PulledAtomStats) this.instance).getTotalPull();
                }

                public Builder setTotalPull(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setTotalPull(value);
                    return this;
                }

                public Builder clearTotalPull() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearTotalPull();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasTotalPullFromCache() {
                    return ((PulledAtomStats) this.instance).hasTotalPullFromCache();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getTotalPullFromCache() {
                    return ((PulledAtomStats) this.instance).getTotalPullFromCache();
                }

                public Builder setTotalPullFromCache(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setTotalPullFromCache(value);
                    return this;
                }

                public Builder clearTotalPullFromCache() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearTotalPullFromCache();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasMinPullIntervalSec() {
                    return ((PulledAtomStats) this.instance).hasMinPullIntervalSec();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getMinPullIntervalSec() {
                    return ((PulledAtomStats) this.instance).getMinPullIntervalSec();
                }

                public Builder setMinPullIntervalSec(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setMinPullIntervalSec(value);
                    return this;
                }

                public Builder clearMinPullIntervalSec() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearMinPullIntervalSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasAveragePullTimeNanos() {
                    return ((PulledAtomStats) this.instance).hasAveragePullTimeNanos();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getAveragePullTimeNanos() {
                    return ((PulledAtomStats) this.instance).getAveragePullTimeNanos();
                }

                public Builder setAveragePullTimeNanos(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setAveragePullTimeNanos(value);
                    return this;
                }

                public Builder clearAveragePullTimeNanos() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearAveragePullTimeNanos();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasMaxPullTimeNanos() {
                    return ((PulledAtomStats) this.instance).hasMaxPullTimeNanos();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getMaxPullTimeNanos() {
                    return ((PulledAtomStats) this.instance).getMaxPullTimeNanos();
                }

                public Builder setMaxPullTimeNanos(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setMaxPullTimeNanos(value);
                    return this;
                }

                public Builder clearMaxPullTimeNanos() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearMaxPullTimeNanos();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasAveragePullDelayNanos() {
                    return ((PulledAtomStats) this.instance).hasAveragePullDelayNanos();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getAveragePullDelayNanos() {
                    return ((PulledAtomStats) this.instance).getAveragePullDelayNanos();
                }

                public Builder setAveragePullDelayNanos(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setAveragePullDelayNanos(value);
                    return this;
                }

                public Builder clearAveragePullDelayNanos() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearAveragePullDelayNanos();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasMaxPullDelayNanos() {
                    return ((PulledAtomStats) this.instance).hasMaxPullDelayNanos();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getMaxPullDelayNanos() {
                    return ((PulledAtomStats) this.instance).getMaxPullDelayNanos();
                }

                public Builder setMaxPullDelayNanos(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setMaxPullDelayNanos(value);
                    return this;
                }

                public Builder clearMaxPullDelayNanos() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearMaxPullDelayNanos();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasDataError() {
                    return ((PulledAtomStats) this.instance).hasDataError();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getDataError() {
                    return ((PulledAtomStats) this.instance).getDataError();
                }

                public Builder setDataError(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setDataError(value);
                    return this;
                }

                public Builder clearDataError() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearDataError();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasPullTimeout() {
                    return ((PulledAtomStats) this.instance).hasPullTimeout();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getPullTimeout() {
                    return ((PulledAtomStats) this.instance).getPullTimeout();
                }

                public Builder setPullTimeout(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setPullTimeout(value);
                    return this;
                }

                public Builder clearPullTimeout() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearPullTimeout();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasPullExceedMaxDelay() {
                    return ((PulledAtomStats) this.instance).hasPullExceedMaxDelay();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getPullExceedMaxDelay() {
                    return ((PulledAtomStats) this.instance).getPullExceedMaxDelay();
                }

                public Builder setPullExceedMaxDelay(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setPullExceedMaxDelay(value);
                    return this;
                }

                public Builder clearPullExceedMaxDelay() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearPullExceedMaxDelay();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasPullFailed() {
                    return ((PulledAtomStats) this.instance).hasPullFailed();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getPullFailed() {
                    return ((PulledAtomStats) this.instance).getPullFailed();
                }

                public Builder setPullFailed(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setPullFailed(value);
                    return this;
                }

                public Builder clearPullFailed() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearPullFailed();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasStatsCompanionPullFailed() {
                    return ((PulledAtomStats) this.instance).hasStatsCompanionPullFailed();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getStatsCompanionPullFailed() {
                    return ((PulledAtomStats) this.instance).getStatsCompanionPullFailed();
                }

                public Builder setStatsCompanionPullFailed(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setStatsCompanionPullFailed(value);
                    return this;
                }

                public Builder clearStatsCompanionPullFailed() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearStatsCompanionPullFailed();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasStatsCompanionPullBinderTransactionFailed() {
                    return ((PulledAtomStats) this.instance).hasStatsCompanionPullBinderTransactionFailed();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getStatsCompanionPullBinderTransactionFailed() {
                    return ((PulledAtomStats) this.instance).getStatsCompanionPullBinderTransactionFailed();
                }

                public Builder setStatsCompanionPullBinderTransactionFailed(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setStatsCompanionPullBinderTransactionFailed(value);
                    return this;
                }

                public Builder clearStatsCompanionPullBinderTransactionFailed() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearStatsCompanionPullBinderTransactionFailed();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasEmptyData() {
                    return ((PulledAtomStats) this.instance).hasEmptyData();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getEmptyData() {
                    return ((PulledAtomStats) this.instance).getEmptyData();
                }

                public Builder setEmptyData(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setEmptyData(value);
                    return this;
                }

                public Builder clearEmptyData() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearEmptyData();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasRegisteredCount() {
                    return ((PulledAtomStats) this.instance).hasRegisteredCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getRegisteredCount() {
                    return ((PulledAtomStats) this.instance).getRegisteredCount();
                }

                public Builder setRegisteredCount(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setRegisteredCount(value);
                    return this;
                }

                public Builder clearRegisteredCount() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearRegisteredCount();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public boolean hasUnregisteredCount() {
                    return ((PulledAtomStats) this.instance).hasUnregisteredCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PulledAtomStatsOrBuilder
                public long getUnregisteredCount() {
                    return ((PulledAtomStats) this.instance).getUnregisteredCount();
                }

                public Builder setUnregisteredCount(long value) {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).setUnregisteredCount(value);
                    return this;
                }

                public Builder clearUnregisteredCount() {
                    copyOnWrite();
                    ((PulledAtomStats) this.instance).clearUnregisteredCount();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new PulledAtomStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        PulledAtomStats other = (PulledAtomStats) arg1;
                        this.atomId_ = visitor.visitInt(hasAtomId(), this.atomId_, other.hasAtomId(), other.atomId_);
                        this.totalPull_ = visitor.visitLong(hasTotalPull(), this.totalPull_, other.hasTotalPull(), other.totalPull_);
                        this.totalPullFromCache_ = visitor.visitLong(hasTotalPullFromCache(), this.totalPullFromCache_, other.hasTotalPullFromCache(), other.totalPullFromCache_);
                        this.minPullIntervalSec_ = visitor.visitLong(hasMinPullIntervalSec(), this.minPullIntervalSec_, other.hasMinPullIntervalSec(), other.minPullIntervalSec_);
                        this.averagePullTimeNanos_ = visitor.visitLong(hasAveragePullTimeNanos(), this.averagePullTimeNanos_, other.hasAveragePullTimeNanos(), other.averagePullTimeNanos_);
                        this.maxPullTimeNanos_ = visitor.visitLong(hasMaxPullTimeNanos(), this.maxPullTimeNanos_, other.hasMaxPullTimeNanos(), other.maxPullTimeNanos_);
                        this.averagePullDelayNanos_ = visitor.visitLong(hasAveragePullDelayNanos(), this.averagePullDelayNanos_, other.hasAveragePullDelayNanos(), other.averagePullDelayNanos_);
                        this.maxPullDelayNanos_ = visitor.visitLong(hasMaxPullDelayNanos(), this.maxPullDelayNanos_, other.hasMaxPullDelayNanos(), other.maxPullDelayNanos_);
                        this.dataError_ = visitor.visitLong(hasDataError(), this.dataError_, other.hasDataError(), other.dataError_);
                        this.pullTimeout_ = visitor.visitLong(hasPullTimeout(), this.pullTimeout_, other.hasPullTimeout(), other.pullTimeout_);
                        this.pullExceedMaxDelay_ = visitor.visitLong(hasPullExceedMaxDelay(), this.pullExceedMaxDelay_, other.hasPullExceedMaxDelay(), other.pullExceedMaxDelay_);
                        this.pullFailed_ = visitor.visitLong(hasPullFailed(), this.pullFailed_, other.hasPullFailed(), other.pullFailed_);
                        this.statsCompanionPullFailed_ = visitor.visitLong(hasStatsCompanionPullFailed(), this.statsCompanionPullFailed_, other.hasStatsCompanionPullFailed(), other.statsCompanionPullFailed_);
                        this.statsCompanionPullBinderTransactionFailed_ = visitor.visitLong(hasStatsCompanionPullBinderTransactionFailed(), this.statsCompanionPullBinderTransactionFailed_, other.hasStatsCompanionPullBinderTransactionFailed(), other.statsCompanionPullBinderTransactionFailed_);
                        this.emptyData_ = visitor.visitLong(hasEmptyData(), this.emptyData_, other.hasEmptyData(), other.emptyData_);
                        this.registeredCount_ = visitor.visitLong(hasRegisteredCount(), this.registeredCount_, other.hasRegisteredCount(), other.registeredCount_);
                        this.unregisteredCount_ = visitor.visitLong(hasUnregisteredCount(), this.unregisteredCount_, other.hasUnregisteredCount(), other.unregisteredCount_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                switch (tag) {
                                    case 0:
                                        done = true;
                                        break;
                                    case 8:
                                        this.bitField0_ |= 1;
                                        this.atomId_ = input.readInt32();
                                        break;
                                    case 16:
                                        this.bitField0_ |= 2;
                                        this.totalPull_ = input.readInt64();
                                        break;
                                    case 24:
                                        this.bitField0_ |= 4;
                                        this.totalPullFromCache_ = input.readInt64();
                                        break;
                                    case 32:
                                        this.bitField0_ |= 8;
                                        this.minPullIntervalSec_ = input.readInt64();
                                        break;
                                    case 40:
                                        this.bitField0_ |= 16;
                                        this.averagePullTimeNanos_ = input.readInt64();
                                        break;
                                    case 48:
                                        this.bitField0_ |= 32;
                                        this.maxPullTimeNanos_ = input.readInt64();
                                        break;
                                    case 56:
                                        this.bitField0_ |= 64;
                                        this.averagePullDelayNanos_ = input.readInt64();
                                        break;
                                    case 64:
                                        this.bitField0_ |= 128;
                                        this.maxPullDelayNanos_ = input.readInt64();
                                        break;
                                    case 72:
                                        this.bitField0_ |= 256;
                                        this.dataError_ = input.readInt64();
                                        break;
                                    case 80:
                                        this.bitField0_ |= 512;
                                        this.pullTimeout_ = input.readInt64();
                                        break;
                                    case 88:
                                        this.bitField0_ |= 1024;
                                        this.pullExceedMaxDelay_ = input.readInt64();
                                        break;
                                    case 96:
                                        this.bitField0_ |= 2048;
                                        this.pullFailed_ = input.readInt64();
                                        break;
                                    case 104:
                                        this.bitField0_ |= 4096;
                                        this.statsCompanionPullFailed_ = input.readInt64();
                                        break;
                                    case 112:
                                        this.bitField0_ |= 8192;
                                        this.statsCompanionPullBinderTransactionFailed_ = input.readInt64();
                                        break;
                                    case 120:
                                        this.bitField0_ |= 16384;
                                        this.emptyData_ = input.readInt64();
                                        break;
                                    case 128:
                                        this.bitField0_ |= 32768;
                                        this.registeredCount_ = input.readInt64();
                                        break;
                                    case 136:
                                        this.bitField0_ |= 65536;
                                        this.unregisteredCount_ = input.readInt64();
                                        break;
                                    default:
                                        if (parseUnknownField(tag, input)) {
                                            break;
                                        } else {
                                            done = true;
                                            break;
                                        }
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (PulledAtomStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static PulledAtomStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<PulledAtomStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class AtomMetricStats extends GeneratedMessageLite<AtomMetricStats, Builder> implements AtomMetricStatsOrBuilder {
            public static final int BAD_VALUE_TYPE_FIELD_NUMBER = 5;
            public static final int BUCKET_COUNT_FIELD_NUMBER = 12;
            public static final int BUCKET_DROPPED_FIELD_NUMBER = 8;
            public static final int BUCKET_UNKNOWN_CONDITION_FIELD_NUMBER = 11;
            public static final int CONDITION_CHANGE_IN_NEXT_BUCKET_FIELD_NUMBER = 6;
            private static final AtomMetricStats DEFAULT_INSTANCE = new AtomMetricStats();
            public static final int HARD_DIMENSION_LIMIT_REACHED_FIELD_NUMBER = 2;
            public static final int INVALIDATED_BUCKET_FIELD_NUMBER = 7;
            public static final int LATE_LOG_EVENT_SKIPPED_FIELD_NUMBER = 3;
            public static final int MAX_BUCKET_BOUNDARY_DELAY_NS_FIELD_NUMBER = 10;
            public static final int METRIC_ID_FIELD_NUMBER = 1;
            public static final int MIN_BUCKET_BOUNDARY_DELAY_NS_FIELD_NUMBER = 9;
            private static volatile Parser<AtomMetricStats> PARSER = null;
            public static final int SKIPPED_FORWARD_BUCKETS_FIELD_NUMBER = 4;
            private long badValueType_ = 0;
            private int bitField0_;
            private long bucketCount_ = 0;
            private long bucketDropped_ = 0;
            private long bucketUnknownCondition_ = 0;
            private long conditionChangeInNextBucket_ = 0;
            private long hardDimensionLimitReached_ = 0;
            private long invalidatedBucket_ = 0;
            private long lateLogEventSkipped_ = 0;
            private long maxBucketBoundaryDelayNs_ = 0;
            private long metricId_ = 0;
            private long minBucketBoundaryDelayNs_ = 0;
            private long skippedForwardBuckets_ = 0;

            private AtomMetricStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasMetricId() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getMetricId() {
                return this.metricId_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMetricId(long value) {
                this.bitField0_ |= 1;
                this.metricId_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMetricId() {
                this.bitField0_ &= -2;
                this.metricId_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasHardDimensionLimitReached() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getHardDimensionLimitReached() {
                return this.hardDimensionLimitReached_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setHardDimensionLimitReached(long value) {
                this.bitField0_ |= 2;
                this.hardDimensionLimitReached_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearHardDimensionLimitReached() {
                this.bitField0_ &= -3;
                this.hardDimensionLimitReached_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasLateLogEventSkipped() {
                return (this.bitField0_ & 4) == 4;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getLateLogEventSkipped() {
                return this.lateLogEventSkipped_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setLateLogEventSkipped(long value) {
                this.bitField0_ |= 4;
                this.lateLogEventSkipped_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearLateLogEventSkipped() {
                this.bitField0_ &= -5;
                this.lateLogEventSkipped_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasSkippedForwardBuckets() {
                return (this.bitField0_ & 8) == 8;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getSkippedForwardBuckets() {
                return this.skippedForwardBuckets_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setSkippedForwardBuckets(long value) {
                this.bitField0_ |= 8;
                this.skippedForwardBuckets_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearSkippedForwardBuckets() {
                this.bitField0_ &= -9;
                this.skippedForwardBuckets_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasBadValueType() {
                return (this.bitField0_ & 16) == 16;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getBadValueType() {
                return this.badValueType_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setBadValueType(long value) {
                this.bitField0_ |= 16;
                this.badValueType_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearBadValueType() {
                this.bitField0_ &= -17;
                this.badValueType_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasConditionChangeInNextBucket() {
                return (this.bitField0_ & 32) == 32;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getConditionChangeInNextBucket() {
                return this.conditionChangeInNextBucket_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setConditionChangeInNextBucket(long value) {
                this.bitField0_ |= 32;
                this.conditionChangeInNextBucket_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearConditionChangeInNextBucket() {
                this.bitField0_ &= -33;
                this.conditionChangeInNextBucket_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasInvalidatedBucket() {
                return (this.bitField0_ & 64) == 64;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getInvalidatedBucket() {
                return this.invalidatedBucket_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setInvalidatedBucket(long value) {
                this.bitField0_ |= 64;
                this.invalidatedBucket_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearInvalidatedBucket() {
                this.bitField0_ &= -65;
                this.invalidatedBucket_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasBucketDropped() {
                return (this.bitField0_ & 128) == 128;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getBucketDropped() {
                return this.bucketDropped_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setBucketDropped(long value) {
                this.bitField0_ |= 128;
                this.bucketDropped_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearBucketDropped() {
                this.bitField0_ &= -129;
                this.bucketDropped_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasMinBucketBoundaryDelayNs() {
                return (this.bitField0_ & 256) == 256;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getMinBucketBoundaryDelayNs() {
                return this.minBucketBoundaryDelayNs_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMinBucketBoundaryDelayNs(long value) {
                this.bitField0_ |= 256;
                this.minBucketBoundaryDelayNs_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMinBucketBoundaryDelayNs() {
                this.bitField0_ &= -257;
                this.minBucketBoundaryDelayNs_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasMaxBucketBoundaryDelayNs() {
                return (this.bitField0_ & 512) == 512;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getMaxBucketBoundaryDelayNs() {
                return this.maxBucketBoundaryDelayNs_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMaxBucketBoundaryDelayNs(long value) {
                this.bitField0_ |= 512;
                this.maxBucketBoundaryDelayNs_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMaxBucketBoundaryDelayNs() {
                this.bitField0_ &= -513;
                this.maxBucketBoundaryDelayNs_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasBucketUnknownCondition() {
                return (this.bitField0_ & 1024) == 1024;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getBucketUnknownCondition() {
                return this.bucketUnknownCondition_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setBucketUnknownCondition(long value) {
                this.bitField0_ |= 1024;
                this.bucketUnknownCondition_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearBucketUnknownCondition() {
                this.bitField0_ &= -1025;
                this.bucketUnknownCondition_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public boolean hasBucketCount() {
                return (this.bitField0_ & 2048) == 2048;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
            public long getBucketCount() {
                return this.bucketCount_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setBucketCount(long value) {
                this.bitField0_ |= 2048;
                this.bucketCount_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearBucketCount() {
                this.bitField0_ &= -2049;
                this.bucketCount_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt64(1, this.metricId_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt64(2, this.hardDimensionLimitReached_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    output.writeInt64(3, this.lateLogEventSkipped_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    output.writeInt64(4, this.skippedForwardBuckets_);
                }
                if ((this.bitField0_ & 16) == 16) {
                    output.writeInt64(5, this.badValueType_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    output.writeInt64(6, this.conditionChangeInNextBucket_);
                }
                if ((this.bitField0_ & 64) == 64) {
                    output.writeInt64(7, this.invalidatedBucket_);
                }
                if ((this.bitField0_ & 128) == 128) {
                    output.writeInt64(8, this.bucketDropped_);
                }
                if ((this.bitField0_ & 256) == 256) {
                    output.writeInt64(9, this.minBucketBoundaryDelayNs_);
                }
                if ((this.bitField0_ & 512) == 512) {
                    output.writeInt64(10, this.maxBucketBoundaryDelayNs_);
                }
                if ((this.bitField0_ & 1024) == 1024) {
                    output.writeInt64(11, this.bucketUnknownCondition_);
                }
                if ((this.bitField0_ & 2048) == 2048) {
                    output.writeInt64(12, this.bucketCount_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt64Size(1, this.metricId_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt64Size(2, this.hardDimensionLimitReached_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    size2 += CodedOutputStream.computeInt64Size(3, this.lateLogEventSkipped_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    size2 += CodedOutputStream.computeInt64Size(4, this.skippedForwardBuckets_);
                }
                if ((this.bitField0_ & 16) == 16) {
                    size2 += CodedOutputStream.computeInt64Size(5, this.badValueType_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    size2 += CodedOutputStream.computeInt64Size(6, this.conditionChangeInNextBucket_);
                }
                if ((this.bitField0_ & 64) == 64) {
                    size2 += CodedOutputStream.computeInt64Size(7, this.invalidatedBucket_);
                }
                if ((this.bitField0_ & 128) == 128) {
                    size2 += CodedOutputStream.computeInt64Size(8, this.bucketDropped_);
                }
                if ((this.bitField0_ & 256) == 256) {
                    size2 += CodedOutputStream.computeInt64Size(9, this.minBucketBoundaryDelayNs_);
                }
                if ((this.bitField0_ & 512) == 512) {
                    size2 += CodedOutputStream.computeInt64Size(10, this.maxBucketBoundaryDelayNs_);
                }
                if ((this.bitField0_ & 1024) == 1024) {
                    size2 += CodedOutputStream.computeInt64Size(11, this.bucketUnknownCondition_);
                }
                if ((this.bitField0_ & 2048) == 2048) {
                    size2 += CodedOutputStream.computeInt64Size(12, this.bucketCount_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static AtomMetricStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (AtomMetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static AtomMetricStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (AtomMetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static AtomMetricStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (AtomMetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static AtomMetricStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (AtomMetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static AtomMetricStats parseFrom(InputStream input) throws IOException {
                return (AtomMetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static AtomMetricStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AtomMetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static AtomMetricStats parseDelimitedFrom(InputStream input) throws IOException {
                return (AtomMetricStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static AtomMetricStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AtomMetricStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static AtomMetricStats parseFrom(CodedInputStream input) throws IOException {
                return (AtomMetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static AtomMetricStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (AtomMetricStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(AtomMetricStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<AtomMetricStats, Builder> implements AtomMetricStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(AtomMetricStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasMetricId() {
                    return ((AtomMetricStats) this.instance).hasMetricId();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getMetricId() {
                    return ((AtomMetricStats) this.instance).getMetricId();
                }

                public Builder setMetricId(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setMetricId(value);
                    return this;
                }

                public Builder clearMetricId() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearMetricId();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasHardDimensionLimitReached() {
                    return ((AtomMetricStats) this.instance).hasHardDimensionLimitReached();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getHardDimensionLimitReached() {
                    return ((AtomMetricStats) this.instance).getHardDimensionLimitReached();
                }

                public Builder setHardDimensionLimitReached(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setHardDimensionLimitReached(value);
                    return this;
                }

                public Builder clearHardDimensionLimitReached() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearHardDimensionLimitReached();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasLateLogEventSkipped() {
                    return ((AtomMetricStats) this.instance).hasLateLogEventSkipped();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getLateLogEventSkipped() {
                    return ((AtomMetricStats) this.instance).getLateLogEventSkipped();
                }

                public Builder setLateLogEventSkipped(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setLateLogEventSkipped(value);
                    return this;
                }

                public Builder clearLateLogEventSkipped() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearLateLogEventSkipped();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasSkippedForwardBuckets() {
                    return ((AtomMetricStats) this.instance).hasSkippedForwardBuckets();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getSkippedForwardBuckets() {
                    return ((AtomMetricStats) this.instance).getSkippedForwardBuckets();
                }

                public Builder setSkippedForwardBuckets(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setSkippedForwardBuckets(value);
                    return this;
                }

                public Builder clearSkippedForwardBuckets() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearSkippedForwardBuckets();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasBadValueType() {
                    return ((AtomMetricStats) this.instance).hasBadValueType();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getBadValueType() {
                    return ((AtomMetricStats) this.instance).getBadValueType();
                }

                public Builder setBadValueType(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setBadValueType(value);
                    return this;
                }

                public Builder clearBadValueType() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearBadValueType();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasConditionChangeInNextBucket() {
                    return ((AtomMetricStats) this.instance).hasConditionChangeInNextBucket();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getConditionChangeInNextBucket() {
                    return ((AtomMetricStats) this.instance).getConditionChangeInNextBucket();
                }

                public Builder setConditionChangeInNextBucket(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setConditionChangeInNextBucket(value);
                    return this;
                }

                public Builder clearConditionChangeInNextBucket() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearConditionChangeInNextBucket();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasInvalidatedBucket() {
                    return ((AtomMetricStats) this.instance).hasInvalidatedBucket();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getInvalidatedBucket() {
                    return ((AtomMetricStats) this.instance).getInvalidatedBucket();
                }

                public Builder setInvalidatedBucket(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setInvalidatedBucket(value);
                    return this;
                }

                public Builder clearInvalidatedBucket() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearInvalidatedBucket();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasBucketDropped() {
                    return ((AtomMetricStats) this.instance).hasBucketDropped();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getBucketDropped() {
                    return ((AtomMetricStats) this.instance).getBucketDropped();
                }

                public Builder setBucketDropped(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setBucketDropped(value);
                    return this;
                }

                public Builder clearBucketDropped() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearBucketDropped();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasMinBucketBoundaryDelayNs() {
                    return ((AtomMetricStats) this.instance).hasMinBucketBoundaryDelayNs();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getMinBucketBoundaryDelayNs() {
                    return ((AtomMetricStats) this.instance).getMinBucketBoundaryDelayNs();
                }

                public Builder setMinBucketBoundaryDelayNs(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setMinBucketBoundaryDelayNs(value);
                    return this;
                }

                public Builder clearMinBucketBoundaryDelayNs() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearMinBucketBoundaryDelayNs();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasMaxBucketBoundaryDelayNs() {
                    return ((AtomMetricStats) this.instance).hasMaxBucketBoundaryDelayNs();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getMaxBucketBoundaryDelayNs() {
                    return ((AtomMetricStats) this.instance).getMaxBucketBoundaryDelayNs();
                }

                public Builder setMaxBucketBoundaryDelayNs(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setMaxBucketBoundaryDelayNs(value);
                    return this;
                }

                public Builder clearMaxBucketBoundaryDelayNs() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearMaxBucketBoundaryDelayNs();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasBucketUnknownCondition() {
                    return ((AtomMetricStats) this.instance).hasBucketUnknownCondition();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getBucketUnknownCondition() {
                    return ((AtomMetricStats) this.instance).getBucketUnknownCondition();
                }

                public Builder setBucketUnknownCondition(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setBucketUnknownCondition(value);
                    return this;
                }

                public Builder clearBucketUnknownCondition() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearBucketUnknownCondition();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public boolean hasBucketCount() {
                    return ((AtomMetricStats) this.instance).hasBucketCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.AtomMetricStatsOrBuilder
                public long getBucketCount() {
                    return ((AtomMetricStats) this.instance).getBucketCount();
                }

                public Builder setBucketCount(long value) {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).setBucketCount(value);
                    return this;
                }

                public Builder clearBucketCount() {
                    copyOnWrite();
                    ((AtomMetricStats) this.instance).clearBucketCount();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new AtomMetricStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        AtomMetricStats other = (AtomMetricStats) arg1;
                        this.metricId_ = visitor.visitLong(hasMetricId(), this.metricId_, other.hasMetricId(), other.metricId_);
                        this.hardDimensionLimitReached_ = visitor.visitLong(hasHardDimensionLimitReached(), this.hardDimensionLimitReached_, other.hasHardDimensionLimitReached(), other.hardDimensionLimitReached_);
                        this.lateLogEventSkipped_ = visitor.visitLong(hasLateLogEventSkipped(), this.lateLogEventSkipped_, other.hasLateLogEventSkipped(), other.lateLogEventSkipped_);
                        this.skippedForwardBuckets_ = visitor.visitLong(hasSkippedForwardBuckets(), this.skippedForwardBuckets_, other.hasSkippedForwardBuckets(), other.skippedForwardBuckets_);
                        this.badValueType_ = visitor.visitLong(hasBadValueType(), this.badValueType_, other.hasBadValueType(), other.badValueType_);
                        this.conditionChangeInNextBucket_ = visitor.visitLong(hasConditionChangeInNextBucket(), this.conditionChangeInNextBucket_, other.hasConditionChangeInNextBucket(), other.conditionChangeInNextBucket_);
                        this.invalidatedBucket_ = visitor.visitLong(hasInvalidatedBucket(), this.invalidatedBucket_, other.hasInvalidatedBucket(), other.invalidatedBucket_);
                        this.bucketDropped_ = visitor.visitLong(hasBucketDropped(), this.bucketDropped_, other.hasBucketDropped(), other.bucketDropped_);
                        this.minBucketBoundaryDelayNs_ = visitor.visitLong(hasMinBucketBoundaryDelayNs(), this.minBucketBoundaryDelayNs_, other.hasMinBucketBoundaryDelayNs(), other.minBucketBoundaryDelayNs_);
                        this.maxBucketBoundaryDelayNs_ = visitor.visitLong(hasMaxBucketBoundaryDelayNs(), this.maxBucketBoundaryDelayNs_, other.hasMaxBucketBoundaryDelayNs(), other.maxBucketBoundaryDelayNs_);
                        this.bucketUnknownCondition_ = visitor.visitLong(hasBucketUnknownCondition(), this.bucketUnknownCondition_, other.hasBucketUnknownCondition(), other.bucketUnknownCondition_);
                        this.bucketCount_ = visitor.visitLong(hasBucketCount(), this.bucketCount_, other.hasBucketCount(), other.bucketCount_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                switch (tag) {
                                    case 0:
                                        done = true;
                                        break;
                                    case 8:
                                        this.bitField0_ |= 1;
                                        this.metricId_ = input.readInt64();
                                        break;
                                    case 16:
                                        this.bitField0_ |= 2;
                                        this.hardDimensionLimitReached_ = input.readInt64();
                                        break;
                                    case 24:
                                        this.bitField0_ |= 4;
                                        this.lateLogEventSkipped_ = input.readInt64();
                                        break;
                                    case 32:
                                        this.bitField0_ |= 8;
                                        this.skippedForwardBuckets_ = input.readInt64();
                                        break;
                                    case 40:
                                        this.bitField0_ |= 16;
                                        this.badValueType_ = input.readInt64();
                                        break;
                                    case 48:
                                        this.bitField0_ |= 32;
                                        this.conditionChangeInNextBucket_ = input.readInt64();
                                        break;
                                    case 56:
                                        this.bitField0_ |= 64;
                                        this.invalidatedBucket_ = input.readInt64();
                                        break;
                                    case 64:
                                        this.bitField0_ |= 128;
                                        this.bucketDropped_ = input.readInt64();
                                        break;
                                    case 72:
                                        this.bitField0_ |= 256;
                                        this.minBucketBoundaryDelayNs_ = input.readInt64();
                                        break;
                                    case 80:
                                        this.bitField0_ |= 512;
                                        this.maxBucketBoundaryDelayNs_ = input.readInt64();
                                        break;
                                    case 88:
                                        this.bitField0_ |= 1024;
                                        this.bucketUnknownCondition_ = input.readInt64();
                                        break;
                                    case 96:
                                        this.bitField0_ |= 2048;
                                        this.bucketCount_ = input.readInt64();
                                        break;
                                    default:
                                        if (parseUnknownField(tag, input)) {
                                            break;
                                        } else {
                                            done = true;
                                            break;
                                        }
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (AtomMetricStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static AtomMetricStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<AtomMetricStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class LoggerErrorStats extends GeneratedMessageLite<LoggerErrorStats, Builder> implements LoggerErrorStatsOrBuilder {
            private static final LoggerErrorStats DEFAULT_INSTANCE = new LoggerErrorStats();
            public static final int ERROR_CODE_FIELD_NUMBER = 2;
            public static final int LOGGER_DISCONNECTION_SEC_FIELD_NUMBER = 1;
            private static volatile Parser<LoggerErrorStats> PARSER;
            private int bitField0_;
            private int errorCode_ = 0;
            private int loggerDisconnectionSec_ = 0;

            private LoggerErrorStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LoggerErrorStatsOrBuilder
            public boolean hasLoggerDisconnectionSec() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LoggerErrorStatsOrBuilder
            public int getLoggerDisconnectionSec() {
                return this.loggerDisconnectionSec_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setLoggerDisconnectionSec(int value) {
                this.bitField0_ |= 1;
                this.loggerDisconnectionSec_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearLoggerDisconnectionSec() {
                this.bitField0_ &= -2;
                this.loggerDisconnectionSec_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LoggerErrorStatsOrBuilder
            public boolean hasErrorCode() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LoggerErrorStatsOrBuilder
            public int getErrorCode() {
                return this.errorCode_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setErrorCode(int value) {
                this.bitField0_ |= 2;
                this.errorCode_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearErrorCode() {
                this.bitField0_ &= -3;
                this.errorCode_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.loggerDisconnectionSec_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt32(2, this.errorCode_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.loggerDisconnectionSec_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt32Size(2, this.errorCode_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static LoggerErrorStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (LoggerErrorStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static LoggerErrorStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LoggerErrorStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static LoggerErrorStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (LoggerErrorStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static LoggerErrorStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LoggerErrorStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static LoggerErrorStats parseFrom(InputStream input) throws IOException {
                return (LoggerErrorStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static LoggerErrorStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LoggerErrorStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static LoggerErrorStats parseDelimitedFrom(InputStream input) throws IOException {
                return (LoggerErrorStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static LoggerErrorStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LoggerErrorStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static LoggerErrorStats parseFrom(CodedInputStream input) throws IOException {
                return (LoggerErrorStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static LoggerErrorStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LoggerErrorStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(LoggerErrorStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<LoggerErrorStats, Builder> implements LoggerErrorStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(LoggerErrorStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LoggerErrorStatsOrBuilder
                public boolean hasLoggerDisconnectionSec() {
                    return ((LoggerErrorStats) this.instance).hasLoggerDisconnectionSec();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LoggerErrorStatsOrBuilder
                public int getLoggerDisconnectionSec() {
                    return ((LoggerErrorStats) this.instance).getLoggerDisconnectionSec();
                }

                public Builder setLoggerDisconnectionSec(int value) {
                    copyOnWrite();
                    ((LoggerErrorStats) this.instance).setLoggerDisconnectionSec(value);
                    return this;
                }

                public Builder clearLoggerDisconnectionSec() {
                    copyOnWrite();
                    ((LoggerErrorStats) this.instance).clearLoggerDisconnectionSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LoggerErrorStatsOrBuilder
                public boolean hasErrorCode() {
                    return ((LoggerErrorStats) this.instance).hasErrorCode();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LoggerErrorStatsOrBuilder
                public int getErrorCode() {
                    return ((LoggerErrorStats) this.instance).getErrorCode();
                }

                public Builder setErrorCode(int value) {
                    copyOnWrite();
                    ((LoggerErrorStats) this.instance).setErrorCode(value);
                    return this;
                }

                public Builder clearErrorCode() {
                    copyOnWrite();
                    ((LoggerErrorStats) this.instance).clearErrorCode();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new LoggerErrorStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        LoggerErrorStats other = (LoggerErrorStats) arg1;
                        this.loggerDisconnectionSec_ = visitor.visitInt(hasLoggerDisconnectionSec(), this.loggerDisconnectionSec_, other.hasLoggerDisconnectionSec(), other.loggerDisconnectionSec_);
                        this.errorCode_ = visitor.visitInt(hasErrorCode(), this.errorCode_, other.hasErrorCode(), other.errorCode_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.loggerDisconnectionSec_ = input.readInt32();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.errorCode_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (LoggerErrorStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static LoggerErrorStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<LoggerErrorStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class PeriodicAlarmStats extends GeneratedMessageLite<PeriodicAlarmStats, Builder> implements PeriodicAlarmStatsOrBuilder {
            public static final int ALARMS_REGISTERED_FIELD_NUMBER = 1;
            private static final PeriodicAlarmStats DEFAULT_INSTANCE = new PeriodicAlarmStats();
            private static volatile Parser<PeriodicAlarmStats> PARSER;
            private int alarmsRegistered_ = 0;
            private int bitField0_;

            private PeriodicAlarmStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PeriodicAlarmStatsOrBuilder
            public boolean hasAlarmsRegistered() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.PeriodicAlarmStatsOrBuilder
            public int getAlarmsRegistered() {
                return this.alarmsRegistered_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setAlarmsRegistered(int value) {
                this.bitField0_ |= 1;
                this.alarmsRegistered_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearAlarmsRegistered() {
                this.bitField0_ &= -2;
                this.alarmsRegistered_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.alarmsRegistered_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.alarmsRegistered_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static PeriodicAlarmStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (PeriodicAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static PeriodicAlarmStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (PeriodicAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static PeriodicAlarmStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (PeriodicAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static PeriodicAlarmStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (PeriodicAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static PeriodicAlarmStats parseFrom(InputStream input) throws IOException {
                return (PeriodicAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static PeriodicAlarmStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (PeriodicAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static PeriodicAlarmStats parseDelimitedFrom(InputStream input) throws IOException {
                return (PeriodicAlarmStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static PeriodicAlarmStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (PeriodicAlarmStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static PeriodicAlarmStats parseFrom(CodedInputStream input) throws IOException {
                return (PeriodicAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static PeriodicAlarmStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (PeriodicAlarmStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(PeriodicAlarmStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<PeriodicAlarmStats, Builder> implements PeriodicAlarmStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(PeriodicAlarmStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PeriodicAlarmStatsOrBuilder
                public boolean hasAlarmsRegistered() {
                    return ((PeriodicAlarmStats) this.instance).hasAlarmsRegistered();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.PeriodicAlarmStatsOrBuilder
                public int getAlarmsRegistered() {
                    return ((PeriodicAlarmStats) this.instance).getAlarmsRegistered();
                }

                public Builder setAlarmsRegistered(int value) {
                    copyOnWrite();
                    ((PeriodicAlarmStats) this.instance).setAlarmsRegistered(value);
                    return this;
                }

                public Builder clearAlarmsRegistered() {
                    copyOnWrite();
                    ((PeriodicAlarmStats) this.instance).clearAlarmsRegistered();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new PeriodicAlarmStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        PeriodicAlarmStats other = (PeriodicAlarmStats) arg1;
                        this.alarmsRegistered_ = visitor.visitInt(hasAlarmsRegistered(), this.alarmsRegistered_, other.hasAlarmsRegistered(), other.alarmsRegistered_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.alarmsRegistered_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (PeriodicAlarmStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static PeriodicAlarmStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<PeriodicAlarmStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class SkippedLogEventStats extends GeneratedMessageLite<SkippedLogEventStats, Builder> implements SkippedLogEventStatsOrBuilder {
            private static final SkippedLogEventStats DEFAULT_INSTANCE = new SkippedLogEventStats();
            public static final int ELAPSED_TIMESTAMP_NANOS_FIELD_NUMBER = 2;
            private static volatile Parser<SkippedLogEventStats> PARSER = null;
            public static final int TAG_FIELD_NUMBER = 1;
            private int bitField0_;
            private long elapsedTimestampNanos_ = 0;
            private int tag_ = 0;

            private SkippedLogEventStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.SkippedLogEventStatsOrBuilder
            public boolean hasTag() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.SkippedLogEventStatsOrBuilder
            public int getTag() {
                return this.tag_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setTag(int value) {
                this.bitField0_ |= 1;
                this.tag_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearTag() {
                this.bitField0_ &= -2;
                this.tag_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.SkippedLogEventStatsOrBuilder
            public boolean hasElapsedTimestampNanos() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.SkippedLogEventStatsOrBuilder
            public long getElapsedTimestampNanos() {
                return this.elapsedTimestampNanos_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setElapsedTimestampNanos(long value) {
                this.bitField0_ |= 2;
                this.elapsedTimestampNanos_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearElapsedTimestampNanos() {
                this.bitField0_ &= -3;
                this.elapsedTimestampNanos_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.tag_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt64(2, this.elapsedTimestampNanos_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.tag_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt64Size(2, this.elapsedTimestampNanos_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static SkippedLogEventStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (SkippedLogEventStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static SkippedLogEventStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (SkippedLogEventStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static SkippedLogEventStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (SkippedLogEventStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static SkippedLogEventStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (SkippedLogEventStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static SkippedLogEventStats parseFrom(InputStream input) throws IOException {
                return (SkippedLogEventStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static SkippedLogEventStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (SkippedLogEventStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static SkippedLogEventStats parseDelimitedFrom(InputStream input) throws IOException {
                return (SkippedLogEventStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static SkippedLogEventStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (SkippedLogEventStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static SkippedLogEventStats parseFrom(CodedInputStream input) throws IOException {
                return (SkippedLogEventStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static SkippedLogEventStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (SkippedLogEventStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(SkippedLogEventStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<SkippedLogEventStats, Builder> implements SkippedLogEventStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(SkippedLogEventStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.SkippedLogEventStatsOrBuilder
                public boolean hasTag() {
                    return ((SkippedLogEventStats) this.instance).hasTag();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.SkippedLogEventStatsOrBuilder
                public int getTag() {
                    return ((SkippedLogEventStats) this.instance).getTag();
                }

                public Builder setTag(int value) {
                    copyOnWrite();
                    ((SkippedLogEventStats) this.instance).setTag(value);
                    return this;
                }

                public Builder clearTag() {
                    copyOnWrite();
                    ((SkippedLogEventStats) this.instance).clearTag();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.SkippedLogEventStatsOrBuilder
                public boolean hasElapsedTimestampNanos() {
                    return ((SkippedLogEventStats) this.instance).hasElapsedTimestampNanos();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.SkippedLogEventStatsOrBuilder
                public long getElapsedTimestampNanos() {
                    return ((SkippedLogEventStats) this.instance).getElapsedTimestampNanos();
                }

                public Builder setElapsedTimestampNanos(long value) {
                    copyOnWrite();
                    ((SkippedLogEventStats) this.instance).setElapsedTimestampNanos(value);
                    return this;
                }

                public Builder clearElapsedTimestampNanos() {
                    copyOnWrite();
                    ((SkippedLogEventStats) this.instance).clearElapsedTimestampNanos();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new SkippedLogEventStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        SkippedLogEventStats other = (SkippedLogEventStats) arg1;
                        this.tag_ = visitor.visitInt(hasTag(), this.tag_, other.hasTag(), other.tag_);
                        this.elapsedTimestampNanos_ = visitor.visitLong(hasElapsedTimestampNanos(), this.elapsedTimestampNanos_, other.hasElapsedTimestampNanos(), other.elapsedTimestampNanos_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.tag_ = input.readInt32();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.elapsedTimestampNanos_ = input.readInt64();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (SkippedLogEventStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static SkippedLogEventStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<SkippedLogEventStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class LogLossStats extends GeneratedMessageLite<LogLossStats, Builder> implements LogLossStatsOrBuilder {
            public static final int COUNT_FIELD_NUMBER = 2;
            private static final LogLossStats DEFAULT_INSTANCE = new LogLossStats();
            public static final int DETECTED_TIME_SEC_FIELD_NUMBER = 1;
            public static final int LAST_ERROR_FIELD_NUMBER = 3;
            public static final int LAST_TAG_FIELD_NUMBER = 4;
            private static volatile Parser<LogLossStats> PARSER = null;
            public static final int PID_FIELD_NUMBER = 6;
            public static final int UID_FIELD_NUMBER = 5;
            private int bitField0_;
            private int count_ = 0;
            private int detectedTimeSec_ = 0;
            private int lastError_ = 0;
            private int lastTag_ = 0;
            private int pid_ = 0;
            private int uid_ = 0;

            private LogLossStats() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public boolean hasDetectedTimeSec() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public int getDetectedTimeSec() {
                return this.detectedTimeSec_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDetectedTimeSec(int value) {
                this.bitField0_ |= 1;
                this.detectedTimeSec_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDetectedTimeSec() {
                this.bitField0_ &= -2;
                this.detectedTimeSec_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public boolean hasCount() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public int getCount() {
                return this.count_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setCount(int value) {
                this.bitField0_ |= 2;
                this.count_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearCount() {
                this.bitField0_ &= -3;
                this.count_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public boolean hasLastError() {
                return (this.bitField0_ & 4) == 4;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public int getLastError() {
                return this.lastError_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setLastError(int value) {
                this.bitField0_ |= 4;
                this.lastError_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearLastError() {
                this.bitField0_ &= -5;
                this.lastError_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public boolean hasLastTag() {
                return (this.bitField0_ & 8) == 8;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public int getLastTag() {
                return this.lastTag_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setLastTag(int value) {
                this.bitField0_ |= 8;
                this.lastTag_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearLastTag() {
                this.bitField0_ &= -9;
                this.lastTag_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public boolean hasUid() {
                return (this.bitField0_ & 16) == 16;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public int getUid() {
                return this.uid_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setUid(int value) {
                this.bitField0_ |= 16;
                this.uid_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearUid() {
                this.bitField0_ &= -17;
                this.uid_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public boolean hasPid() {
                return (this.bitField0_ & 32) == 32;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
            public int getPid() {
                return this.pid_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setPid(int value) {
                this.bitField0_ |= 32;
                this.pid_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearPid() {
                this.bitField0_ &= -33;
                this.pid_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.detectedTimeSec_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt32(2, this.count_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    output.writeInt32(3, this.lastError_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    output.writeInt32(4, this.lastTag_);
                }
                if ((this.bitField0_ & 16) == 16) {
                    output.writeInt32(5, this.uid_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    output.writeInt32(6, this.pid_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.detectedTimeSec_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt32Size(2, this.count_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    size2 += CodedOutputStream.computeInt32Size(3, this.lastError_);
                }
                if ((this.bitField0_ & 8) == 8) {
                    size2 += CodedOutputStream.computeInt32Size(4, this.lastTag_);
                }
                if ((this.bitField0_ & 16) == 16) {
                    size2 += CodedOutputStream.computeInt32Size(5, this.uid_);
                }
                if ((this.bitField0_ & 32) == 32) {
                    size2 += CodedOutputStream.computeInt32Size(6, this.pid_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static LogLossStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (LogLossStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static LogLossStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LogLossStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static LogLossStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (LogLossStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static LogLossStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LogLossStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static LogLossStats parseFrom(InputStream input) throws IOException {
                return (LogLossStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static LogLossStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LogLossStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static LogLossStats parseDelimitedFrom(InputStream input) throws IOException {
                return (LogLossStats) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static LogLossStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LogLossStats) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static LogLossStats parseFrom(CodedInputStream input) throws IOException {
                return (LogLossStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static LogLossStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LogLossStats) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(LogLossStats prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<LogLossStats, Builder> implements LogLossStatsOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(LogLossStats.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public boolean hasDetectedTimeSec() {
                    return ((LogLossStats) this.instance).hasDetectedTimeSec();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public int getDetectedTimeSec() {
                    return ((LogLossStats) this.instance).getDetectedTimeSec();
                }

                public Builder setDetectedTimeSec(int value) {
                    copyOnWrite();
                    ((LogLossStats) this.instance).setDetectedTimeSec(value);
                    return this;
                }

                public Builder clearDetectedTimeSec() {
                    copyOnWrite();
                    ((LogLossStats) this.instance).clearDetectedTimeSec();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public boolean hasCount() {
                    return ((LogLossStats) this.instance).hasCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public int getCount() {
                    return ((LogLossStats) this.instance).getCount();
                }

                public Builder setCount(int value) {
                    copyOnWrite();
                    ((LogLossStats) this.instance).setCount(value);
                    return this;
                }

                public Builder clearCount() {
                    copyOnWrite();
                    ((LogLossStats) this.instance).clearCount();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public boolean hasLastError() {
                    return ((LogLossStats) this.instance).hasLastError();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public int getLastError() {
                    return ((LogLossStats) this.instance).getLastError();
                }

                public Builder setLastError(int value) {
                    copyOnWrite();
                    ((LogLossStats) this.instance).setLastError(value);
                    return this;
                }

                public Builder clearLastError() {
                    copyOnWrite();
                    ((LogLossStats) this.instance).clearLastError();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public boolean hasLastTag() {
                    return ((LogLossStats) this.instance).hasLastTag();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public int getLastTag() {
                    return ((LogLossStats) this.instance).getLastTag();
                }

                public Builder setLastTag(int value) {
                    copyOnWrite();
                    ((LogLossStats) this.instance).setLastTag(value);
                    return this;
                }

                public Builder clearLastTag() {
                    copyOnWrite();
                    ((LogLossStats) this.instance).clearLastTag();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public boolean hasUid() {
                    return ((LogLossStats) this.instance).hasUid();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public int getUid() {
                    return ((LogLossStats) this.instance).getUid();
                }

                public Builder setUid(int value) {
                    copyOnWrite();
                    ((LogLossStats) this.instance).setUid(value);
                    return this;
                }

                public Builder clearUid() {
                    copyOnWrite();
                    ((LogLossStats) this.instance).clearUid();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public boolean hasPid() {
                    return ((LogLossStats) this.instance).hasPid();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.LogLossStatsOrBuilder
                public int getPid() {
                    return ((LogLossStats) this.instance).getPid();
                }

                public Builder setPid(int value) {
                    copyOnWrite();
                    ((LogLossStats) this.instance).setPid(value);
                    return this;
                }

                public Builder clearPid() {
                    copyOnWrite();
                    ((LogLossStats) this.instance).clearPid();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new LogLossStats();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        LogLossStats other = (LogLossStats) arg1;
                        this.detectedTimeSec_ = visitor.visitInt(hasDetectedTimeSec(), this.detectedTimeSec_, other.hasDetectedTimeSec(), other.detectedTimeSec_);
                        this.count_ = visitor.visitInt(hasCount(), this.count_, other.hasCount(), other.count_);
                        this.lastError_ = visitor.visitInt(hasLastError(), this.lastError_, other.hasLastError(), other.lastError_);
                        this.lastTag_ = visitor.visitInt(hasLastTag(), this.lastTag_, other.hasLastTag(), other.lastTag_);
                        this.uid_ = visitor.visitInt(hasUid(), this.uid_, other.hasUid(), other.uid_);
                        this.pid_ = visitor.visitInt(hasPid(), this.pid_, other.hasPid(), other.pid_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.detectedTimeSec_ = input.readInt32();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.count_ = input.readInt32();
                                } else if (tag == 24) {
                                    this.bitField0_ |= 4;
                                    this.lastError_ = input.readInt32();
                                } else if (tag == 32) {
                                    this.bitField0_ = 8 | this.bitField0_;
                                    this.lastTag_ = input.readInt32();
                                } else if (tag == 40) {
                                    this.bitField0_ |= 16;
                                    this.uid_ = input.readInt32();
                                } else if (tag == 48) {
                                    this.bitField0_ |= 32;
                                    this.pid_ = input.readInt32();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (LogLossStats.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static LogLossStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<LogLossStats> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class EventQueueOverflow extends GeneratedMessageLite<EventQueueOverflow, Builder> implements EventQueueOverflowOrBuilder {
            public static final int COUNT_FIELD_NUMBER = 1;
            private static final EventQueueOverflow DEFAULT_INSTANCE = new EventQueueOverflow();
            public static final int MAX_QUEUE_HISTORY_NS_FIELD_NUMBER = 2;
            public static final int MIN_QUEUE_HISTORY_NS_FIELD_NUMBER = 3;
            private static volatile Parser<EventQueueOverflow> PARSER;
            private int bitField0_;
            private int count_ = 0;
            private long maxQueueHistoryNs_ = 0;
            private long minQueueHistoryNs_ = 0;

            private EventQueueOverflow() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
            public boolean hasCount() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
            public int getCount() {
                return this.count_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setCount(int value) {
                this.bitField0_ |= 1;
                this.count_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearCount() {
                this.bitField0_ &= -2;
                this.count_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
            public boolean hasMaxQueueHistoryNs() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
            public long getMaxQueueHistoryNs() {
                return this.maxQueueHistoryNs_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMaxQueueHistoryNs(long value) {
                this.bitField0_ |= 2;
                this.maxQueueHistoryNs_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMaxQueueHistoryNs() {
                this.bitField0_ &= -3;
                this.maxQueueHistoryNs_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
            public boolean hasMinQueueHistoryNs() {
                return (this.bitField0_ & 4) == 4;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
            public long getMinQueueHistoryNs() {
                return this.minQueueHistoryNs_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMinQueueHistoryNs(long value) {
                this.bitField0_ |= 4;
                this.minQueueHistoryNs_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMinQueueHistoryNs() {
                this.bitField0_ &= -5;
                this.minQueueHistoryNs_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.count_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeInt64(2, this.maxQueueHistoryNs_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    output.writeInt64(3, this.minQueueHistoryNs_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.count_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeInt64Size(2, this.maxQueueHistoryNs_);
                }
                if ((this.bitField0_ & 4) == 4) {
                    size2 += CodedOutputStream.computeInt64Size(3, this.minQueueHistoryNs_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static EventQueueOverflow parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (EventQueueOverflow) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static EventQueueOverflow parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (EventQueueOverflow) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static EventQueueOverflow parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (EventQueueOverflow) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static EventQueueOverflow parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (EventQueueOverflow) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static EventQueueOverflow parseFrom(InputStream input) throws IOException {
                return (EventQueueOverflow) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static EventQueueOverflow parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (EventQueueOverflow) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static EventQueueOverflow parseDelimitedFrom(InputStream input) throws IOException {
                return (EventQueueOverflow) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static EventQueueOverflow parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (EventQueueOverflow) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static EventQueueOverflow parseFrom(CodedInputStream input) throws IOException {
                return (EventQueueOverflow) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static EventQueueOverflow parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (EventQueueOverflow) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(EventQueueOverflow prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<EventQueueOverflow, Builder> implements EventQueueOverflowOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(EventQueueOverflow.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
                public boolean hasCount() {
                    return ((EventQueueOverflow) this.instance).hasCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
                public int getCount() {
                    return ((EventQueueOverflow) this.instance).getCount();
                }

                public Builder setCount(int value) {
                    copyOnWrite();
                    ((EventQueueOverflow) this.instance).setCount(value);
                    return this;
                }

                public Builder clearCount() {
                    copyOnWrite();
                    ((EventQueueOverflow) this.instance).clearCount();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
                public boolean hasMaxQueueHistoryNs() {
                    return ((EventQueueOverflow) this.instance).hasMaxQueueHistoryNs();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
                public long getMaxQueueHistoryNs() {
                    return ((EventQueueOverflow) this.instance).getMaxQueueHistoryNs();
                }

                public Builder setMaxQueueHistoryNs(long value) {
                    copyOnWrite();
                    ((EventQueueOverflow) this.instance).setMaxQueueHistoryNs(value);
                    return this;
                }

                public Builder clearMaxQueueHistoryNs() {
                    copyOnWrite();
                    ((EventQueueOverflow) this.instance).clearMaxQueueHistoryNs();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
                public boolean hasMinQueueHistoryNs() {
                    return ((EventQueueOverflow) this.instance).hasMinQueueHistoryNs();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.EventQueueOverflowOrBuilder
                public long getMinQueueHistoryNs() {
                    return ((EventQueueOverflow) this.instance).getMinQueueHistoryNs();
                }

                public Builder setMinQueueHistoryNs(long value) {
                    copyOnWrite();
                    ((EventQueueOverflow) this.instance).setMinQueueHistoryNs(value);
                    return this;
                }

                public Builder clearMinQueueHistoryNs() {
                    copyOnWrite();
                    ((EventQueueOverflow) this.instance).clearMinQueueHistoryNs();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new EventQueueOverflow();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        EventQueueOverflow other = (EventQueueOverflow) arg1;
                        this.count_ = visitor.visitInt(hasCount(), this.count_, other.hasCount(), other.count_);
                        this.maxQueueHistoryNs_ = visitor.visitLong(hasMaxQueueHistoryNs(), this.maxQueueHistoryNs_, other.hasMaxQueueHistoryNs(), other.maxQueueHistoryNs_);
                        this.minQueueHistoryNs_ = visitor.visitLong(hasMinQueueHistoryNs(), this.minQueueHistoryNs_, other.hasMinQueueHistoryNs(), other.minQueueHistoryNs_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.count_ = input.readInt32();
                                } else if (tag == 16) {
                                    this.bitField0_ |= 2;
                                    this.maxQueueHistoryNs_ = input.readInt64();
                                } else if (tag == 24) {
                                    this.bitField0_ |= 4;
                                    this.minQueueHistoryNs_ = input.readInt64();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (EventQueueOverflow.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static EventQueueOverflow getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<EventQueueOverflow> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public static final class ActivationBroadcastGuardrail extends GeneratedMessageLite<ActivationBroadcastGuardrail, Builder> implements ActivationBroadcastGuardrailOrBuilder {
            private static final ActivationBroadcastGuardrail DEFAULT_INSTANCE = new ActivationBroadcastGuardrail();
            public static final int GUARDRAIL_MET_SEC_FIELD_NUMBER = 2;
            private static volatile Parser<ActivationBroadcastGuardrail> PARSER = null;
            public static final int UID_FIELD_NUMBER = 1;
            private int bitField0_;
            private Internal.IntList guardrailMetSec_ = emptyIntList();
            private int uid_ = 0;

            private ActivationBroadcastGuardrail() {
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
            public boolean hasUid() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
            public int getUid() {
                return this.uid_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setUid(int value) {
                this.bitField0_ |= 1;
                this.uid_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearUid() {
                this.bitField0_ &= -2;
                this.uid_ = 0;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
            public List<Integer> getGuardrailMetSecList() {
                return this.guardrailMetSec_;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
            public int getGuardrailMetSecCount() {
                return this.guardrailMetSec_.size();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
            public int getGuardrailMetSec(int index) {
                return this.guardrailMetSec_.getInt(index);
            }

            private void ensureGuardrailMetSecIsMutable() {
                if (!this.guardrailMetSec_.isModifiable()) {
                    this.guardrailMetSec_ = GeneratedMessageLite.mutableCopy(this.guardrailMetSec_);
                }
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setGuardrailMetSec(int index, int value) {
                ensureGuardrailMetSecIsMutable();
                this.guardrailMetSec_.setInt(index, value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addGuardrailMetSec(int value) {
                ensureGuardrailMetSecIsMutable();
                this.guardrailMetSec_.addInt(value);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void addAllGuardrailMetSec(Iterable<? extends Integer> values) {
                ensureGuardrailMetSecIsMutable();
                AbstractMessageLite.addAll(values, this.guardrailMetSec_);
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearGuardrailMetSec() {
                this.guardrailMetSec_ = emptyIntList();
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt32(1, this.uid_);
                }
                for (int i = 0; i < this.guardrailMetSec_.size(); i++) {
                    output.writeInt32(2, this.guardrailMetSec_.getInt(i));
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt32Size(1, this.uid_);
                }
                int dataSize = 0;
                for (int i = 0; i < this.guardrailMetSec_.size(); i++) {
                    dataSize += CodedOutputStream.computeInt32SizeNoTag(this.guardrailMetSec_.getInt(i));
                }
                int size3 = size2 + dataSize + (getGuardrailMetSecList().size() * 1) + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static ActivationBroadcastGuardrail parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (ActivationBroadcastGuardrail) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ActivationBroadcastGuardrail parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ActivationBroadcastGuardrail) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ActivationBroadcastGuardrail parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (ActivationBroadcastGuardrail) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static ActivationBroadcastGuardrail parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ActivationBroadcastGuardrail) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static ActivationBroadcastGuardrail parseFrom(InputStream input) throws IOException {
                return (ActivationBroadcastGuardrail) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ActivationBroadcastGuardrail parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ActivationBroadcastGuardrail) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ActivationBroadcastGuardrail parseDelimitedFrom(InputStream input) throws IOException {
                return (ActivationBroadcastGuardrail) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static ActivationBroadcastGuardrail parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ActivationBroadcastGuardrail) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static ActivationBroadcastGuardrail parseFrom(CodedInputStream input) throws IOException {
                return (ActivationBroadcastGuardrail) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static ActivationBroadcastGuardrail parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ActivationBroadcastGuardrail) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(ActivationBroadcastGuardrail prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<ActivationBroadcastGuardrail, Builder> implements ActivationBroadcastGuardrailOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(ActivationBroadcastGuardrail.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
                public boolean hasUid() {
                    return ((ActivationBroadcastGuardrail) this.instance).hasUid();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
                public int getUid() {
                    return ((ActivationBroadcastGuardrail) this.instance).getUid();
                }

                public Builder setUid(int value) {
                    copyOnWrite();
                    ((ActivationBroadcastGuardrail) this.instance).setUid(value);
                    return this;
                }

                public Builder clearUid() {
                    copyOnWrite();
                    ((ActivationBroadcastGuardrail) this.instance).clearUid();
                    return this;
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
                public List<Integer> getGuardrailMetSecList() {
                    return Collections.unmodifiableList(((ActivationBroadcastGuardrail) this.instance).getGuardrailMetSecList());
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
                public int getGuardrailMetSecCount() {
                    return ((ActivationBroadcastGuardrail) this.instance).getGuardrailMetSecCount();
                }

                @Override // com.android.os.StatsLog.StatsdStatsReport.ActivationBroadcastGuardrailOrBuilder
                public int getGuardrailMetSec(int index) {
                    return ((ActivationBroadcastGuardrail) this.instance).getGuardrailMetSec(index);
                }

                public Builder setGuardrailMetSec(int index, int value) {
                    copyOnWrite();
                    ((ActivationBroadcastGuardrail) this.instance).setGuardrailMetSec(index, value);
                    return this;
                }

                public Builder addGuardrailMetSec(int value) {
                    copyOnWrite();
                    ((ActivationBroadcastGuardrail) this.instance).addGuardrailMetSec(value);
                    return this;
                }

                public Builder addAllGuardrailMetSec(Iterable<? extends Integer> values) {
                    copyOnWrite();
                    ((ActivationBroadcastGuardrail) this.instance).addAllGuardrailMetSec(values);
                    return this;
                }

                public Builder clearGuardrailMetSec() {
                    copyOnWrite();
                    ((ActivationBroadcastGuardrail) this.instance).clearGuardrailMetSec();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new ActivationBroadcastGuardrail();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        this.guardrailMetSec_.makeImmutable();
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        ActivationBroadcastGuardrail other = (ActivationBroadcastGuardrail) arg1;
                        this.uid_ = visitor.visitInt(hasUid(), this.uid_, other.hasUid(), other.uid_);
                        this.guardrailMetSec_ = visitor.visitIntList(this.guardrailMetSec_, other.guardrailMetSec_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistryLite = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.uid_ = input.readInt32();
                                } else if (tag == 16) {
                                    if (!this.guardrailMetSec_.isModifiable()) {
                                        this.guardrailMetSec_ = GeneratedMessageLite.mutableCopy(this.guardrailMetSec_);
                                    }
                                    this.guardrailMetSec_.addInt(input.readInt32());
                                } else if (tag == 18) {
                                    int limit = input.pushLimit(input.readRawVarint32());
                                    if (!this.guardrailMetSec_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        this.guardrailMetSec_ = GeneratedMessageLite.mutableCopy(this.guardrailMetSec_);
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        this.guardrailMetSec_.addInt(input.readInt32());
                                    }
                                    input.popLimit(limit);
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (ActivationBroadcastGuardrail.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static ActivationBroadcastGuardrail getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<ActivationBroadcastGuardrail> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public boolean hasStatsBeginTimeSec() {
            return (this.bitField0_ & 1) == 1;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getStatsBeginTimeSec() {
            return this.statsBeginTimeSec_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStatsBeginTimeSec(int value) {
            this.bitField0_ |= 1;
            this.statsBeginTimeSec_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStatsBeginTimeSec() {
            this.bitField0_ &= -2;
            this.statsBeginTimeSec_ = 0;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public boolean hasStatsEndTimeSec() {
            return (this.bitField0_ & 2) == 2;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getStatsEndTimeSec() {
            return this.statsEndTimeSec_;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setStatsEndTimeSec(int value) {
            this.bitField0_ |= 2;
            this.statsEndTimeSec_ = value;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearStatsEndTimeSec() {
            this.bitField0_ &= -3;
            this.statsEndTimeSec_ = 0;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<ConfigStats> getConfigStatsList() {
            return this.configStats_;
        }

        public List<? extends ConfigStatsOrBuilder> getConfigStatsOrBuilderList() {
            return this.configStats_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getConfigStatsCount() {
            return this.configStats_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public ConfigStats getConfigStats(int index) {
            return this.configStats_.get(index);
        }

        public ConfigStatsOrBuilder getConfigStatsOrBuilder(int index) {
            return this.configStats_.get(index);
        }

        private void ensureConfigStatsIsMutable() {
            if (!this.configStats_.isModifiable()) {
                this.configStats_ = GeneratedMessageLite.mutableCopy(this.configStats_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setConfigStats(int index, ConfigStats value) {
            if (value != null) {
                ensureConfigStatsIsMutable();
                this.configStats_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setConfigStats(int index, ConfigStats.Builder builderForValue) {
            ensureConfigStatsIsMutable();
            this.configStats_.set(index, (ConfigStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addConfigStats(ConfigStats value) {
            if (value != null) {
                ensureConfigStatsIsMutable();
                this.configStats_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addConfigStats(int index, ConfigStats value) {
            if (value != null) {
                ensureConfigStatsIsMutable();
                this.configStats_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addConfigStats(ConfigStats.Builder builderForValue) {
            ensureConfigStatsIsMutable();
            this.configStats_.add((ConfigStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addConfigStats(int index, ConfigStats.Builder builderForValue) {
            ensureConfigStatsIsMutable();
            this.configStats_.add(index, (ConfigStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllConfigStats(Iterable<? extends ConfigStats> values) {
            ensureConfigStatsIsMutable();
            AbstractMessageLite.addAll(values, this.configStats_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearConfigStats() {
            this.configStats_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeConfigStats(int index) {
            ensureConfigStatsIsMutable();
            this.configStats_.remove(index);
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<AtomStats> getAtomStatsList() {
            return this.atomStats_;
        }

        public List<? extends AtomStatsOrBuilder> getAtomStatsOrBuilderList() {
            return this.atomStats_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getAtomStatsCount() {
            return this.atomStats_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public AtomStats getAtomStats(int index) {
            return this.atomStats_.get(index);
        }

        public AtomStatsOrBuilder getAtomStatsOrBuilder(int index) {
            return this.atomStats_.get(index);
        }

        private void ensureAtomStatsIsMutable() {
            if (!this.atomStats_.isModifiable()) {
                this.atomStats_ = GeneratedMessageLite.mutableCopy(this.atomStats_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAtomStats(int index, AtomStats value) {
            if (value != null) {
                ensureAtomStatsIsMutable();
                this.atomStats_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAtomStats(int index, AtomStats.Builder builderForValue) {
            ensureAtomStatsIsMutable();
            this.atomStats_.set(index, (AtomStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtomStats(AtomStats value) {
            if (value != null) {
                ensureAtomStatsIsMutable();
                this.atomStats_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtomStats(int index, AtomStats value) {
            if (value != null) {
                ensureAtomStatsIsMutable();
                this.atomStats_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtomStats(AtomStats.Builder builderForValue) {
            ensureAtomStatsIsMutable();
            this.atomStats_.add((AtomStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtomStats(int index, AtomStats.Builder builderForValue) {
            ensureAtomStatsIsMutable();
            this.atomStats_.add(index, (AtomStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllAtomStats(Iterable<? extends AtomStats> values) {
            ensureAtomStatsIsMutable();
            AbstractMessageLite.addAll(values, this.atomStats_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearAtomStats() {
            this.atomStats_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeAtomStats(int index) {
            ensureAtomStatsIsMutable();
            this.atomStats_.remove(index);
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public boolean hasUidmapStats() {
            return (this.bitField0_ & 4) == 4;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public UidMapStats getUidmapStats() {
            UidMapStats uidMapStats = this.uidmapStats_;
            return uidMapStats == null ? UidMapStats.getDefaultInstance() : uidMapStats;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setUidmapStats(UidMapStats value) {
            if (value != null) {
                this.uidmapStats_ = value;
                this.bitField0_ |= 4;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setUidmapStats(UidMapStats.Builder builderForValue) {
            this.uidmapStats_ = (UidMapStats) builderForValue.build();
            this.bitField0_ |= 4;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeUidmapStats(UidMapStats value) {
            UidMapStats uidMapStats = this.uidmapStats_;
            if (uidMapStats == null || uidMapStats == UidMapStats.getDefaultInstance()) {
                this.uidmapStats_ = value;
            } else {
                this.uidmapStats_ = (UidMapStats) ((UidMapStats.Builder) UidMapStats.newBuilder(this.uidmapStats_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 4;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearUidmapStats() {
            this.uidmapStats_ = null;
            this.bitField0_ &= -5;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public boolean hasAnomalyAlarmStats() {
            return (this.bitField0_ & 8) == 8;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public AnomalyAlarmStats getAnomalyAlarmStats() {
            AnomalyAlarmStats anomalyAlarmStats = this.anomalyAlarmStats_;
            return anomalyAlarmStats == null ? AnomalyAlarmStats.getDefaultInstance() : anomalyAlarmStats;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAnomalyAlarmStats(AnomalyAlarmStats value) {
            if (value != null) {
                this.anomalyAlarmStats_ = value;
                this.bitField0_ |= 8;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAnomalyAlarmStats(AnomalyAlarmStats.Builder builderForValue) {
            this.anomalyAlarmStats_ = (AnomalyAlarmStats) builderForValue.build();
            this.bitField0_ |= 8;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeAnomalyAlarmStats(AnomalyAlarmStats value) {
            AnomalyAlarmStats anomalyAlarmStats = this.anomalyAlarmStats_;
            if (anomalyAlarmStats == null || anomalyAlarmStats == AnomalyAlarmStats.getDefaultInstance()) {
                this.anomalyAlarmStats_ = value;
            } else {
                this.anomalyAlarmStats_ = (AnomalyAlarmStats) ((AnomalyAlarmStats.Builder) AnomalyAlarmStats.newBuilder(this.anomalyAlarmStats_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 8;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearAnomalyAlarmStats() {
            this.anomalyAlarmStats_ = null;
            this.bitField0_ &= -9;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<PulledAtomStats> getPulledAtomStatsList() {
            return this.pulledAtomStats_;
        }

        public List<? extends PulledAtomStatsOrBuilder> getPulledAtomStatsOrBuilderList() {
            return this.pulledAtomStats_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getPulledAtomStatsCount() {
            return this.pulledAtomStats_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public PulledAtomStats getPulledAtomStats(int index) {
            return this.pulledAtomStats_.get(index);
        }

        public PulledAtomStatsOrBuilder getPulledAtomStatsOrBuilder(int index) {
            return this.pulledAtomStats_.get(index);
        }

        private void ensurePulledAtomStatsIsMutable() {
            if (!this.pulledAtomStats_.isModifiable()) {
                this.pulledAtomStats_ = GeneratedMessageLite.mutableCopy(this.pulledAtomStats_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setPulledAtomStats(int index, PulledAtomStats value) {
            if (value != null) {
                ensurePulledAtomStatsIsMutable();
                this.pulledAtomStats_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setPulledAtomStats(int index, PulledAtomStats.Builder builderForValue) {
            ensurePulledAtomStatsIsMutable();
            this.pulledAtomStats_.set(index, (PulledAtomStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addPulledAtomStats(PulledAtomStats value) {
            if (value != null) {
                ensurePulledAtomStatsIsMutable();
                this.pulledAtomStats_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addPulledAtomStats(int index, PulledAtomStats value) {
            if (value != null) {
                ensurePulledAtomStatsIsMutable();
                this.pulledAtomStats_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addPulledAtomStats(PulledAtomStats.Builder builderForValue) {
            ensurePulledAtomStatsIsMutable();
            this.pulledAtomStats_.add((PulledAtomStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addPulledAtomStats(int index, PulledAtomStats.Builder builderForValue) {
            ensurePulledAtomStatsIsMutable();
            this.pulledAtomStats_.add(index, (PulledAtomStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllPulledAtomStats(Iterable<? extends PulledAtomStats> values) {
            ensurePulledAtomStatsIsMutable();
            AbstractMessageLite.addAll(values, this.pulledAtomStats_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearPulledAtomStats() {
            this.pulledAtomStats_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removePulledAtomStats(int index) {
            ensurePulledAtomStatsIsMutable();
            this.pulledAtomStats_.remove(index);
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<AtomMetricStats> getAtomMetricStatsList() {
            return this.atomMetricStats_;
        }

        public List<? extends AtomMetricStatsOrBuilder> getAtomMetricStatsOrBuilderList() {
            return this.atomMetricStats_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getAtomMetricStatsCount() {
            return this.atomMetricStats_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public AtomMetricStats getAtomMetricStats(int index) {
            return this.atomMetricStats_.get(index);
        }

        public AtomMetricStatsOrBuilder getAtomMetricStatsOrBuilder(int index) {
            return this.atomMetricStats_.get(index);
        }

        private void ensureAtomMetricStatsIsMutable() {
            if (!this.atomMetricStats_.isModifiable()) {
                this.atomMetricStats_ = GeneratedMessageLite.mutableCopy(this.atomMetricStats_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAtomMetricStats(int index, AtomMetricStats value) {
            if (value != null) {
                ensureAtomMetricStatsIsMutable();
                this.atomMetricStats_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setAtomMetricStats(int index, AtomMetricStats.Builder builderForValue) {
            ensureAtomMetricStatsIsMutable();
            this.atomMetricStats_.set(index, (AtomMetricStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtomMetricStats(AtomMetricStats value) {
            if (value != null) {
                ensureAtomMetricStatsIsMutable();
                this.atomMetricStats_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtomMetricStats(int index, AtomMetricStats value) {
            if (value != null) {
                ensureAtomMetricStatsIsMutable();
                this.atomMetricStats_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtomMetricStats(AtomMetricStats.Builder builderForValue) {
            ensureAtomMetricStatsIsMutable();
            this.atomMetricStats_.add((AtomMetricStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAtomMetricStats(int index, AtomMetricStats.Builder builderForValue) {
            ensureAtomMetricStatsIsMutable();
            this.atomMetricStats_.add(index, (AtomMetricStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllAtomMetricStats(Iterable<? extends AtomMetricStats> values) {
            ensureAtomMetricStatsIsMutable();
            AbstractMessageLite.addAll(values, this.atomMetricStats_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearAtomMetricStats() {
            this.atomMetricStats_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeAtomMetricStats(int index) {
            ensureAtomMetricStatsIsMutable();
            this.atomMetricStats_.remove(index);
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<LoggerErrorStats> getLoggerErrorStatsList() {
            return this.loggerErrorStats_;
        }

        public List<? extends LoggerErrorStatsOrBuilder> getLoggerErrorStatsOrBuilderList() {
            return this.loggerErrorStats_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getLoggerErrorStatsCount() {
            return this.loggerErrorStats_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public LoggerErrorStats getLoggerErrorStats(int index) {
            return this.loggerErrorStats_.get(index);
        }

        public LoggerErrorStatsOrBuilder getLoggerErrorStatsOrBuilder(int index) {
            return this.loggerErrorStats_.get(index);
        }

        private void ensureLoggerErrorStatsIsMutable() {
            if (!this.loggerErrorStats_.isModifiable()) {
                this.loggerErrorStats_ = GeneratedMessageLite.mutableCopy(this.loggerErrorStats_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setLoggerErrorStats(int index, LoggerErrorStats value) {
            if (value != null) {
                ensureLoggerErrorStatsIsMutable();
                this.loggerErrorStats_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setLoggerErrorStats(int index, LoggerErrorStats.Builder builderForValue) {
            ensureLoggerErrorStatsIsMutable();
            this.loggerErrorStats_.set(index, (LoggerErrorStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addLoggerErrorStats(LoggerErrorStats value) {
            if (value != null) {
                ensureLoggerErrorStatsIsMutable();
                this.loggerErrorStats_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addLoggerErrorStats(int index, LoggerErrorStats value) {
            if (value != null) {
                ensureLoggerErrorStatsIsMutable();
                this.loggerErrorStats_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addLoggerErrorStats(LoggerErrorStats.Builder builderForValue) {
            ensureLoggerErrorStatsIsMutable();
            this.loggerErrorStats_.add((LoggerErrorStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addLoggerErrorStats(int index, LoggerErrorStats.Builder builderForValue) {
            ensureLoggerErrorStatsIsMutable();
            this.loggerErrorStats_.add(index, (LoggerErrorStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllLoggerErrorStats(Iterable<? extends LoggerErrorStats> values) {
            ensureLoggerErrorStatsIsMutable();
            AbstractMessageLite.addAll(values, this.loggerErrorStats_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearLoggerErrorStats() {
            this.loggerErrorStats_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeLoggerErrorStats(int index) {
            ensureLoggerErrorStatsIsMutable();
            this.loggerErrorStats_.remove(index);
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public boolean hasPeriodicAlarmStats() {
            return (this.bitField0_ & 16) == 16;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public PeriodicAlarmStats getPeriodicAlarmStats() {
            PeriodicAlarmStats periodicAlarmStats = this.periodicAlarmStats_;
            return periodicAlarmStats == null ? PeriodicAlarmStats.getDefaultInstance() : periodicAlarmStats;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setPeriodicAlarmStats(PeriodicAlarmStats value) {
            if (value != null) {
                this.periodicAlarmStats_ = value;
                this.bitField0_ |= 16;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setPeriodicAlarmStats(PeriodicAlarmStats.Builder builderForValue) {
            this.periodicAlarmStats_ = (PeriodicAlarmStats) builderForValue.build();
            this.bitField0_ |= 16;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergePeriodicAlarmStats(PeriodicAlarmStats value) {
            PeriodicAlarmStats periodicAlarmStats = this.periodicAlarmStats_;
            if (periodicAlarmStats == null || periodicAlarmStats == PeriodicAlarmStats.getDefaultInstance()) {
                this.periodicAlarmStats_ = value;
            } else {
                this.periodicAlarmStats_ = (PeriodicAlarmStats) ((PeriodicAlarmStats.Builder) PeriodicAlarmStats.newBuilder(this.periodicAlarmStats_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 16;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearPeriodicAlarmStats() {
            this.periodicAlarmStats_ = null;
            this.bitField0_ &= -17;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<SkippedLogEventStats> getSkippedLogEventStatsList() {
            return this.skippedLogEventStats_;
        }

        public List<? extends SkippedLogEventStatsOrBuilder> getSkippedLogEventStatsOrBuilderList() {
            return this.skippedLogEventStats_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getSkippedLogEventStatsCount() {
            return this.skippedLogEventStats_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public SkippedLogEventStats getSkippedLogEventStats(int index) {
            return this.skippedLogEventStats_.get(index);
        }

        public SkippedLogEventStatsOrBuilder getSkippedLogEventStatsOrBuilder(int index) {
            return this.skippedLogEventStats_.get(index);
        }

        private void ensureSkippedLogEventStatsIsMutable() {
            if (!this.skippedLogEventStats_.isModifiable()) {
                this.skippedLogEventStats_ = GeneratedMessageLite.mutableCopy(this.skippedLogEventStats_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setSkippedLogEventStats(int index, SkippedLogEventStats value) {
            if (value != null) {
                ensureSkippedLogEventStatsIsMutable();
                this.skippedLogEventStats_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setSkippedLogEventStats(int index, SkippedLogEventStats.Builder builderForValue) {
            ensureSkippedLogEventStatsIsMutable();
            this.skippedLogEventStats_.set(index, (SkippedLogEventStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addSkippedLogEventStats(SkippedLogEventStats value) {
            if (value != null) {
                ensureSkippedLogEventStatsIsMutable();
                this.skippedLogEventStats_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addSkippedLogEventStats(int index, SkippedLogEventStats value) {
            if (value != null) {
                ensureSkippedLogEventStatsIsMutable();
                this.skippedLogEventStats_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addSkippedLogEventStats(SkippedLogEventStats.Builder builderForValue) {
            ensureSkippedLogEventStatsIsMutable();
            this.skippedLogEventStats_.add((SkippedLogEventStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addSkippedLogEventStats(int index, SkippedLogEventStats.Builder builderForValue) {
            ensureSkippedLogEventStatsIsMutable();
            this.skippedLogEventStats_.add(index, (SkippedLogEventStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllSkippedLogEventStats(Iterable<? extends SkippedLogEventStats> values) {
            ensureSkippedLogEventStatsIsMutable();
            AbstractMessageLite.addAll(values, this.skippedLogEventStats_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearSkippedLogEventStats() {
            this.skippedLogEventStats_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeSkippedLogEventStats(int index) {
            ensureSkippedLogEventStatsIsMutable();
            this.skippedLogEventStats_.remove(index);
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<Long> getLogLossStatsList() {
            return this.logLossStats_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getLogLossStatsCount() {
            return this.logLossStats_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public long getLogLossStats(int index) {
            return this.logLossStats_.getLong(index);
        }

        private void ensureLogLossStatsIsMutable() {
            if (!this.logLossStats_.isModifiable()) {
                this.logLossStats_ = GeneratedMessageLite.mutableCopy(this.logLossStats_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setLogLossStats(int index, long value) {
            ensureLogLossStatsIsMutable();
            this.logLossStats_.setLong(index, value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addLogLossStats(long value) {
            ensureLogLossStatsIsMutable();
            this.logLossStats_.addLong(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllLogLossStats(Iterable<? extends Long> values) {
            ensureLogLossStatsIsMutable();
            AbstractMessageLite.addAll(values, this.logLossStats_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearLogLossStats() {
            this.logLossStats_ = emptyLongList();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<Integer> getSystemRestartSecList() {
            return this.systemRestartSec_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getSystemRestartSecCount() {
            return this.systemRestartSec_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getSystemRestartSec(int index) {
            return this.systemRestartSec_.getInt(index);
        }

        private void ensureSystemRestartSecIsMutable() {
            if (!this.systemRestartSec_.isModifiable()) {
                this.systemRestartSec_ = GeneratedMessageLite.mutableCopy(this.systemRestartSec_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setSystemRestartSec(int index, int value) {
            ensureSystemRestartSecIsMutable();
            this.systemRestartSec_.setInt(index, value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addSystemRestartSec(int value) {
            ensureSystemRestartSecIsMutable();
            this.systemRestartSec_.addInt(value);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllSystemRestartSec(Iterable<? extends Integer> values) {
            ensureSystemRestartSecIsMutable();
            AbstractMessageLite.addAll(values, this.systemRestartSec_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearSystemRestartSec() {
            this.systemRestartSec_ = emptyIntList();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<LogLossStats> getDetectedLogLossList() {
            return this.detectedLogLoss_;
        }

        public List<? extends LogLossStatsOrBuilder> getDetectedLogLossOrBuilderList() {
            return this.detectedLogLoss_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getDetectedLogLossCount() {
            return this.detectedLogLoss_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public LogLossStats getDetectedLogLoss(int index) {
            return this.detectedLogLoss_.get(index);
        }

        public LogLossStatsOrBuilder getDetectedLogLossOrBuilder(int index) {
            return this.detectedLogLoss_.get(index);
        }

        private void ensureDetectedLogLossIsMutable() {
            if (!this.detectedLogLoss_.isModifiable()) {
                this.detectedLogLoss_ = GeneratedMessageLite.mutableCopy(this.detectedLogLoss_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDetectedLogLoss(int index, LogLossStats value) {
            if (value != null) {
                ensureDetectedLogLossIsMutable();
                this.detectedLogLoss_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setDetectedLogLoss(int index, LogLossStats.Builder builderForValue) {
            ensureDetectedLogLossIsMutable();
            this.detectedLogLoss_.set(index, (LogLossStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDetectedLogLoss(LogLossStats value) {
            if (value != null) {
                ensureDetectedLogLossIsMutable();
                this.detectedLogLoss_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDetectedLogLoss(int index, LogLossStats value) {
            if (value != null) {
                ensureDetectedLogLossIsMutable();
                this.detectedLogLoss_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDetectedLogLoss(LogLossStats.Builder builderForValue) {
            ensureDetectedLogLossIsMutable();
            this.detectedLogLoss_.add((LogLossStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addDetectedLogLoss(int index, LogLossStats.Builder builderForValue) {
            ensureDetectedLogLossIsMutable();
            this.detectedLogLoss_.add(index, (LogLossStats) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllDetectedLogLoss(Iterable<? extends LogLossStats> values) {
            ensureDetectedLogLossIsMutable();
            AbstractMessageLite.addAll(values, this.detectedLogLoss_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearDetectedLogLoss() {
            this.detectedLogLoss_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeDetectedLogLoss(int index) {
            ensureDetectedLogLossIsMutable();
            this.detectedLogLoss_.remove(index);
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public boolean hasQueueOverflow() {
            return (this.bitField0_ & 32) == 32;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public EventQueueOverflow getQueueOverflow() {
            EventQueueOverflow eventQueueOverflow = this.queueOverflow_;
            return eventQueueOverflow == null ? EventQueueOverflow.getDefaultInstance() : eventQueueOverflow;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setQueueOverflow(EventQueueOverflow value) {
            if (value != null) {
                this.queueOverflow_ = value;
                this.bitField0_ |= 32;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setQueueOverflow(EventQueueOverflow.Builder builderForValue) {
            this.queueOverflow_ = (EventQueueOverflow) builderForValue.build();
            this.bitField0_ |= 32;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeQueueOverflow(EventQueueOverflow value) {
            EventQueueOverflow eventQueueOverflow = this.queueOverflow_;
            if (eventQueueOverflow == null || eventQueueOverflow == EventQueueOverflow.getDefaultInstance()) {
                this.queueOverflow_ = value;
            } else {
                this.queueOverflow_ = (EventQueueOverflow) ((EventQueueOverflow.Builder) EventQueueOverflow.newBuilder(this.queueOverflow_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 32;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearQueueOverflow() {
            this.queueOverflow_ = null;
            this.bitField0_ &= -33;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public List<ActivationBroadcastGuardrail> getActivationGuardrailStatsList() {
            return this.activationGuardrailStats_;
        }

        public List<? extends ActivationBroadcastGuardrailOrBuilder> getActivationGuardrailStatsOrBuilderList() {
            return this.activationGuardrailStats_;
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public int getActivationGuardrailStatsCount() {
            return this.activationGuardrailStats_.size();
        }

        @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
        public ActivationBroadcastGuardrail getActivationGuardrailStats(int index) {
            return this.activationGuardrailStats_.get(index);
        }

        public ActivationBroadcastGuardrailOrBuilder getActivationGuardrailStatsOrBuilder(int index) {
            return this.activationGuardrailStats_.get(index);
        }

        private void ensureActivationGuardrailStatsIsMutable() {
            if (!this.activationGuardrailStats_.isModifiable()) {
                this.activationGuardrailStats_ = GeneratedMessageLite.mutableCopy(this.activationGuardrailStats_);
            }
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setActivationGuardrailStats(int index, ActivationBroadcastGuardrail value) {
            if (value != null) {
                ensureActivationGuardrailStatsIsMutable();
                this.activationGuardrailStats_.set(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setActivationGuardrailStats(int index, ActivationBroadcastGuardrail.Builder builderForValue) {
            ensureActivationGuardrailStatsIsMutable();
            this.activationGuardrailStats_.set(index, (ActivationBroadcastGuardrail) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addActivationGuardrailStats(ActivationBroadcastGuardrail value) {
            if (value != null) {
                ensureActivationGuardrailStatsIsMutable();
                this.activationGuardrailStats_.add(value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addActivationGuardrailStats(int index, ActivationBroadcastGuardrail value) {
            if (value != null) {
                ensureActivationGuardrailStatsIsMutable();
                this.activationGuardrailStats_.add(index, value);
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addActivationGuardrailStats(ActivationBroadcastGuardrail.Builder builderForValue) {
            ensureActivationGuardrailStatsIsMutable();
            this.activationGuardrailStats_.add((ActivationBroadcastGuardrail) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addActivationGuardrailStats(int index, ActivationBroadcastGuardrail.Builder builderForValue) {
            ensureActivationGuardrailStatsIsMutable();
            this.activationGuardrailStats_.add(index, (ActivationBroadcastGuardrail) builderForValue.build());
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void addAllActivationGuardrailStats(Iterable<? extends ActivationBroadcastGuardrail> values) {
            ensureActivationGuardrailStatsIsMutable();
            AbstractMessageLite.addAll(values, this.activationGuardrailStats_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearActivationGuardrailStats() {
            this.activationGuardrailStats_ = emptyProtobufList();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void removeActivationGuardrailStats(int index) {
            ensureActivationGuardrailStatsIsMutable();
            this.activationGuardrailStats_.remove(index);
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                output.writeInt32(1, this.statsBeginTimeSec_);
            }
            if ((this.bitField0_ & 2) == 2) {
                output.writeInt32(2, this.statsEndTimeSec_);
            }
            for (int i = 0; i < this.configStats_.size(); i++) {
                output.writeMessage(3, this.configStats_.get(i));
            }
            for (int i2 = 0; i2 < this.atomStats_.size(); i2++) {
                output.writeMessage(7, this.atomStats_.get(i2));
            }
            if ((this.bitField0_ & 4) == 4) {
                output.writeMessage(8, getUidmapStats());
            }
            if ((this.bitField0_ & 8) == 8) {
                output.writeMessage(9, getAnomalyAlarmStats());
            }
            for (int i3 = 0; i3 < this.pulledAtomStats_.size(); i3++) {
                output.writeMessage(10, this.pulledAtomStats_.get(i3));
            }
            for (int i4 = 0; i4 < this.loggerErrorStats_.size(); i4++) {
                output.writeMessage(11, this.loggerErrorStats_.get(i4));
            }
            if ((this.bitField0_ & 16) == 16) {
                output.writeMessage(12, getPeriodicAlarmStats());
            }
            for (int i5 = 0; i5 < this.skippedLogEventStats_.size(); i5++) {
                output.writeMessage(13, this.skippedLogEventStats_.get(i5));
            }
            for (int i6 = 0; i6 < this.logLossStats_.size(); i6++) {
                output.writeInt64(14, this.logLossStats_.getLong(i6));
            }
            for (int i7 = 0; i7 < this.systemRestartSec_.size(); i7++) {
                output.writeInt32(15, this.systemRestartSec_.getInt(i7));
            }
            for (int i8 = 0; i8 < this.detectedLogLoss_.size(); i8++) {
                output.writeMessage(16, this.detectedLogLoss_.get(i8));
            }
            for (int i9 = 0; i9 < this.atomMetricStats_.size(); i9++) {
                output.writeMessage(17, this.atomMetricStats_.get(i9));
            }
            if ((this.bitField0_ & 32) == 32) {
                output.writeMessage(18, getQueueOverflow());
            }
            for (int i10 = 0; i10 < this.activationGuardrailStats_.size(); i10++) {
                output.writeMessage(19, this.activationGuardrailStats_.get(i10));
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                size2 = 0 + CodedOutputStream.computeInt32Size(1, this.statsBeginTimeSec_);
            }
            if ((this.bitField0_ & 2) == 2) {
                size2 += CodedOutputStream.computeInt32Size(2, this.statsEndTimeSec_);
            }
            for (int i = 0; i < this.configStats_.size(); i++) {
                size2 += CodedOutputStream.computeMessageSize(3, this.configStats_.get(i));
            }
            for (int i2 = 0; i2 < this.atomStats_.size(); i2++) {
                size2 += CodedOutputStream.computeMessageSize(7, this.atomStats_.get(i2));
            }
            if ((this.bitField0_ & 4) == 4) {
                size2 += CodedOutputStream.computeMessageSize(8, getUidmapStats());
            }
            if ((this.bitField0_ & 8) == 8) {
                size2 += CodedOutputStream.computeMessageSize(9, getAnomalyAlarmStats());
            }
            for (int i3 = 0; i3 < this.pulledAtomStats_.size(); i3++) {
                size2 += CodedOutputStream.computeMessageSize(10, this.pulledAtomStats_.get(i3));
            }
            for (int i4 = 0; i4 < this.loggerErrorStats_.size(); i4++) {
                size2 += CodedOutputStream.computeMessageSize(11, this.loggerErrorStats_.get(i4));
            }
            if ((this.bitField0_ & 16) == 16) {
                size2 += CodedOutputStream.computeMessageSize(12, getPeriodicAlarmStats());
            }
            for (int i5 = 0; i5 < this.skippedLogEventStats_.size(); i5++) {
                size2 += CodedOutputStream.computeMessageSize(13, this.skippedLogEventStats_.get(i5));
            }
            int dataSize = 0;
            for (int i6 = 0; i6 < this.logLossStats_.size(); i6++) {
                dataSize += CodedOutputStream.computeInt64SizeNoTag(this.logLossStats_.getLong(i6));
            }
            int size3 = size2 + dataSize + (getLogLossStatsList().size() * 1);
            int dataSize2 = 0;
            for (int i7 = 0; i7 < this.systemRestartSec_.size(); i7++) {
                dataSize2 += CodedOutputStream.computeInt32SizeNoTag(this.systemRestartSec_.getInt(i7));
            }
            int size4 = size3 + dataSize2 + (getSystemRestartSecList().size() * 1);
            for (int i8 = 0; i8 < this.detectedLogLoss_.size(); i8++) {
                size4 += CodedOutputStream.computeMessageSize(16, this.detectedLogLoss_.get(i8));
            }
            for (int i9 = 0; i9 < this.atomMetricStats_.size(); i9++) {
                size4 += CodedOutputStream.computeMessageSize(17, this.atomMetricStats_.get(i9));
            }
            if ((this.bitField0_ & 32) == 32) {
                size4 += CodedOutputStream.computeMessageSize(18, getQueueOverflow());
            }
            for (int i10 = 0; i10 < this.activationGuardrailStats_.size(); i10++) {
                size4 += CodedOutputStream.computeMessageSize(19, this.activationGuardrailStats_.get(i10));
            }
            int size5 = size4 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size5;
            return size5;
        }

        public static StatsdStatsReport parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (StatsdStatsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static StatsdStatsReport parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (StatsdStatsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static StatsdStatsReport parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (StatsdStatsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static StatsdStatsReport parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (StatsdStatsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static StatsdStatsReport parseFrom(InputStream input) throws IOException {
            return (StatsdStatsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static StatsdStatsReport parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (StatsdStatsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static StatsdStatsReport parseDelimitedFrom(InputStream input) throws IOException {
            return (StatsdStatsReport) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static StatsdStatsReport parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (StatsdStatsReport) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static StatsdStatsReport parseFrom(CodedInputStream input) throws IOException {
            return (StatsdStatsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static StatsdStatsReport parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (StatsdStatsReport) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(StatsdStatsReport prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<StatsdStatsReport, Builder> implements StatsdStatsReportOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(StatsdStatsReport.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public boolean hasStatsBeginTimeSec() {
                return ((StatsdStatsReport) this.instance).hasStatsBeginTimeSec();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getStatsBeginTimeSec() {
                return ((StatsdStatsReport) this.instance).getStatsBeginTimeSec();
            }

            public Builder setStatsBeginTimeSec(int value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setStatsBeginTimeSec(value);
                return this;
            }

            public Builder clearStatsBeginTimeSec() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearStatsBeginTimeSec();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public boolean hasStatsEndTimeSec() {
                return ((StatsdStatsReport) this.instance).hasStatsEndTimeSec();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getStatsEndTimeSec() {
                return ((StatsdStatsReport) this.instance).getStatsEndTimeSec();
            }

            public Builder setStatsEndTimeSec(int value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setStatsEndTimeSec(value);
                return this;
            }

            public Builder clearStatsEndTimeSec() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearStatsEndTimeSec();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<ConfigStats> getConfigStatsList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getConfigStatsList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getConfigStatsCount() {
                return ((StatsdStatsReport) this.instance).getConfigStatsCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public ConfigStats getConfigStats(int index) {
                return ((StatsdStatsReport) this.instance).getConfigStats(index);
            }

            public Builder setConfigStats(int index, ConfigStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setConfigStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder setConfigStats(int index, ConfigStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setConfigStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addConfigStats(ConfigStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addConfigStats((StatsdStatsReport) value);
                return this;
            }

            public Builder addConfigStats(int index, ConfigStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addConfigStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder addConfigStats(ConfigStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addConfigStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder addConfigStats(int index, ConfigStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addConfigStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllConfigStats(Iterable<? extends ConfigStats> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllConfigStats(values);
                return this;
            }

            public Builder clearConfigStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearConfigStats();
                return this;
            }

            public Builder removeConfigStats(int index) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).removeConfigStats(index);
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<AtomStats> getAtomStatsList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getAtomStatsList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getAtomStatsCount() {
                return ((StatsdStatsReport) this.instance).getAtomStatsCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public AtomStats getAtomStats(int index) {
                return ((StatsdStatsReport) this.instance).getAtomStats(index);
            }

            public Builder setAtomStats(int index, AtomStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setAtomStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder setAtomStats(int index, AtomStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setAtomStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAtomStats(AtomStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAtomStats((StatsdStatsReport) value);
                return this;
            }

            public Builder addAtomStats(int index, AtomStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAtomStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder addAtomStats(AtomStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAtomStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder addAtomStats(int index, AtomStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAtomStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllAtomStats(Iterable<? extends AtomStats> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllAtomStats(values);
                return this;
            }

            public Builder clearAtomStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearAtomStats();
                return this;
            }

            public Builder removeAtomStats(int index) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).removeAtomStats(index);
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public boolean hasUidmapStats() {
                return ((StatsdStatsReport) this.instance).hasUidmapStats();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public UidMapStats getUidmapStats() {
                return ((StatsdStatsReport) this.instance).getUidmapStats();
            }

            public Builder setUidmapStats(UidMapStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setUidmapStats((StatsdStatsReport) value);
                return this;
            }

            public Builder setUidmapStats(UidMapStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setUidmapStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder mergeUidmapStats(UidMapStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).mergeUidmapStats(value);
                return this;
            }

            public Builder clearUidmapStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearUidmapStats();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public boolean hasAnomalyAlarmStats() {
                return ((StatsdStatsReport) this.instance).hasAnomalyAlarmStats();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public AnomalyAlarmStats getAnomalyAlarmStats() {
                return ((StatsdStatsReport) this.instance).getAnomalyAlarmStats();
            }

            public Builder setAnomalyAlarmStats(AnomalyAlarmStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setAnomalyAlarmStats((StatsdStatsReport) value);
                return this;
            }

            public Builder setAnomalyAlarmStats(AnomalyAlarmStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setAnomalyAlarmStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder mergeAnomalyAlarmStats(AnomalyAlarmStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).mergeAnomalyAlarmStats(value);
                return this;
            }

            public Builder clearAnomalyAlarmStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearAnomalyAlarmStats();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<PulledAtomStats> getPulledAtomStatsList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getPulledAtomStatsList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getPulledAtomStatsCount() {
                return ((StatsdStatsReport) this.instance).getPulledAtomStatsCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public PulledAtomStats getPulledAtomStats(int index) {
                return ((StatsdStatsReport) this.instance).getPulledAtomStats(index);
            }

            public Builder setPulledAtomStats(int index, PulledAtomStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setPulledAtomStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder setPulledAtomStats(int index, PulledAtomStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setPulledAtomStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addPulledAtomStats(PulledAtomStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addPulledAtomStats((StatsdStatsReport) value);
                return this;
            }

            public Builder addPulledAtomStats(int index, PulledAtomStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addPulledAtomStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder addPulledAtomStats(PulledAtomStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addPulledAtomStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder addPulledAtomStats(int index, PulledAtomStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addPulledAtomStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllPulledAtomStats(Iterable<? extends PulledAtomStats> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllPulledAtomStats(values);
                return this;
            }

            public Builder clearPulledAtomStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearPulledAtomStats();
                return this;
            }

            public Builder removePulledAtomStats(int index) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).removePulledAtomStats(index);
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<AtomMetricStats> getAtomMetricStatsList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getAtomMetricStatsList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getAtomMetricStatsCount() {
                return ((StatsdStatsReport) this.instance).getAtomMetricStatsCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public AtomMetricStats getAtomMetricStats(int index) {
                return ((StatsdStatsReport) this.instance).getAtomMetricStats(index);
            }

            public Builder setAtomMetricStats(int index, AtomMetricStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setAtomMetricStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder setAtomMetricStats(int index, AtomMetricStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setAtomMetricStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAtomMetricStats(AtomMetricStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAtomMetricStats((StatsdStatsReport) value);
                return this;
            }

            public Builder addAtomMetricStats(int index, AtomMetricStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAtomMetricStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder addAtomMetricStats(AtomMetricStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAtomMetricStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder addAtomMetricStats(int index, AtomMetricStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAtomMetricStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllAtomMetricStats(Iterable<? extends AtomMetricStats> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllAtomMetricStats(values);
                return this;
            }

            public Builder clearAtomMetricStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearAtomMetricStats();
                return this;
            }

            public Builder removeAtomMetricStats(int index) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).removeAtomMetricStats(index);
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<LoggerErrorStats> getLoggerErrorStatsList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getLoggerErrorStatsList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getLoggerErrorStatsCount() {
                return ((StatsdStatsReport) this.instance).getLoggerErrorStatsCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public LoggerErrorStats getLoggerErrorStats(int index) {
                return ((StatsdStatsReport) this.instance).getLoggerErrorStats(index);
            }

            public Builder setLoggerErrorStats(int index, LoggerErrorStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setLoggerErrorStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder setLoggerErrorStats(int index, LoggerErrorStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setLoggerErrorStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addLoggerErrorStats(LoggerErrorStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addLoggerErrorStats((StatsdStatsReport) value);
                return this;
            }

            public Builder addLoggerErrorStats(int index, LoggerErrorStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addLoggerErrorStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder addLoggerErrorStats(LoggerErrorStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addLoggerErrorStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder addLoggerErrorStats(int index, LoggerErrorStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addLoggerErrorStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllLoggerErrorStats(Iterable<? extends LoggerErrorStats> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllLoggerErrorStats(values);
                return this;
            }

            public Builder clearLoggerErrorStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearLoggerErrorStats();
                return this;
            }

            public Builder removeLoggerErrorStats(int index) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).removeLoggerErrorStats(index);
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public boolean hasPeriodicAlarmStats() {
                return ((StatsdStatsReport) this.instance).hasPeriodicAlarmStats();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public PeriodicAlarmStats getPeriodicAlarmStats() {
                return ((StatsdStatsReport) this.instance).getPeriodicAlarmStats();
            }

            public Builder setPeriodicAlarmStats(PeriodicAlarmStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setPeriodicAlarmStats((StatsdStatsReport) value);
                return this;
            }

            public Builder setPeriodicAlarmStats(PeriodicAlarmStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setPeriodicAlarmStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder mergePeriodicAlarmStats(PeriodicAlarmStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).mergePeriodicAlarmStats(value);
                return this;
            }

            public Builder clearPeriodicAlarmStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearPeriodicAlarmStats();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<SkippedLogEventStats> getSkippedLogEventStatsList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getSkippedLogEventStatsList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getSkippedLogEventStatsCount() {
                return ((StatsdStatsReport) this.instance).getSkippedLogEventStatsCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public SkippedLogEventStats getSkippedLogEventStats(int index) {
                return ((StatsdStatsReport) this.instance).getSkippedLogEventStats(index);
            }

            public Builder setSkippedLogEventStats(int index, SkippedLogEventStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setSkippedLogEventStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder setSkippedLogEventStats(int index, SkippedLogEventStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setSkippedLogEventStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addSkippedLogEventStats(SkippedLogEventStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addSkippedLogEventStats((StatsdStatsReport) value);
                return this;
            }

            public Builder addSkippedLogEventStats(int index, SkippedLogEventStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addSkippedLogEventStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder addSkippedLogEventStats(SkippedLogEventStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addSkippedLogEventStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder addSkippedLogEventStats(int index, SkippedLogEventStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addSkippedLogEventStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllSkippedLogEventStats(Iterable<? extends SkippedLogEventStats> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllSkippedLogEventStats(values);
                return this;
            }

            public Builder clearSkippedLogEventStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearSkippedLogEventStats();
                return this;
            }

            public Builder removeSkippedLogEventStats(int index) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).removeSkippedLogEventStats(index);
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<Long> getLogLossStatsList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getLogLossStatsList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getLogLossStatsCount() {
                return ((StatsdStatsReport) this.instance).getLogLossStatsCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public long getLogLossStats(int index) {
                return ((StatsdStatsReport) this.instance).getLogLossStats(index);
            }

            public Builder setLogLossStats(int index, long value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setLogLossStats(index, value);
                return this;
            }

            public Builder addLogLossStats(long value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addLogLossStats(value);
                return this;
            }

            public Builder addAllLogLossStats(Iterable<? extends Long> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllLogLossStats(values);
                return this;
            }

            public Builder clearLogLossStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearLogLossStats();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<Integer> getSystemRestartSecList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getSystemRestartSecList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getSystemRestartSecCount() {
                return ((StatsdStatsReport) this.instance).getSystemRestartSecCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getSystemRestartSec(int index) {
                return ((StatsdStatsReport) this.instance).getSystemRestartSec(index);
            }

            public Builder setSystemRestartSec(int index, int value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setSystemRestartSec(index, value);
                return this;
            }

            public Builder addSystemRestartSec(int value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addSystemRestartSec(value);
                return this;
            }

            public Builder addAllSystemRestartSec(Iterable<? extends Integer> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllSystemRestartSec(values);
                return this;
            }

            public Builder clearSystemRestartSec() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearSystemRestartSec();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<LogLossStats> getDetectedLogLossList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getDetectedLogLossList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getDetectedLogLossCount() {
                return ((StatsdStatsReport) this.instance).getDetectedLogLossCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public LogLossStats getDetectedLogLoss(int index) {
                return ((StatsdStatsReport) this.instance).getDetectedLogLoss(index);
            }

            public Builder setDetectedLogLoss(int index, LogLossStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setDetectedLogLoss((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder setDetectedLogLoss(int index, LogLossStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setDetectedLogLoss((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addDetectedLogLoss(LogLossStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addDetectedLogLoss((StatsdStatsReport) value);
                return this;
            }

            public Builder addDetectedLogLoss(int index, LogLossStats value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addDetectedLogLoss((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder addDetectedLogLoss(LogLossStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addDetectedLogLoss((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder addDetectedLogLoss(int index, LogLossStats.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addDetectedLogLoss((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllDetectedLogLoss(Iterable<? extends LogLossStats> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllDetectedLogLoss(values);
                return this;
            }

            public Builder clearDetectedLogLoss() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearDetectedLogLoss();
                return this;
            }

            public Builder removeDetectedLogLoss(int index) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).removeDetectedLogLoss(index);
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public boolean hasQueueOverflow() {
                return ((StatsdStatsReport) this.instance).hasQueueOverflow();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public EventQueueOverflow getQueueOverflow() {
                return ((StatsdStatsReport) this.instance).getQueueOverflow();
            }

            public Builder setQueueOverflow(EventQueueOverflow value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setQueueOverflow((StatsdStatsReport) value);
                return this;
            }

            public Builder setQueueOverflow(EventQueueOverflow.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setQueueOverflow((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder mergeQueueOverflow(EventQueueOverflow value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).mergeQueueOverflow(value);
                return this;
            }

            public Builder clearQueueOverflow() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearQueueOverflow();
                return this;
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public List<ActivationBroadcastGuardrail> getActivationGuardrailStatsList() {
                return Collections.unmodifiableList(((StatsdStatsReport) this.instance).getActivationGuardrailStatsList());
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public int getActivationGuardrailStatsCount() {
                return ((StatsdStatsReport) this.instance).getActivationGuardrailStatsCount();
            }

            @Override // com.android.os.StatsLog.StatsdStatsReportOrBuilder
            public ActivationBroadcastGuardrail getActivationGuardrailStats(int index) {
                return ((StatsdStatsReport) this.instance).getActivationGuardrailStats(index);
            }

            public Builder setActivationGuardrailStats(int index, ActivationBroadcastGuardrail value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setActivationGuardrailStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder setActivationGuardrailStats(int index, ActivationBroadcastGuardrail.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).setActivationGuardrailStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addActivationGuardrailStats(ActivationBroadcastGuardrail value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addActivationGuardrailStats((StatsdStatsReport) value);
                return this;
            }

            public Builder addActivationGuardrailStats(int index, ActivationBroadcastGuardrail value) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addActivationGuardrailStats((StatsdStatsReport) index, (int) value);
                return this;
            }

            public Builder addActivationGuardrailStats(ActivationBroadcastGuardrail.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addActivationGuardrailStats((StatsdStatsReport) builderForValue);
                return this;
            }

            public Builder addActivationGuardrailStats(int index, ActivationBroadcastGuardrail.Builder builderForValue) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addActivationGuardrailStats((StatsdStatsReport) index, (int) builderForValue);
                return this;
            }

            public Builder addAllActivationGuardrailStats(Iterable<? extends ActivationBroadcastGuardrail> values) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).addAllActivationGuardrailStats(values);
                return this;
            }

            public Builder clearActivationGuardrailStats() {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).clearActivationGuardrailStats();
                return this;
            }

            public Builder removeActivationGuardrailStats(int index) {
                copyOnWrite();
                ((StatsdStatsReport) this.instance).removeActivationGuardrailStats(index);
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new StatsdStatsReport();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    this.configStats_.makeImmutable();
                    this.atomStats_.makeImmutable();
                    this.pulledAtomStats_.makeImmutable();
                    this.atomMetricStats_.makeImmutable();
                    this.loggerErrorStats_.makeImmutable();
                    this.skippedLogEventStats_.makeImmutable();
                    this.logLossStats_.makeImmutable();
                    this.systemRestartSec_.makeImmutable();
                    this.detectedLogLoss_.makeImmutable();
                    this.activationGuardrailStats_.makeImmutable();
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    StatsdStatsReport other = (StatsdStatsReport) arg1;
                    this.statsBeginTimeSec_ = visitor.visitInt(hasStatsBeginTimeSec(), this.statsBeginTimeSec_, other.hasStatsBeginTimeSec(), other.statsBeginTimeSec_);
                    this.statsEndTimeSec_ = visitor.visitInt(hasStatsEndTimeSec(), this.statsEndTimeSec_, other.hasStatsEndTimeSec(), other.statsEndTimeSec_);
                    this.configStats_ = visitor.visitList(this.configStats_, other.configStats_);
                    this.atomStats_ = visitor.visitList(this.atomStats_, other.atomStats_);
                    this.uidmapStats_ = (UidMapStats) visitor.visitMessage(this.uidmapStats_, other.uidmapStats_);
                    this.anomalyAlarmStats_ = (AnomalyAlarmStats) visitor.visitMessage(this.anomalyAlarmStats_, other.anomalyAlarmStats_);
                    this.pulledAtomStats_ = visitor.visitList(this.pulledAtomStats_, other.pulledAtomStats_);
                    this.atomMetricStats_ = visitor.visitList(this.atomMetricStats_, other.atomMetricStats_);
                    this.loggerErrorStats_ = visitor.visitList(this.loggerErrorStats_, other.loggerErrorStats_);
                    this.periodicAlarmStats_ = (PeriodicAlarmStats) visitor.visitMessage(this.periodicAlarmStats_, other.periodicAlarmStats_);
                    this.skippedLogEventStats_ = visitor.visitList(this.skippedLogEventStats_, other.skippedLogEventStats_);
                    this.logLossStats_ = visitor.visitLongList(this.logLossStats_, other.logLossStats_);
                    this.systemRestartSec_ = visitor.visitIntList(this.systemRestartSec_, other.systemRestartSec_);
                    this.detectedLogLoss_ = visitor.visitList(this.detectedLogLoss_, other.detectedLogLoss_);
                    this.queueOverflow_ = (EventQueueOverflow) visitor.visitMessage(this.queueOverflow_, other.queueOverflow_);
                    this.activationGuardrailStats_ = visitor.visitList(this.activationGuardrailStats_, other.activationGuardrailStats_);
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                case 8:
                                    this.bitField0_ |= 1;
                                    this.statsBeginTimeSec_ = input.readInt32();
                                    break;
                                case 16:
                                    this.bitField0_ |= 2;
                                    this.statsEndTimeSec_ = input.readInt32();
                                    break;
                                case 26:
                                    if (!this.configStats_.isModifiable()) {
                                        this.configStats_ = GeneratedMessageLite.mutableCopy(this.configStats_);
                                    }
                                    this.configStats_.add((ConfigStats) input.readMessage(ConfigStats.parser(), extensionRegistry));
                                    break;
                                case 58:
                                    if (!this.atomStats_.isModifiable()) {
                                        this.atomStats_ = GeneratedMessageLite.mutableCopy(this.atomStats_);
                                    }
                                    this.atomStats_.add((AtomStats) input.readMessage(AtomStats.parser(), extensionRegistry));
                                    break;
                                case 66:
                                    UidMapStats.Builder subBuilder = null;
                                    if ((this.bitField0_ & 4) == 4) {
                                        subBuilder = (UidMapStats.Builder) this.uidmapStats_.toBuilder();
                                    }
                                    this.uidmapStats_ = (UidMapStats) input.readMessage(UidMapStats.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom((GeneratedMessageLite) this.uidmapStats_);
                                        this.uidmapStats_ = (UidMapStats) subBuilder.buildPartial();
                                    }
                                    this.bitField0_ |= 4;
                                    break;
                                case 74:
                                    AnomalyAlarmStats.Builder subBuilder2 = null;
                                    if ((this.bitField0_ & 8) == 8) {
                                        subBuilder2 = (AnomalyAlarmStats.Builder) this.anomalyAlarmStats_.toBuilder();
                                    }
                                    this.anomalyAlarmStats_ = (AnomalyAlarmStats) input.readMessage(AnomalyAlarmStats.parser(), extensionRegistry);
                                    if (subBuilder2 != null) {
                                        subBuilder2.mergeFrom((GeneratedMessageLite) this.anomalyAlarmStats_);
                                        this.anomalyAlarmStats_ = (AnomalyAlarmStats) subBuilder2.buildPartial();
                                    }
                                    this.bitField0_ |= 8;
                                    break;
                                case 82:
                                    if (!this.pulledAtomStats_.isModifiable()) {
                                        this.pulledAtomStats_ = GeneratedMessageLite.mutableCopy(this.pulledAtomStats_);
                                    }
                                    this.pulledAtomStats_.add((PulledAtomStats) input.readMessage(PulledAtomStats.parser(), extensionRegistry));
                                    break;
                                case 90:
                                    if (!this.loggerErrorStats_.isModifiable()) {
                                        this.loggerErrorStats_ = GeneratedMessageLite.mutableCopy(this.loggerErrorStats_);
                                    }
                                    this.loggerErrorStats_.add((LoggerErrorStats) input.readMessage(LoggerErrorStats.parser(), extensionRegistry));
                                    break;
                                case 98:
                                    PeriodicAlarmStats.Builder subBuilder3 = null;
                                    if ((this.bitField0_ & 16) == 16) {
                                        subBuilder3 = (PeriodicAlarmStats.Builder) this.periodicAlarmStats_.toBuilder();
                                    }
                                    this.periodicAlarmStats_ = (PeriodicAlarmStats) input.readMessage(PeriodicAlarmStats.parser(), extensionRegistry);
                                    if (subBuilder3 != null) {
                                        subBuilder3.mergeFrom((GeneratedMessageLite) this.periodicAlarmStats_);
                                        this.periodicAlarmStats_ = (PeriodicAlarmStats) subBuilder3.buildPartial();
                                    }
                                    this.bitField0_ |= 16;
                                    break;
                                case 106:
                                    if (!this.skippedLogEventStats_.isModifiable()) {
                                        this.skippedLogEventStats_ = GeneratedMessageLite.mutableCopy(this.skippedLogEventStats_);
                                    }
                                    this.skippedLogEventStats_.add((SkippedLogEventStats) input.readMessage(SkippedLogEventStats.parser(), extensionRegistry));
                                    break;
                                case 112:
                                    if (!this.logLossStats_.isModifiable()) {
                                        this.logLossStats_ = GeneratedMessageLite.mutableCopy(this.logLossStats_);
                                    }
                                    this.logLossStats_.addLong(input.readInt64());
                                    break;
                                case 114:
                                    int limit = input.pushLimit(input.readRawVarint32());
                                    if (!this.logLossStats_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        this.logLossStats_ = GeneratedMessageLite.mutableCopy(this.logLossStats_);
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        this.logLossStats_.addLong(input.readInt64());
                                    }
                                    input.popLimit(limit);
                                    break;
                                case 120:
                                    if (!this.systemRestartSec_.isModifiable()) {
                                        this.systemRestartSec_ = GeneratedMessageLite.mutableCopy(this.systemRestartSec_);
                                    }
                                    this.systemRestartSec_.addInt(input.readInt32());
                                    break;
                                case 122:
                                    int limit2 = input.pushLimit(input.readRawVarint32());
                                    if (!this.systemRestartSec_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        this.systemRestartSec_ = GeneratedMessageLite.mutableCopy(this.systemRestartSec_);
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        this.systemRestartSec_.addInt(input.readInt32());
                                    }
                                    input.popLimit(limit2);
                                    break;
                                case 130:
                                    if (!this.detectedLogLoss_.isModifiable()) {
                                        this.detectedLogLoss_ = GeneratedMessageLite.mutableCopy(this.detectedLogLoss_);
                                    }
                                    this.detectedLogLoss_.add((LogLossStats) input.readMessage(LogLossStats.parser(), extensionRegistry));
                                    break;
                                case 138:
                                    if (!this.atomMetricStats_.isModifiable()) {
                                        this.atomMetricStats_ = GeneratedMessageLite.mutableCopy(this.atomMetricStats_);
                                    }
                                    this.atomMetricStats_.add((AtomMetricStats) input.readMessage(AtomMetricStats.parser(), extensionRegistry));
                                    break;
                                case 146:
                                    EventQueueOverflow.Builder subBuilder4 = null;
                                    if ((this.bitField0_ & 32) == 32) {
                                        subBuilder4 = (EventQueueOverflow.Builder) this.queueOverflow_.toBuilder();
                                    }
                                    this.queueOverflow_ = (EventQueueOverflow) input.readMessage(EventQueueOverflow.parser(), extensionRegistry);
                                    if (subBuilder4 != null) {
                                        subBuilder4.mergeFrom((GeneratedMessageLite) this.queueOverflow_);
                                        this.queueOverflow_ = (EventQueueOverflow) subBuilder4.buildPartial();
                                    }
                                    this.bitField0_ |= 32;
                                    break;
                                case 154:
                                    if (!this.activationGuardrailStats_.isModifiable()) {
                                        this.activationGuardrailStats_ = GeneratedMessageLite.mutableCopy(this.activationGuardrailStats_);
                                    }
                                    this.activationGuardrailStats_.add((ActivationBroadcastGuardrail) input.readMessage(ActivationBroadcastGuardrail.parser(), extensionRegistry));
                                    break;
                                default:
                                    if (parseUnknownField(tag, input)) {
                                        break;
                                    } else {
                                        done = true;
                                        break;
                                    }
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (StatsdStatsReport.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static StatsdStatsReport getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<StatsdStatsReport> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public static final class AlertTriggerDetails extends GeneratedMessageLite<AlertTriggerDetails, Builder> implements AlertTriggerDetailsOrBuilder {
        private static final AlertTriggerDetails DEFAULT_INSTANCE = new AlertTriggerDetails();
        public static final int PACKAGE_INFO_FIELD_NUMBER = 3;
        private static volatile Parser<AlertTriggerDetails> PARSER = null;
        public static final int TRIGGER_EVENT_FIELD_NUMBER = 2;
        public static final int TRIGGER_METRIC_FIELD_NUMBER = 1;
        private int bitField0_;
        private UidMapping.PackageInfoSnapshot packageInfo_;
        private int valueCase_ = 0;
        private Object value_;

        public interface MetricValueOrBuilder extends MessageLiteOrBuilder {
            DimensionsValue getDimensionInCondition();

            DimensionsValue getDimensionInWhat();

            long getMetricId();

            long getValue();

            boolean hasDimensionInCondition();

            boolean hasDimensionInWhat();

            boolean hasMetricId();

            boolean hasValue();
        }

        private AlertTriggerDetails() {
        }

        public static final class MetricValue extends GeneratedMessageLite<MetricValue, Builder> implements MetricValueOrBuilder {
            private static final MetricValue DEFAULT_INSTANCE = new MetricValue();
            public static final int DIMENSION_IN_CONDITION_FIELD_NUMBER = 3;
            public static final int DIMENSION_IN_WHAT_FIELD_NUMBER = 2;
            public static final int METRIC_ID_FIELD_NUMBER = 1;
            private static volatile Parser<MetricValue> PARSER = null;
            public static final int VALUE_FIELD_NUMBER = 4;
            private int bitField0_;
            private DimensionsValue dimensionInCondition_;
            private DimensionsValue dimensionInWhat_;
            private long metricId_ = 0;
            private long value_ = 0;

            private MetricValue() {
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
            public boolean hasMetricId() {
                return (this.bitField0_ & 1) == 1;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
            public long getMetricId() {
                return this.metricId_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setMetricId(long value) {
                this.bitField0_ |= 1;
                this.metricId_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearMetricId() {
                this.bitField0_ &= -2;
                this.metricId_ = 0;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
            public boolean hasDimensionInWhat() {
                return (this.bitField0_ & 2) == 2;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
            public DimensionsValue getDimensionInWhat() {
                DimensionsValue dimensionsValue = this.dimensionInWhat_;
                return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDimensionInWhat(DimensionsValue value) {
                if (value != null) {
                    this.dimensionInWhat_ = value;
                    this.bitField0_ |= 2;
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDimensionInWhat(DimensionsValue.Builder builderForValue) {
                this.dimensionInWhat_ = (DimensionsValue) builderForValue.build();
                this.bitField0_ |= 2;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void mergeDimensionInWhat(DimensionsValue value) {
                DimensionsValue dimensionsValue = this.dimensionInWhat_;
                if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                    this.dimensionInWhat_ = value;
                } else {
                    this.dimensionInWhat_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionInWhat_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
                }
                this.bitField0_ |= 2;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDimensionInWhat() {
                this.dimensionInWhat_ = null;
                this.bitField0_ &= -3;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
            public boolean hasDimensionInCondition() {
                return (this.bitField0_ & 4) == 4;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
            public DimensionsValue getDimensionInCondition() {
                DimensionsValue dimensionsValue = this.dimensionInCondition_;
                return dimensionsValue == null ? DimensionsValue.getDefaultInstance() : dimensionsValue;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDimensionInCondition(DimensionsValue value) {
                if (value != null) {
                    this.dimensionInCondition_ = value;
                    this.bitField0_ |= 4;
                    return;
                }
                throw new NullPointerException();
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setDimensionInCondition(DimensionsValue.Builder builderForValue) {
                this.dimensionInCondition_ = (DimensionsValue) builderForValue.build();
                this.bitField0_ |= 4;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void mergeDimensionInCondition(DimensionsValue value) {
                DimensionsValue dimensionsValue = this.dimensionInCondition_;
                if (dimensionsValue == null || dimensionsValue == DimensionsValue.getDefaultInstance()) {
                    this.dimensionInCondition_ = value;
                } else {
                    this.dimensionInCondition_ = (DimensionsValue) ((DimensionsValue.Builder) DimensionsValue.newBuilder(this.dimensionInCondition_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
                }
                this.bitField0_ |= 4;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearDimensionInCondition() {
                this.dimensionInCondition_ = null;
                this.bitField0_ &= -5;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
            public boolean hasValue() {
                return (this.bitField0_ & 8) == 8;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
            public long getValue() {
                return this.value_;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void setValue(long value) {
                this.bitField0_ |= 8;
                this.value_ = value;
            }

            /* access modifiers changed from: private */
            /* access modifiers changed from: public */
            private void clearValue() {
                this.bitField0_ &= -9;
                this.value_ = 0;
            }

            @Override // com.google.protobuf.MessageLite
            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 1) == 1) {
                    output.writeInt64(1, this.metricId_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    output.writeMessage(2, getDimensionInWhat());
                }
                if ((this.bitField0_ & 4) == 4) {
                    output.writeMessage(3, getDimensionInCondition());
                }
                if ((this.bitField0_ & 8) == 8) {
                    output.writeInt64(4, this.value_);
                }
                this.unknownFields.writeTo(output);
            }

            @Override // com.google.protobuf.MessageLite
            public int getSerializedSize() {
                int size = this.memoizedSerializedSize;
                if (size != -1) {
                    return size;
                }
                int size2 = 0;
                if ((this.bitField0_ & 1) == 1) {
                    size2 = 0 + CodedOutputStream.computeInt64Size(1, this.metricId_);
                }
                if ((this.bitField0_ & 2) == 2) {
                    size2 += CodedOutputStream.computeMessageSize(2, getDimensionInWhat());
                }
                if ((this.bitField0_ & 4) == 4) {
                    size2 += CodedOutputStream.computeMessageSize(3, getDimensionInCondition());
                }
                if ((this.bitField0_ & 8) == 8) {
                    size2 += CodedOutputStream.computeInt64Size(4, this.value_);
                }
                int size3 = size2 + this.unknownFields.getSerializedSize();
                this.memoizedSerializedSize = size3;
                return size3;
            }

            public static MetricValue parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (MetricValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static MetricValue parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (MetricValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static MetricValue parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (MetricValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static MetricValue parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (MetricValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static MetricValue parseFrom(InputStream input) throws IOException {
                return (MetricValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static MetricValue parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (MetricValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static MetricValue parseDelimitedFrom(InputStream input) throws IOException {
                return (MetricValue) parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static MetricValue parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (MetricValue) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static MetricValue parseFrom(CodedInputStream input) throws IOException {
                return (MetricValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static MetricValue parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (MetricValue) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(MetricValue prototype) {
                return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
            }

            public static final class Builder extends GeneratedMessageLite.Builder<MetricValue, Builder> implements MetricValueOrBuilder {
                /* synthetic */ Builder(AnonymousClass1 x0) {
                    this();
                }

                private Builder() {
                    super(MetricValue.DEFAULT_INSTANCE);
                }

                @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
                public boolean hasMetricId() {
                    return ((MetricValue) this.instance).hasMetricId();
                }

                @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
                public long getMetricId() {
                    return ((MetricValue) this.instance).getMetricId();
                }

                public Builder setMetricId(long value) {
                    copyOnWrite();
                    ((MetricValue) this.instance).setMetricId(value);
                    return this;
                }

                public Builder clearMetricId() {
                    copyOnWrite();
                    ((MetricValue) this.instance).clearMetricId();
                    return this;
                }

                @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
                public boolean hasDimensionInWhat() {
                    return ((MetricValue) this.instance).hasDimensionInWhat();
                }

                @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
                public DimensionsValue getDimensionInWhat() {
                    return ((MetricValue) this.instance).getDimensionInWhat();
                }

                public Builder setDimensionInWhat(DimensionsValue value) {
                    copyOnWrite();
                    ((MetricValue) this.instance).setDimensionInWhat((MetricValue) value);
                    return this;
                }

                public Builder setDimensionInWhat(DimensionsValue.Builder builderForValue) {
                    copyOnWrite();
                    ((MetricValue) this.instance).setDimensionInWhat((MetricValue) builderForValue);
                    return this;
                }

                public Builder mergeDimensionInWhat(DimensionsValue value) {
                    copyOnWrite();
                    ((MetricValue) this.instance).mergeDimensionInWhat(value);
                    return this;
                }

                public Builder clearDimensionInWhat() {
                    copyOnWrite();
                    ((MetricValue) this.instance).clearDimensionInWhat();
                    return this;
                }

                @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
                public boolean hasDimensionInCondition() {
                    return ((MetricValue) this.instance).hasDimensionInCondition();
                }

                @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
                public DimensionsValue getDimensionInCondition() {
                    return ((MetricValue) this.instance).getDimensionInCondition();
                }

                public Builder setDimensionInCondition(DimensionsValue value) {
                    copyOnWrite();
                    ((MetricValue) this.instance).setDimensionInCondition((MetricValue) value);
                    return this;
                }

                public Builder setDimensionInCondition(DimensionsValue.Builder builderForValue) {
                    copyOnWrite();
                    ((MetricValue) this.instance).setDimensionInCondition((MetricValue) builderForValue);
                    return this;
                }

                public Builder mergeDimensionInCondition(DimensionsValue value) {
                    copyOnWrite();
                    ((MetricValue) this.instance).mergeDimensionInCondition(value);
                    return this;
                }

                public Builder clearDimensionInCondition() {
                    copyOnWrite();
                    ((MetricValue) this.instance).clearDimensionInCondition();
                    return this;
                }

                @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
                public boolean hasValue() {
                    return ((MetricValue) this.instance).hasValue();
                }

                @Override // com.android.os.StatsLog.AlertTriggerDetails.MetricValueOrBuilder
                public long getValue() {
                    return ((MetricValue) this.instance).getValue();
                }

                public Builder setValue(long value) {
                    copyOnWrite();
                    ((MetricValue) this.instance).setValue(value);
                    return this;
                }

                public Builder clearValue() {
                    copyOnWrite();
                    ((MetricValue) this.instance).clearValue();
                    return this;
                }
            }

            /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
            /* access modifiers changed from: protected */
            @Override // com.google.protobuf.GeneratedMessageLite
            public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE:
                        return new MetricValue();
                    case IS_INITIALIZED:
                        return DEFAULT_INSTANCE;
                    case MAKE_IMMUTABLE:
                        return null;
                    case NEW_BUILDER:
                        return new Builder(null);
                    case VISIT:
                        GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                        MetricValue other = (MetricValue) arg1;
                        this.metricId_ = visitor.visitLong(hasMetricId(), this.metricId_, other.hasMetricId(), other.metricId_);
                        this.dimensionInWhat_ = (DimensionsValue) visitor.visitMessage(this.dimensionInWhat_, other.dimensionInWhat_);
                        this.dimensionInCondition_ = (DimensionsValue) visitor.visitMessage(this.dimensionInCondition_, other.dimensionInCondition_);
                        this.value_ = visitor.visitLong(hasValue(), this.value_, other.hasValue(), other.value_);
                        if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                            this.bitField0_ |= other.bitField0_;
                        }
                        return this;
                    case MERGE_FROM_STREAM:
                        CodedInputStream input = (CodedInputStream) arg0;
                        ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                        boolean done = false;
                        while (!done) {
                            try {
                                int tag = input.readTag();
                                if (tag == 0) {
                                    done = true;
                                } else if (tag == 8) {
                                    this.bitField0_ |= 1;
                                    this.metricId_ = input.readInt64();
                                } else if (tag == 18) {
                                    DimensionsValue.Builder subBuilder = null;
                                    if ((this.bitField0_ & 2) == 2) {
                                        subBuilder = (DimensionsValue.Builder) this.dimensionInWhat_.toBuilder();
                                    }
                                    this.dimensionInWhat_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom((GeneratedMessageLite) this.dimensionInWhat_);
                                        this.dimensionInWhat_ = (DimensionsValue) subBuilder.buildPartial();
                                    }
                                    this.bitField0_ |= 2;
                                } else if (tag == 26) {
                                    DimensionsValue.Builder subBuilder2 = null;
                                    if ((this.bitField0_ & 4) == 4) {
                                        subBuilder2 = (DimensionsValue.Builder) this.dimensionInCondition_.toBuilder();
                                    }
                                    this.dimensionInCondition_ = (DimensionsValue) input.readMessage(DimensionsValue.parser(), extensionRegistry);
                                    if (subBuilder2 != null) {
                                        subBuilder2.mergeFrom((GeneratedMessageLite) this.dimensionInCondition_);
                                        this.dimensionInCondition_ = (DimensionsValue) subBuilder2.buildPartial();
                                    }
                                    this.bitField0_ |= 4;
                                } else if (tag == 32) {
                                    this.bitField0_ = 8 | this.bitField0_;
                                    this.value_ = input.readInt64();
                                } else if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                            } catch (InvalidProtocolBufferException e) {
                                throw new RuntimeException(e.setUnfinishedMessage(this));
                            } catch (IOException e2) {
                                throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                            }
                        }
                        break;
                    case GET_DEFAULT_INSTANCE:
                        break;
                    case GET_PARSER:
                        if (PARSER == null) {
                            synchronized (MetricValue.class) {
                                if (PARSER == null) {
                                    PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    default:
                        throw new UnsupportedOperationException();
                }
                return DEFAULT_INSTANCE;
            }

            static {
                DEFAULT_INSTANCE.makeImmutable();
            }

            public static MetricValue getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static Parser<MetricValue> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public enum ValueCase implements Internal.EnumLite {
            TRIGGER_METRIC(1),
            TRIGGER_EVENT(2),
            VALUE_NOT_SET(0);
            
            private final int value;

            private ValueCase(int value2) {
                this.value = value2;
            }

            @Deprecated
            public static ValueCase valueOf(int value2) {
                return forNumber(value2);
            }

            public static ValueCase forNumber(int value2) {
                if (value2 == 0) {
                    return VALUE_NOT_SET;
                }
                if (value2 == 1) {
                    return TRIGGER_METRIC;
                }
                if (value2 != 2) {
                    return null;
                }
                return TRIGGER_EVENT;
            }

            @Override // com.google.protobuf.Internal.EnumLite
            public int getNumber() {
                return this.value;
            }
        }

        @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
        public ValueCase getValueCase() {
            return ValueCase.forNumber(this.valueCase_);
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearValue() {
            this.valueCase_ = 0;
            this.value_ = null;
        }

        @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
        public boolean hasTriggerMetric() {
            return this.valueCase_ == 1;
        }

        @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
        public MetricValue getTriggerMetric() {
            if (this.valueCase_ == 1) {
                return (MetricValue) this.value_;
            }
            return MetricValue.getDefaultInstance();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setTriggerMetric(MetricValue value) {
            if (value != null) {
                this.value_ = value;
                this.valueCase_ = 1;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setTriggerMetric(MetricValue.Builder builderForValue) {
            this.value_ = builderForValue.build();
            this.valueCase_ = 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeTriggerMetric(MetricValue value) {
            if (this.valueCase_ != 1 || this.value_ == MetricValue.getDefaultInstance()) {
                this.value_ = value;
            } else {
                this.value_ = ((MetricValue.Builder) MetricValue.newBuilder((MetricValue) this.value_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.valueCase_ = 1;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearTriggerMetric() {
            if (this.valueCase_ == 1) {
                this.valueCase_ = 0;
                this.value_ = null;
            }
        }

        @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
        public boolean hasTriggerEvent() {
            return this.valueCase_ == 2;
        }

        @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
        public EventMetricData getTriggerEvent() {
            if (this.valueCase_ == 2) {
                return (EventMetricData) this.value_;
            }
            return EventMetricData.getDefaultInstance();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setTriggerEvent(EventMetricData value) {
            if (value != null) {
                this.value_ = value;
                this.valueCase_ = 2;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setTriggerEvent(EventMetricData.Builder builderForValue) {
            this.value_ = builderForValue.build();
            this.valueCase_ = 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergeTriggerEvent(EventMetricData value) {
            if (this.valueCase_ != 2 || this.value_ == EventMetricData.getDefaultInstance()) {
                this.value_ = value;
            } else {
                this.value_ = ((EventMetricData.Builder) EventMetricData.newBuilder((EventMetricData) this.value_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.valueCase_ = 2;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearTriggerEvent() {
            if (this.valueCase_ == 2) {
                this.valueCase_ = 0;
                this.value_ = null;
            }
        }

        @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
        public boolean hasPackageInfo() {
            return (this.bitField0_ & 4) == 4;
        }

        @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
        public UidMapping.PackageInfoSnapshot getPackageInfo() {
            UidMapping.PackageInfoSnapshot packageInfoSnapshot = this.packageInfo_;
            return packageInfoSnapshot == null ? UidMapping.PackageInfoSnapshot.getDefaultInstance() : packageInfoSnapshot;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setPackageInfo(UidMapping.PackageInfoSnapshot value) {
            if (value != null) {
                this.packageInfo_ = value;
                this.bitField0_ |= 4;
                return;
            }
            throw new NullPointerException();
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void setPackageInfo(UidMapping.PackageInfoSnapshot.Builder builderForValue) {
            this.packageInfo_ = (UidMapping.PackageInfoSnapshot) builderForValue.build();
            this.bitField0_ |= 4;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void mergePackageInfo(UidMapping.PackageInfoSnapshot value) {
            UidMapping.PackageInfoSnapshot packageInfoSnapshot = this.packageInfo_;
            if (packageInfoSnapshot == null || packageInfoSnapshot == UidMapping.PackageInfoSnapshot.getDefaultInstance()) {
                this.packageInfo_ = value;
            } else {
                this.packageInfo_ = (UidMapping.PackageInfoSnapshot) ((UidMapping.PackageInfoSnapshot.Builder) UidMapping.PackageInfoSnapshot.newBuilder(this.packageInfo_).mergeFrom((GeneratedMessageLite) value)).buildPartial();
            }
            this.bitField0_ |= 4;
        }

        /* access modifiers changed from: private */
        /* access modifiers changed from: public */
        private void clearPackageInfo() {
            this.packageInfo_ = null;
            this.bitField0_ &= -5;
        }

        @Override // com.google.protobuf.MessageLite
        public void writeTo(CodedOutputStream output) throws IOException {
            if (this.valueCase_ == 1) {
                output.writeMessage(1, (MetricValue) this.value_);
            }
            if (this.valueCase_ == 2) {
                output.writeMessage(2, (EventMetricData) this.value_);
            }
            if ((this.bitField0_ & 4) == 4) {
                output.writeMessage(3, getPackageInfo());
            }
            this.unknownFields.writeTo(output);
        }

        @Override // com.google.protobuf.MessageLite
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            int size2 = 0;
            if (this.valueCase_ == 1) {
                size2 = 0 + CodedOutputStream.computeMessageSize(1, (MetricValue) this.value_);
            }
            if (this.valueCase_ == 2) {
                size2 += CodedOutputStream.computeMessageSize(2, (EventMetricData) this.value_);
            }
            if ((this.bitField0_ & 4) == 4) {
                size2 += CodedOutputStream.computeMessageSize(3, getPackageInfo());
            }
            int size3 = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSerializedSize = size3;
            return size3;
        }

        public static AlertTriggerDetails parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (AlertTriggerDetails) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static AlertTriggerDetails parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (AlertTriggerDetails) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static AlertTriggerDetails parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (AlertTriggerDetails) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static AlertTriggerDetails parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (AlertTriggerDetails) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static AlertTriggerDetails parseFrom(InputStream input) throws IOException {
            return (AlertTriggerDetails) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static AlertTriggerDetails parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (AlertTriggerDetails) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static AlertTriggerDetails parseDelimitedFrom(InputStream input) throws IOException {
            return (AlertTriggerDetails) parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static AlertTriggerDetails parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (AlertTriggerDetails) parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static AlertTriggerDetails parseFrom(CodedInputStream input) throws IOException {
            return (AlertTriggerDetails) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static AlertTriggerDetails parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (AlertTriggerDetails) GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(AlertTriggerDetails prototype) {
            return (Builder) ((Builder) DEFAULT_INSTANCE.toBuilder()).mergeFrom((GeneratedMessageLite) prototype);
        }

        public static final class Builder extends GeneratedMessageLite.Builder<AlertTriggerDetails, Builder> implements AlertTriggerDetailsOrBuilder {
            /* synthetic */ Builder(AnonymousClass1 x0) {
                this();
            }

            private Builder() {
                super(AlertTriggerDetails.DEFAULT_INSTANCE);
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
            public ValueCase getValueCase() {
                return ((AlertTriggerDetails) this.instance).getValueCase();
            }

            public Builder clearValue() {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).clearValue();
                return this;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
            public boolean hasTriggerMetric() {
                return ((AlertTriggerDetails) this.instance).hasTriggerMetric();
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
            public MetricValue getTriggerMetric() {
                return ((AlertTriggerDetails) this.instance).getTriggerMetric();
            }

            public Builder setTriggerMetric(MetricValue value) {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).setTriggerMetric((AlertTriggerDetails) value);
                return this;
            }

            public Builder setTriggerMetric(MetricValue.Builder builderForValue) {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).setTriggerMetric((AlertTriggerDetails) builderForValue);
                return this;
            }

            public Builder mergeTriggerMetric(MetricValue value) {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).mergeTriggerMetric(value);
                return this;
            }

            public Builder clearTriggerMetric() {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).clearTriggerMetric();
                return this;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
            public boolean hasTriggerEvent() {
                return ((AlertTriggerDetails) this.instance).hasTriggerEvent();
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
            public EventMetricData getTriggerEvent() {
                return ((AlertTriggerDetails) this.instance).getTriggerEvent();
            }

            public Builder setTriggerEvent(EventMetricData value) {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).setTriggerEvent((AlertTriggerDetails) value);
                return this;
            }

            public Builder setTriggerEvent(EventMetricData.Builder builderForValue) {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).setTriggerEvent((AlertTriggerDetails) builderForValue);
                return this;
            }

            public Builder mergeTriggerEvent(EventMetricData value) {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).mergeTriggerEvent(value);
                return this;
            }

            public Builder clearTriggerEvent() {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).clearTriggerEvent();
                return this;
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
            public boolean hasPackageInfo() {
                return ((AlertTriggerDetails) this.instance).hasPackageInfo();
            }

            @Override // com.android.os.StatsLog.AlertTriggerDetailsOrBuilder
            public UidMapping.PackageInfoSnapshot getPackageInfo() {
                return ((AlertTriggerDetails) this.instance).getPackageInfo();
            }

            public Builder setPackageInfo(UidMapping.PackageInfoSnapshot value) {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).setPackageInfo((AlertTriggerDetails) value);
                return this;
            }

            public Builder setPackageInfo(UidMapping.PackageInfoSnapshot.Builder builderForValue) {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).setPackageInfo((AlertTriggerDetails) builderForValue);
                return this;
            }

            public Builder mergePackageInfo(UidMapping.PackageInfoSnapshot value) {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).mergePackageInfo(value);
                return this;
            }

            public Builder clearPackageInfo() {
                copyOnWrite();
                ((AlertTriggerDetails) this.instance).clearPackageInfo();
                return this;
            }
        }

        /* JADX INFO: Can't fix incorrect switch cases order, some code will duplicate */
        /* access modifiers changed from: protected */
        @Override // com.google.protobuf.GeneratedMessageLite
        public final Object dynamicMethod(GeneratedMessageLite.MethodToInvoke method, Object arg0, Object arg1) {
            boolean z = true;
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    return new AlertTriggerDetails();
                case IS_INITIALIZED:
                    return DEFAULT_INSTANCE;
                case MAKE_IMMUTABLE:
                    return null;
                case NEW_BUILDER:
                    return new Builder(null);
                case VISIT:
                    GeneratedMessageLite.Visitor visitor = (GeneratedMessageLite.Visitor) arg0;
                    AlertTriggerDetails other = (AlertTriggerDetails) arg1;
                    this.packageInfo_ = (UidMapping.PackageInfoSnapshot) visitor.visitMessage(this.packageInfo_, other.packageInfo_);
                    int i = AnonymousClass1.$SwitchMap$com$android$os$StatsLog$AlertTriggerDetails$ValueCase[other.getValueCase().ordinal()];
                    if (i == 1) {
                        if (this.valueCase_ != 1) {
                            z = false;
                        }
                        this.value_ = visitor.visitOneofMessage(z, this.value_, other.value_);
                    } else if (i == 2) {
                        if (this.valueCase_ != 2) {
                            z = false;
                        }
                        this.value_ = visitor.visitOneofMessage(z, this.value_, other.value_);
                    } else if (i == 3) {
                        if (this.valueCase_ == 0) {
                            z = false;
                        }
                        visitor.visitOneofNotSet(z);
                    }
                    if (visitor == GeneratedMessageLite.MergeFromVisitor.INSTANCE) {
                        int i2 = other.valueCase_;
                        if (i2 != 0) {
                            this.valueCase_ = i2;
                        }
                        this.bitField0_ |= other.bitField0_;
                    }
                    return this;
                case MERGE_FROM_STREAM:
                    CodedInputStream input = (CodedInputStream) arg0;
                    ExtensionRegistryLite extensionRegistry = (ExtensionRegistryLite) arg1;
                    boolean done = false;
                    while (!done) {
                        try {
                            int tag = input.readTag();
                            if (tag == 0) {
                                done = true;
                            } else if (tag == 10) {
                                MetricValue.Builder subBuilder = null;
                                if (this.valueCase_ == 1) {
                                    subBuilder = (MetricValue.Builder) ((MetricValue) this.value_).toBuilder();
                                }
                                this.value_ = input.readMessage(MetricValue.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom((GeneratedMessageLite) ((MetricValue) this.value_));
                                    this.value_ = subBuilder.buildPartial();
                                }
                                this.valueCase_ = 1;
                            } else if (tag == 18) {
                                EventMetricData.Builder subBuilder2 = null;
                                if (this.valueCase_ == 2) {
                                    subBuilder2 = (EventMetricData.Builder) ((EventMetricData) this.value_).toBuilder();
                                }
                                this.value_ = input.readMessage(EventMetricData.parser(), extensionRegistry);
                                if (subBuilder2 != null) {
                                    subBuilder2.mergeFrom((GeneratedMessageLite) ((EventMetricData) this.value_));
                                    this.value_ = subBuilder2.buildPartial();
                                }
                                this.valueCase_ = 2;
                            } else if (tag == 26) {
                                UidMapping.PackageInfoSnapshot.Builder subBuilder3 = null;
                                if ((this.bitField0_ & 4) == 4) {
                                    subBuilder3 = (UidMapping.PackageInfoSnapshot.Builder) this.packageInfo_.toBuilder();
                                }
                                this.packageInfo_ = (UidMapping.PackageInfoSnapshot) input.readMessage(UidMapping.PackageInfoSnapshot.parser(), extensionRegistry);
                                if (subBuilder3 != null) {
                                    subBuilder3.mergeFrom((GeneratedMessageLite) this.packageInfo_);
                                    this.packageInfo_ = (UidMapping.PackageInfoSnapshot) subBuilder3.buildPartial();
                                }
                                this.bitField0_ |= 4;
                            } else if (!parseUnknownField(tag, input)) {
                                done = true;
                            }
                        } catch (InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (IOException e2) {
                            throw new RuntimeException(new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    break;
                case GET_DEFAULT_INSTANCE:
                    break;
                case GET_PARSER:
                    if (PARSER == null) {
                        synchronized (AlertTriggerDetails.class) {
                            if (PARSER == null) {
                                PARSER = new GeneratedMessageLite.DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                default:
                    throw new UnsupportedOperationException();
            }
            return DEFAULT_INSTANCE;
        }

        static {
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static AlertTriggerDetails getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<AlertTriggerDetails> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    /* renamed from: com.android.os.StatsLog$1  reason: invalid class name */
    static /* synthetic */ class AnonymousClass1 {
        static final /* synthetic */ int[] $SwitchMap$com$android$os$StatsLog$AlertTriggerDetails$ValueCase = new int[AlertTriggerDetails.ValueCase.values().length];
        static final /* synthetic */ int[] $SwitchMap$com$android$os$StatsLog$ValueBucketInfo$SingleValueCase = new int[ValueBucketInfo.SingleValueCase.values().length];
        static final /* synthetic */ int[] $SwitchMap$com$android$os$StatsLog$ValueBucketInfo$Value$ValueCase = new int[ValueBucketInfo.Value.ValueCase.values().length];

        static {
            try {
                $SwitchMap$com$android$os$StatsLog$AlertTriggerDetails$ValueCase[AlertTriggerDetails.ValueCase.TRIGGER_METRIC.ordinal()] = 1;
            } catch (NoSuchFieldError e) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$AlertTriggerDetails$ValueCase[AlertTriggerDetails.ValueCase.TRIGGER_EVENT.ordinal()] = 2;
            } catch (NoSuchFieldError e2) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$AlertTriggerDetails$ValueCase[AlertTriggerDetails.ValueCase.VALUE_NOT_SET.ordinal()] = 3;
            } catch (NoSuchFieldError e3) {
            }
            $SwitchMap$com$android$os$StatsLog$StatsLogReport$DataCase = new int[StatsLogReport.DataCase.values().length];
            try {
                $SwitchMap$com$android$os$StatsLog$StatsLogReport$DataCase[StatsLogReport.DataCase.EVENT_METRICS.ordinal()] = 1;
            } catch (NoSuchFieldError e4) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$StatsLogReport$DataCase[StatsLogReport.DataCase.COUNT_METRICS.ordinal()] = 2;
            } catch (NoSuchFieldError e5) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$StatsLogReport$DataCase[StatsLogReport.DataCase.DURATION_METRICS.ordinal()] = 3;
            } catch (NoSuchFieldError e6) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$StatsLogReport$DataCase[StatsLogReport.DataCase.VALUE_METRICS.ordinal()] = 4;
            } catch (NoSuchFieldError e7) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$StatsLogReport$DataCase[StatsLogReport.DataCase.GAUGE_METRICS.ordinal()] = 5;
            } catch (NoSuchFieldError e8) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$StatsLogReport$DataCase[StatsLogReport.DataCase.DATA_NOT_SET.ordinal()] = 6;
            } catch (NoSuchFieldError e9) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$ValueBucketInfo$SingleValueCase[ValueBucketInfo.SingleValueCase.VALUE_LONG.ordinal()] = 1;
            } catch (NoSuchFieldError e10) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$ValueBucketInfo$SingleValueCase[ValueBucketInfo.SingleValueCase.VALUE_DOUBLE.ordinal()] = 2;
            } catch (NoSuchFieldError e11) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$ValueBucketInfo$SingleValueCase[ValueBucketInfo.SingleValueCase.SINGLEVALUE_NOT_SET.ordinal()] = 3;
            } catch (NoSuchFieldError e12) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$ValueBucketInfo$Value$ValueCase[ValueBucketInfo.Value.ValueCase.VALUE_LONG.ordinal()] = 1;
            } catch (NoSuchFieldError e13) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$ValueBucketInfo$Value$ValueCase[ValueBucketInfo.Value.ValueCase.VALUE_DOUBLE.ordinal()] = 2;
            } catch (NoSuchFieldError e14) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$ValueBucketInfo$Value$ValueCase[ValueBucketInfo.Value.ValueCase.VALUE_NOT_SET.ordinal()] = 3;
            } catch (NoSuchFieldError e15) {
            }
            $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke = new int[GeneratedMessageLite.MethodToInvoke.values().length];
            try {
                $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke[GeneratedMessageLite.MethodToInvoke.NEW_MUTABLE_INSTANCE.ordinal()] = 1;
            } catch (NoSuchFieldError e16) {
            }
            try {
                $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke[GeneratedMessageLite.MethodToInvoke.IS_INITIALIZED.ordinal()] = 2;
            } catch (NoSuchFieldError e17) {
            }
            try {
                $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke[GeneratedMessageLite.MethodToInvoke.MAKE_IMMUTABLE.ordinal()] = 3;
            } catch (NoSuchFieldError e18) {
            }
            try {
                $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke[GeneratedMessageLite.MethodToInvoke.NEW_BUILDER.ordinal()] = 4;
            } catch (NoSuchFieldError e19) {
            }
            try {
                $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke[GeneratedMessageLite.MethodToInvoke.VISIT.ordinal()] = 5;
            } catch (NoSuchFieldError e20) {
            }
            try {
                $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke[GeneratedMessageLite.MethodToInvoke.MERGE_FROM_STREAM.ordinal()] = 6;
            } catch (NoSuchFieldError e21) {
            }
            try {
                $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke[GeneratedMessageLite.MethodToInvoke.GET_DEFAULT_INSTANCE.ordinal()] = 7;
            } catch (NoSuchFieldError e22) {
            }
            try {
                $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke[GeneratedMessageLite.MethodToInvoke.GET_PARSER.ordinal()] = 8;
            } catch (NoSuchFieldError e23) {
            }
            $SwitchMap$com$android$os$StatsLog$DimensionsValue$ValueCase = new int[DimensionsValue.ValueCase.values().length];
            try {
                $SwitchMap$com$android$os$StatsLog$DimensionsValue$ValueCase[DimensionsValue.ValueCase.VALUE_STR.ordinal()] = 1;
            } catch (NoSuchFieldError e24) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$DimensionsValue$ValueCase[DimensionsValue.ValueCase.VALUE_INT.ordinal()] = 2;
            } catch (NoSuchFieldError e25) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$DimensionsValue$ValueCase[DimensionsValue.ValueCase.VALUE_LONG.ordinal()] = 3;
            } catch (NoSuchFieldError e26) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$DimensionsValue$ValueCase[DimensionsValue.ValueCase.VALUE_BOOL.ordinal()] = 4;
            } catch (NoSuchFieldError e27) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$DimensionsValue$ValueCase[DimensionsValue.ValueCase.VALUE_FLOAT.ordinal()] = 5;
            } catch (NoSuchFieldError e28) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$DimensionsValue$ValueCase[DimensionsValue.ValueCase.VALUE_TUPLE.ordinal()] = 6;
            } catch (NoSuchFieldError e29) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$DimensionsValue$ValueCase[DimensionsValue.ValueCase.VALUE_STR_HASH.ordinal()] = 7;
            } catch (NoSuchFieldError e30) {
            }
            try {
                $SwitchMap$com$android$os$StatsLog$DimensionsValue$ValueCase[DimensionsValue.ValueCase.VALUE_NOT_SET.ordinal()] = 8;
            } catch (NoSuchFieldError e31) {
            }
        }
    }
}
