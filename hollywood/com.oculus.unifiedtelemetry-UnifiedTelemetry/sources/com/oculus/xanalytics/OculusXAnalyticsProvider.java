package com.oculus.xanalytics;

import X.AbstractC0096Hu;
import X.AbstractC0247Xu;
import X.C0515sp;
import X.QC;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Inject;
import com.facebook.xanalytics.XAnalyticsAdapter;
import com.facebook.xanalytics.XAnalyticsAdapterHolder;
import com.oculus.logging.utils.Event;
import com.oculus.logging.utils.EventManager;

@Dependencies({"_UL__ULSEP_com_oculus_logging_utils_EventManager_ULSEP_BINDING_ID"})
public class OculusXAnalyticsProvider {
    public QC _UL_mInjectionContext;
    public final XAnalyticsAdapterHolder mXAnalyticsAdapter = new XAnalyticsAdapterHolder(new XAnalyticsAdapter() {
        /* class com.oculus.xanalytics.OculusXAnalyticsProvider.AnonymousClass1 */

        @Override // com.facebook.xanalytics.XAnalyticsAdapter
        public final void cleanup() {
        }

        @Override // com.facebook.xanalytics.XAnalyticsAdapter
        public final void flush() {
        }

        @Override // com.facebook.xanalytics.XAnalyticsAdapter
        public final String getStructureSamplingConfig(String str) {
            return "";
        }

        @Override // com.facebook.xanalytics.XAnalyticsAdapter
        public final void logCounter(String str, double d) {
        }

        @Override // com.facebook.xanalytics.XAnalyticsAdapter
        public final void logCounter(String str, double d, String str2) {
        }

        @Override // com.facebook.xanalytics.XAnalyticsAdapter
        public final boolean shouldLog(String str) {
            return true;
        }

        @Override // com.facebook.xanalytics.XAnalyticsAdapter
        public final void logEvent(String str, String str2, String str3, boolean z, double d) {
            ((EventManager) AbstractC0096Hu.A03(0, 106, OculusXAnalyticsProvider.this._UL_mInjectionContext)).A1i(str, str2, z).A3Q();
        }

        @Override // com.facebook.xanalytics.XAnalyticsAdapter
        public final void logEventBypassSampling(String str, String str2) {
            Event A1i = ((EventManager) AbstractC0096Hu.A03(0, 106, OculusXAnalyticsProvider.this._UL_mInjectionContext)).A1i(str, str2, false);
            A1i.A5C();
            A1i.A3Q();
        }
    });

    @AutoGeneratedAccessMethod
    public static final OculusXAnalyticsProvider A00(AbstractC0247Xu xu) {
        return (OculusXAnalyticsProvider) C0515sp.A00(136, xu);
    }

    @AutoGeneratedFactoryMethod
    public static final OculusXAnalyticsProvider A01(AbstractC0247Xu xu) {
        return new OculusXAnalyticsProvider(xu);
    }

    @Inject
    public OculusXAnalyticsProvider(AbstractC0247Xu xu) {
        this._UL_mInjectionContext = new QC(1, xu);
    }
}
