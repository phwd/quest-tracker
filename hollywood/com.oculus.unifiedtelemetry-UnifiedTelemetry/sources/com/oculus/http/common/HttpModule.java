package com.oculus.http.common;

import X.AbstractC0247Xu;
import X.AnonymousClass06;
import X.C00228l;
import X.C0324cr;
import X.C0365dm;
import X.C0376dz;
import X.C0515sp;
import X.EnumC0356dd;
import X.I0;
import X.K8;
import X.LD;
import X.Mu;
import X.SN;
import X.SO;
import X.SR;
import X.e0;
import X.e3;
import X.e4;
import X.e5;
import X.e6;
import com.facebook.inject.AutoGeneratedBinder;
import com.facebook.inject.InjectorModule;
import com.facebook.inject.ProviderMethod;
import com.facebook.ultralight.AutoGeneratedAccessMethod;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.AutoGeneratedSwitchIdClass;
import com.oculus.http.socketconfig.SocketConfigModule;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.concurrent.TimeUnit;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.X509TrustManager;

@InjectorModule
public class HttpModule extends I0 {
    public static final String TAG = "HttpModule";

    @AutoGeneratedBinder
    public static class AutoGeneratedBindingsForHttpModule {
    }

    @AutoGeneratedSwitchIdClass
    public static final class UL_id {
        public static final int _UL__ULSEP_okhttp3_CertificatePinner_ULSEP_BINDING_ID = 5;
        public static final int _UL__ULSEP_okhttp3_ConnectionSpec_ULSEP_BINDING_ID = 55;
        public static final int _UL__ULSEP_okhttp3_OkHttpClient_ULSEP_BINDING_ID = 58;
    }

    @AutoGeneratedAccessMethod
    public static final e4 A01(AbstractC0247Xu xu) {
        return (e4) C0515sp.A00(5, xu);
    }

    @ProviderMethod
    public static e4 A00(K8 k8) {
        if (k8.A00 < System.currentTimeMillis() - 31536000000L) {
            return e4.A02;
        }
        e6 e6Var = new e6();
        String[] strArr = SO.A00;
        for (String str : strArr) {
            String[] strArr2 = SR.A00;
            for (String str2 : strArr2) {
                String[] strArr3 = {AnonymousClass06.A04("sha256/", str)};
                if (str2 != null) {
                    String str3 = strArr3[0];
                    List<e5> list = e6Var.A00;
                    list.add(new e5(str2, str3));
                    String A04 = AnonymousClass06.A04("*.", str2);
                    String[] strArr4 = {AnonymousClass06.A04("sha256/", str)};
                    if (A04 != null) {
                        list.add(new e5(A04, strArr4[0]));
                    }
                }
                throw new NullPointerException("pattern == null");
            }
        }
        return new e4(new LinkedHashSet(e6Var.A00), null);
    }

    @ProviderMethod
    public static C0376dz A03() {
        e0 e0Var = new e0(C0376dz.A06);
        e0Var.A03(EnumC0356dd.TLS_1_2);
        e0Var.A02(e3.A0b, e3.A0n, e3.A0G);
        return new C0376dz(e0Var);
    }

    @AutoGeneratedAccessMethod
    public static final C0376dz A05(AbstractC0247Xu xu) {
        return (C0376dz) C0515sp.A00(55, xu);
    }

    @AutoGeneratedAccessMethod
    public static final LD A06(AbstractC0247Xu xu) {
        return (LD) C0515sp.A00(58, xu);
    }

    @ProviderMethod
    public static LD A08(e4 e4Var, C0376dz dzVar, K8 k8) {
        String str;
        C0365dm dmVar = new C0365dm();
        long j = (long) 15000;
        TimeUnit timeUnit = TimeUnit.MILLISECONDS;
        dmVar.A0E = C0365dm.A00(j, timeUnit);
        dmVar.A0F = C0365dm.A00(j, timeUnit);
        dmVar.A0G = C0365dm.A00(0, timeUnit);
        if (e4Var != null) {
            dmVar.A0K = e4Var;
            dmVar.A0H = Collections.unmodifiableList(new ArrayList(Arrays.asList(dzVar)));
            SN sn = new SN(k8.A00);
            try {
                SSLContext instance = SSLContext.getInstance("TLS");
                X509TrustManager[] x509TrustManagerArr = sn.A00;
                instance.init(null, x509TrustManagerArr, null);
                SSLSocketFactory socketFactory = instance.getSocketFactory();
                X509TrustManager x509TrustManager = x509TrustManagerArr[0];
                if (socketFactory == null) {
                    str = "sslSocketFactory == null";
                } else if (x509TrustManager != null) {
                    dmVar.A0J = socketFactory;
                    dmVar.A0L = C0324cr.A00.A03(x509TrustManager);
                    return new LD(dmVar);
                } else {
                    str = "trustManager == null";
                }
                throw new NullPointerException(str);
            } catch (KeyManagementException | NoSuchAlgorithmException e) {
                Mu.A02(TAG, "failed to setup ssl socket factory", e);
            }
        } else {
            throw new NullPointerException("certificatePinner == null");
        }
    }

    @AutoGeneratedFactoryMethod
    public static final e4 A02(AbstractC0247Xu xu) {
        return A00(C00228l.A00(xu));
    }

    @AutoGeneratedFactoryMethod
    public static final C0376dz A04() {
        return A03();
    }

    @AutoGeneratedFactoryMethod
    public static final LD A07(AbstractC0247Xu xu) {
        SocketConfigModule.A01(xu);
        return A08(A01(xu), A05(xu), C00228l.A00(xu));
    }
}
