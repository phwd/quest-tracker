package com.oculus.unifiedtelemetry.credentialsmanager;

import X.AbstractC0096Hu;
import X.AbstractC0247Xu;
import X.Pj;
import X.QC;
import android.content.Intent;
import android.os.Handler;
import android.os.Looper;
import android.os.Parcelable;
import android.os.ResultReceiver;
import com.facebook.inject.ApplicationScoped;
import com.facebook.ultralight.AutoGeneratedFactoryMethod;
import com.facebook.ultralight.Dependencies;
import com.facebook.ultralight.Eager;
import com.facebook.ultralight.Inject;
import com.oculus.auth.credentials.Credentials;
import com.oculus.auth.credentials.CredentialsManager;
import com.oculus.auth.service.contract.ServiceContract;
import com.oculus.authapi.OVRAuth;
import com.oculus.authapi.inject.OVRAuthModule;
import com.oculus.directboot.DirectBootUtils;

@Dependencies({"_UL__ULSEP_com_oculus_authapi_OVRAuth_ULSEP_BINDING_ID", "_UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_handler_LoginHandler_ULGT__ULSEP_BINDING_ID", "_UL__ULSEP_java_util_Set_ULLT_com_oculus_auth_credentials_CredentialsChangedHandler_ULGT__ULSEP_BINDING_ID", "_UL__ULSEP_com_oculus_unifiedtelemetry_credentialsmanager_UnifiedTelemetryCredentialsPrefs_ULSEP_BINDING_ID"})
@ApplicationScoped
public class UnifiedTelemetryCredentialsManager implements CredentialsManager {
    public static final String TAG = "UnifiedTelemetryCredentialsManager";
    public static volatile UnifiedTelemetryCredentialsManager _UL__ULSEP_com_oculus_unifiedtelemetry_credentialsmanager_UnifiedTelemetryCredentialsManager_ULSEP_INSTANCE;
    public QC _UL_mInjectionContext;
    public Credentials mCredentials;
    public final OVRAuth mOVRAuth;
    @Inject
    @Eager
    public final UnifiedTelemetryCredentialsPrefs mUnifiedTelemetryCredentialsPrefs;

    public final synchronized void A02() {
        String str;
        String string = this.mUnifiedTelemetryCredentialsPrefs.mDeviceProtectedSharedPreferences.getString(UnifiedTelemetryCredentialsPrefs.KEY_USER_ID, null);
        UnifiedTelemetryCredentialsPrefs unifiedTelemetryCredentialsPrefs = this.mUnifiedTelemetryCredentialsPrefs;
        synchronized (unifiedTelemetryCredentialsPrefs) {
            str = null;
            if (((DirectBootUtils) AbstractC0096Hu.A03(1, 121, unifiedTelemetryCredentialsPrefs._UL_mInjectionContext)).A01()) {
                str = UnifiedTelemetryCredentialsPrefs.A00(unifiedTelemetryCredentialsPrefs).getString("access_token", null);
            }
        }
        this.mCredentials = new Credentials(string, str);
        A01(this, false);
    }

    @Override // com.oculus.auth.credentials.CredentialsManager
    public final synchronized Credentials getCredentials() {
        return this.mCredentials;
    }

    @AutoGeneratedFactoryMethod
    public static final UnifiedTelemetryCredentialsManager A00(AbstractC0247Xu xu) {
        if (_UL__ULSEP_com_oculus_unifiedtelemetry_credentialsmanager_UnifiedTelemetryCredentialsManager_ULSEP_INSTANCE == null) {
            synchronized (UnifiedTelemetryCredentialsManager.class) {
                Pj A00 = Pj.A00(_UL__ULSEP_com_oculus_unifiedtelemetry_credentialsmanager_UnifiedTelemetryCredentialsManager_ULSEP_INSTANCE, xu);
                if (A00 != null) {
                    try {
                        AbstractC0247Xu applicationInjector = xu.getApplicationInjector();
                        _UL__ULSEP_com_oculus_unifiedtelemetry_credentialsmanager_UnifiedTelemetryCredentialsManager_ULSEP_INSTANCE = new UnifiedTelemetryCredentialsManager(applicationInjector, OVRAuthModule.A00(applicationInjector));
                    } finally {
                        A00.A01();
                    }
                }
            }
        }
        return _UL__ULSEP_com_oculus_unifiedtelemetry_credentialsmanager_UnifiedTelemetryCredentialsManager_ULSEP_INSTANCE;
    }

    public static void A01(UnifiedTelemetryCredentialsManager unifiedTelemetryCredentialsManager, final boolean z) {
        Parcelable parcelable;
        OVRAuth oVRAuth = unifiedTelemetryCredentialsManager.mOVRAuth;
        AnonymousClass1 r1 = new ResultReceiver(new Handler(Looper.getMainLooper())) {
            /* class com.oculus.unifiedtelemetry.credentialsmanager.UnifiedTelemetryCredentialsManager.AnonymousClass1 */

            /* JADX WARNING: Removed duplicated region for block: B:23:0x0074  */
            /* JADX WARNING: Removed duplicated region for block: B:33:? A[RETURN, SYNTHETIC] */
            /* JADX WARNING: Removed duplicated region for block: B:9:0x0034 A[LOOP:0: B:7:0x002e->B:9:0x0034, LOOP_END] */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final void onReceiveResult(int r5, android.os.Bundle r6) {
                /*
                // Method dump skipped, instructions count: 166
                */
                throw new UnsupportedOperationException("Method not decompiled: com.oculus.unifiedtelemetry.credentialsmanager.UnifiedTelemetryCredentialsManager.AnonymousClass1.onReceiveResult(int, android.os.Bundle):void");
            }
        };
        Intent intent = new Intent(ServiceContract.ACTION_STATUS);
        intent.setPackage("com.oculus.horizon");
        OVRAuth.CallerInfoProvider callerInfoProvider = oVRAuth.mCallerInfoProvider;
        if (callerInfoProvider != null) {
            callerInfoProvider.A1I(intent);
        }
        OVRAuth.AnonymousClass8 r2 = 
        /*  JADX ERROR: Method code generation error
            jadx.core.utils.exceptions.CodegenException: Error generate insn: 0x0025: CONSTRUCTOR  (r2v0 'r2' com.oculus.authapi.OVRAuth$8) = 
              (r4v0 'oVRAuth' com.oculus.authapi.OVRAuth)
              (r1v1 'r1' com.oculus.unifiedtelemetry.credentialsmanager.UnifiedTelemetryCredentialsManager$1)
             call: com.oculus.authapi.OVRAuth.8.<init>(com.oculus.authapi.OVRAuth, android.os.ResultReceiver):void type: CONSTRUCTOR in method: com.oculus.unifiedtelemetry.credentialsmanager.UnifiedTelemetryCredentialsManager.A01(com.oculus.unifiedtelemetry.credentialsmanager.UnifiedTelemetryCredentialsManager, boolean):void, file: classes.dex
            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:255)
            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:217)
            	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:110)
            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:56)
            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:93)
            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:59)
            	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:244)
            	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:237)
            	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:342)
            	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:295)
            	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:264)
            	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
            	at java.util.ArrayList.forEach(ArrayList.java:1259)
            	at java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
            	at java.util.stream.Sink$ChainedReference.end(Sink.java:258)
            Caused by: jadx.core.utils.exceptions.JadxRuntimeException: Expected class to be processed at this point, class: com.oculus.authapi.OVRAuth, state: GENERATED_AND_UNLOADED
            	at jadx.core.dex.nodes.ClassNode.ensureProcessed(ClassNode.java:215)
            	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:630)
            	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:363)
            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:249)
            	... 14 more
            */
        /*
            com.oculus.authapi.OVRAuth r4 = r5.mOVRAuth
            android.os.Looper r1 = android.os.Looper.getMainLooper()
            android.os.Handler r0 = new android.os.Handler
            r0.<init>(r1)
            com.oculus.unifiedtelemetry.credentialsmanager.UnifiedTelemetryCredentialsManager$1 r1 = new com.oculus.unifiedtelemetry.credentialsmanager.UnifiedTelemetryCredentialsManager$1
            r1.<init>(r0, r6)
            java.lang.String r0 = "com.oculus.auth.ACTION_STATUS"
            android.content.Intent r3 = new android.content.Intent
            r3.<init>(r0)
            java.lang.String r0 = "com.oculus.horizon"
            r3.setPackage(r0)
            com.oculus.authapi.OVRAuth$CallerInfoProvider r0 = r4.mCallerInfoProvider
            if (r0 == 0) goto L_0x0023
            r0.A1I(r3)
        L_0x0023:
            com.oculus.authapi.OVRAuth$8 r2 = new com.oculus.authapi.OVRAuth$8
            r2.<init>(r1)
            boolean r0 = r4.mIsUnderTest
            if (r0 == 0) goto L_0x003a
            com.oculus.authapi.OVRAuth$TestReceiverForSending r0 = new com.oculus.authapi.OVRAuth$TestReceiverForSending
            r0.<init>(r2)
        L_0x0031:
            java.lang.String r1 = "receiver"
            r3.putExtra(r1, r0)
            com.oculus.authapi.OVRAuth.A00(r4, r3)
            return
        L_0x003a:
            android.os.Parcel r1 = android.os.Parcel.obtain()
            r0 = 0
            r2.writeToParcel(r1, r0)
            r1.setDataPosition(r0)
            android.os.Parcelable$Creator r0 = android.os.ResultReceiver.CREATOR
            java.lang.Object r0 = r0.createFromParcel(r1)
            android.os.ResultReceiver r0 = (android.os.ResultReceiver) r0
            r1.recycle()
            goto L_0x0031
        */
        throw new UnsupportedOperationException("Method not decompiled: com.oculus.unifiedtelemetry.credentialsmanager.UnifiedTelemetryCredentialsManager.A01(com.oculus.unifiedtelemetry.credentialsmanager.UnifiedTelemetryCredentialsManager, boolean):void");
    }

    @Inject
    public UnifiedTelemetryCredentialsManager(AbstractC0247Xu xu, OVRAuth oVRAuth) {
        this._UL_mInjectionContext = new QC(2, xu);
        this.mUnifiedTelemetryCredentialsPrefs = UnifiedTelemetryCredentialsPrefs.A01(xu);
        this.mOVRAuth = oVRAuth;
        A02();
    }
}
